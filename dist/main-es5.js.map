{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/components/categories/categories/categories.component.html","webpack:///src/app/components/categories/categories/categories.component.ts","webpack:///src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component.ts","webpack:///src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component.html","webpack:///src/app/components/requisitions/requisition-detail/requisition-detail.component.ts","webpack:///src/app/components/requisitions/requisition-detail/requisition-detail.component.html","webpack:///src/app/demo-material-module.ts","webpack:///src/app/helpers/excel-service.service.ts","webpack:///src/app/layouts/full/full.component.ts","webpack:///src/app/layouts/full/full.component.html","webpack:///src/app/layouts/full/header/header.component.ts","webpack:///src/app/layouts/full/header/header.component.html","webpack:///src/app/layouts/full/sidebar/sidebar.component.html","webpack:///src/app/layouts/full/sidebar/sidebar.component.ts","webpack:///src/app/pages/categories/categories-list/categories-list.component.ts","webpack:///src/app/pages/categories/categories-list/categories-list.component.html","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/projects/project-capture/project-capture.component.html","webpack:///src/app/pages/projects/project-capture/project-capture.component.ts","webpack:///src/app/pages/purchaseOrder/po-list/po-list.component.html","webpack:///src/app/pages/purchaseOrder/po-list/po-list.component.ts","webpack:///src/app/pages/quotation/quotation-list/quotation-list.component.html","webpack:///src/app/pages/quotation/quotation-list/quotation-list.component.ts","webpack:///src/app/pages/requisition/requisition-list/requisition-list.component.html","webpack:///src/app/pages/requisition/requisition-list/requisition-list.component.ts","webpack:///src/app/pages/storageInvoice/storage-invoice-list/storage-invoice-list.component.html","webpack:///src/app/pages/storageInvoice/storage-invoice-list/storage-invoice-list.component.ts","webpack:///src/app/services/category/category.service.ts","webpack:///src/app/services/login/login.service.ts","webpack:///src/app/services/projectCtegory/projectCateogry.service.ts","webpack:///src/app/services/projects/project.service.ts","webpack:///src/app/shared/accordion/accordion.directive.ts","webpack:///src/app/shared/accordion/accordionanchor.directive.ts","webpack:///src/app/shared/accordion/accordionlink.directive.ts","webpack:///src/app/shared/menu-items/menu-items.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/spinner.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///node_modules/moment/locale|sync|/^/.*$","webpack:///ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|crypto","webpack:///ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|fs","webpack:///ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|stream"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","AppComponent","AppModule","provide","LocationStrategy","useClass","PathLocationStrategy","BrowserModule","BrowserAnimationsModule","DemoMaterialModule","FormsModule","FlexLayoutModule","HttpClientModule","SharedModule","MatTableModule","MatSortModule","MatFormFieldModule","MatInputModule","ReactiveFormsModule","RouterModule","AppRoutes","FullComponent","AppHeaderComponent","SpinnerComponent","AppSidebarComponent","CategoriesComponent","LoginComponent","CategoriesListComponent","ProjectCaptureDetailComponent","ProjectCaptureComponent","RequisitionListComponent","RequisitionDetailComponent","QuotationListComponent","PoListComponent","StorageInvoiceListComponent","path","component","children","redirectTo","pathMatch","loadChildren","m","MaterialComponentsModule","DashboardModule","ProjectModule","CategoriesModule","RequisitionModule","QuotationModule","PoModule","StorageModule","$event","stopPropagation","dialogRef","data","snackBar","_projectCategoryservice","formBuilder","pageIndex","pageSize","currentPage","totalSize","almacen","fecha_inicial","Date","format","proyecto_id","responsable","presupuesto","activo","displayedColumns","projectInfo","arrayData","projectId","newProject","group","FormControl","Validators","getproyectosCategorias","getProjectCateogryById","subscribe","res","console","log","datasourceProjectCategories","MatTableDataSource","array","length","sort","error","element","arraySaveData","proyectocategoria_id","codigo_proyectocategoria","almacen_id","event","close","MAT_DIALOG_DATA","MatSort","MatPaginator","salir","_projectService","_categoryService","fecha_inicial_proyecto","fecha_final_proyecto","nombre_proyecto","cliente","presupuesto_proyecto","responsable_proyecto","centro_de_costo_proyecto","codigo_proyecto","datasourceCategories","centroDeCostos","getEnabledCategories","patchValue","getCategoryAll","form","arrayTodb","cliente_id","centro_de_costo_proyecto_id","insertProjects","insertCategories","updateProjects","datasourceProyectos","proyectoIdMaximo","codigoProyecto","arrayProjectCategories","getProjectAll","filteredData","find","forEach","codigo_categoria","categoria_id","fechaInicial","save","cancel","MatAutocompleteModule","MatButtonModule","MatBottomSheetModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatDialogModule","MatExpansionModule","MatGridListModule","MatIconModule","MatListModule","MatMenuModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatBadgeModule","MatSidenavModule","MatSlideToggleModule","MatSliderModule","MatSnackBarModule","MatStepperModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatNativeDateModule","CdkTableModule","A11yModule","BidiModule","CdkAccordionModule","ObserversModule","OverlayModule","PlatformModule","PortalModule","EXCEL_TYPE","EXCEL_EXTENSION","ExcelServiceService","json","excelFileName","worksheet","workbook","Sheets","SheetNames","excelBuffer","bookType","type","saveAsExcelFile","buffer","fileName","Blob","getTime","changeDetectorRef","media","menuItems","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","removeListener","service","routes","msg","uname","p","output","checkusernameandpassword","navigate","loginservice","check","dialog","_excelService","projectData","filterChange","EventEmitter","getProjects","dataSourceShow","iterator","dialogConfig","MatDialogConfig","width","height","disableClose","title","open","afterClosed","result","proyectoId","window","location","reload","dataSourceShowToExcel","push","nombre_cliente","exportAsExcelFile","end","start","part","slice","paginator","filtro","target","value","filter","trim","toLowerCase","filtrar","descargarProyectos","nuevoProyecto","handlePage","ordenDeCompra_Id","Categoria_Id","Requisicion_Id","Fecha_OrdenDeCompra","Estatus","categoria","requisicion","Fecha_Requisicion","estatus","evetn","requisicionId","descargarExcel","nuevaRequisicion","categoryservice","http","get","environment","arrayToDb","put","post","pwd","localStorage","setItem","projectCategoryservice","projectservice","AccordionDirective","router","navlinks","setTimeout","checkOpenLinks","selectedLink","link","selected","index","indexOf","splice","routeUrl","url","currentUrl","split","closeOtherLinks","events","pipe","NavigationEnd","AccordionAnchorDirective","navlink","toggle","AccordionLinkDirective","nav","_selected","addLink","removeGroup","MENUITEMS","state","name","icon","MenuItems","document","isSpinnerVisible","backgroundColor","NavigationStart","NavigationCancel","NavigationError","DOCUMENT","production","urlapi","apiContextDrivers","enableProdMode","platformBrowser","bootstrapModule","err","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {}\r\n","<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<router-outlet><app-spinner></app-spinner></router-outlet>","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\r\nimport { AppRoutes } from './app.routing';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\r\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DemoMaterialModule } from './demo-material-module';\r\nimport { LoginComponent } from './pages/login/login.component';  \r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { SpinnerComponent } from './shared/spinner.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { CategoriesComponent } from './components/categories/categories/categories.component';\r\nimport { CategoriesListComponent } from './pages/categories/categories-list/categories-list.component';\r\nimport { ProjectCaptureDetailComponent } from '../app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\r\nimport { ProjectCaptureComponent } from '../app/pages/projects/project-capture/project-capture.component';\r\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { RequisitionListComponent } from './pages/requisition/requisition-list/requisition-list.component';\nimport { RequisitionDetailComponent } from './components/requisitions/requisition-detail/requisition-detail.component';\nimport { QuotationListComponent } from './pages/quotation/quotation-list/quotation-list.component';\nimport { PoListComponent } from './pages/purchaseOrder/po-list/po-list.component';\nimport { StorageInvoiceListComponent } from './pages/storageInvoice/storage-invoice-list/storage-invoice-list.component' \r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FullComponent,\r\n    AppHeaderComponent,\r\n    SpinnerComponent,\r\n    AppSidebarComponent,\r\n    CategoriesComponent,\r\n    LoginComponent,\r\n    CategoriesListComponent,\r\n    ProjectCaptureDetailComponent,\r\n    ProjectCaptureComponent,\r\n    RequisitionListComponent,\r\n    RequisitionDetailComponent,\r\n    QuotationListComponent,\r\n    PoListComponent,\r\n    StorageInvoiceListComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    DemoMaterialModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot(AppRoutes)\r\n  ],\r\n  exports:[ MatTableModule ],\r\n  providers: [\r\n    {\r\n      provide: LocationStrategy,\r\n      useClass: PathLocationStrategy\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\n\r\nexport const AppRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FullComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'login',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: '',\r\n        loadChildren:\r\n          () => import('./material-component/material.module').then(m => m.MaterialComponentsModule)\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\r\n      },\r\n      {\r\n        path: 'project',\r\n        loadChildren: () => import('./pages/projects/project-capture/project.module').then(m => m.ProjectModule)\r\n      },\r\n      {\r\n        path: 'categories',\r\n        loadChildren: () => import('./pages/categories/categories-list/categories.module').then(m => m.CategoriesModule)\r\n      },\r\n      {\r\n        path: 'requisition',\r\n        loadChildren: () => import('./pages/requisition/requisition-list/requisition.module').then(m => m.RequisitionModule)\r\n      },\r\n      {\r\n        path: 'quotation',\r\n        loadChildren: () => import('./pages/quotation/quotation-list/quotation.module').then(m => m.QuotationModule)\r\n      },\r\n      {\r\n        path: 'po',\r\n        loadChildren: () => import('./pages/purchaseOrder/po-list/po.module').then(m => m.PoModule)\r\n      },\r\n      {\r\n        path: 'storage',\r\n        loadChildren: () => import('./pages/storageInvoice/storage-invoice-list/storage.module').then(m => m.StorageModule)\r\n      }\r\n    ]\r\n  },\r\n  {\r\n      path: 'login',\r\n      component: LoginComponent,\r\n  }\r\n];\r\n","<div fxLayout=\"row\" [formGroup]=\"newProject\">\n    <div fxFlex.gt-sm=\"95%\" >\n            <mat-card>\n              <mat-table [dataSource]=\"datasourceProjectCategories\" matSort class=\"mat-elevation-z8\" style=\"vertical-align: middle;\">\n                <ng-container matColumnDef=\"select\">\n                  <th mat-header-cell *matHeaderCellDef>\n                      <div style=\"width: 100%; text-align: left; vertical-align: middle;\">\n                          ACTIVAR\n                  </div>\n                    </th>\n                    <div style=\"width: 50px;\">\n                    <td mat-cell *matCellDef=\"let element; let i = index\">\n                      <mat-checkbox color=\"warn\"\n                                  \n                                  (click)=\"$event.stopPropagation()\"\n                                  (change)=\"ActivarDesactivar(element.activo, $event)\"\n                                  ><!--[checked]=\"selection.isSelected(element.proyecto_id)\"-->\n                                  <!--[(ngModel)]=\"element.activo\" -->\n                      </mat-checkbox>\n                    </td>\n                  </div>\n              </ng-container>\n\n              <!-- Position Column -->\n              <ng-container matColumnDef=\"codigo_proyectocategoria\" >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-column-20\"> <span class=\"order-th\">Número <mat-icon class=\"orage-icon\" aria-hidden=\"false\"></mat-icon></span> </th>\n                <td mat-cell *matCellDef=\"let element\" style=\"width: 500px;\"> {{element.codigo_proyectocategoria}} </td>\n              </ng-container>\n\n              <!-- Position Column -->\n              <ng-container matColumnDef=\"nombre_categoria\" >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-column-20\"> <span class=\"order-th\">Nombre <mat-icon class=\"orage-icon\" aria-hidden=\"false\"></mat-icon></span> </th>\n                <td mat-cell *matCellDef=\"let element\" style=\"width: 500px;\"> {{element.nombre_categoria}} </td>\n              </ng-container>\n\n              <!-- responsable Column -->\n              <ng-container matColumnDef=\"responsable\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Responable </th>\n                <td mat-cell *matCellDef=\"let element\"> <input type=\"text\" class=\"controltable100\" formControlName=\"responsable\"> </td><!--[(ngModel)]=\"element.responsable\" -->\n              </ng-container>\n\n              <!-- presupuesto Column -->\n              <ng-container matColumnDef=\"presupuesto\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Presupuesto </th>\n                <td mat-cell *matCellDef=\"let element\"> <input type=\"text\" class=\"controltable100\" formControlName=\"presupuesto\"> </td><!--[(ngModel)]=\"element.presupuesto\" -->\n              </ng-container>\n\n              <!-- fecha incial Column -->\n              <ng-container matColumnDef=\"fecha_inicial\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha incial </th>\n                <td mat-cell *matCellDef=\"let element\"> <div><mat-form-field appearance=\"fill\">\n                  <mat-label>Selecciona</mat-label>\n                  <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha_inicial\" (dateChange)=\"fechaInicial($event)\" class=\"controltable100\" [(ngModel)]=\"element.fecha_inicial\"><!--[(ngModel)]=\"element.fecha_inicial\" -->\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                  <mat-datepicker #picker></mat-datepicker>\n                </mat-form-field></div></td>\n              </ng-container>\n\n              <!-- almacen Column -->\n              <ng-container matColumnDef=\"almacen_id\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Almacen </th>\n                <td mat-cell *matCellDef=\"let element\"> <div><mat-select class=\"form-control\"  formControlName=\"almacen\" [(ngModel)]=\"element.almacen\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\"-->\n                  <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n                  <mat-option value= \"1\">California</mat-option>\n                  <mat-option value= \"2\">Norte</mat-option>\n                  <mat-option value= \"3\">Centro</mat-option>\n                  </mat-select></div> </td>\n              </ng-container>\n\n              <!-- Email Column -->\n              <ng-container matColumnDef=\"actualizar\">\n                <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Actualizar </th>\n                <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"save(element, $event)\">Actualizar</button> </td>\n              </ng-container>\n              \n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n              </mat-table> \n            </mat-card>\n            <table>\n                <tr>\n                  <td style=\"width: 10px;\"></td>\n                  <td style=\"width: 300px;\"></td>\n                  <td style=\"width: 500px;\"></td>\n                  <td style=\"width: 100px;\"></td>\n                  <td style=\"width: 100px;\"><button mat-raised-button color=\"warn\" (click)=\"salir()\">Cerrar</button></td>\n                  <td style=\"width: 100px;\"></td>\n                  <td style=\"width: 10px;\"></td>\n                </tr>\n              </table>\n    </div>\n</div>","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {MatListModule} from '@angular/material/list';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n  projectInfo : any;\n  projectId : any;\n\n  almacen : any = 1;\n  fecha_inicial : any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  proyecto_id : any = 0;\n  responsable : any = '';\n  presupuesto : any = 0;\n  activo : any = false;\n\n  displayedColumns: string[] = ['select','codigo_proyectocategoria', 'nombre_categoria', 'responsable', 'presupuesto', 'fecha_inicial', 'almacen_id', 'actualizar'];\n  datasourceProjectCategories : MatTableDataSource<projectCategoryModel>\n  newProject: FormGroup;\n  \n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n\n  constructor(public dialogRef: MatDialogRef<projectCategoryModel>\n      , @Inject(MAT_DIALOG_DATA) public data,public snackBar: MatSnackBar\n      , private _projectCategoryservice : projectCategoryservice\n      , private formBuilder: FormBuilder) { \n        this.projectInfo = data.arrayData;\n        this.projectId = data.projectId;\n\n        this.newProject = this.formBuilder.group({\n          responsable: new FormControl(''),\n          presupuesto: new FormControl(''),\n          fecha_inicial: new FormControl('', Validators.required),\n          almacen: new FormControl('')\n      });\n      }\n\n  ngOnInit(): void {\n    \n    this.getproyectosCategorias();\n  }\n\n  getproyectosCategorias(){\n    // Proyectos categorias\n    this._projectCategoryservice.getProjectCateogryById(this.projectId).subscribe(\n      res=> {\n        console.log('Proyectos', res);\n        this.datasourceProjectCategories = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        this.datasourceProjectCategories.sort = this.sort;\n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n\n  }\n\n  ActivarDesactivar(element : any){\nconsole.log('Actualiza registro de activar y desactivar', element)\n  }\n\n  save(element : any){\n    console.log('element', element);\n    let arraySaveData : any;\n\n    arraySaveData = {proyectocategoria_id : element.proyectocategoria_id\n          , codigo_proyectocategoria : element.codigo_proyectocategoria\n          , presupuesto : element.presupuesto\n          , responsable : element.responsable\n          , fecha_inicial : element.fecha_inicial\n          , almacen_id : element.almacen_id\n          , activo : element.activo}\n\n          console.log('datos a actualizar', arraySaveData)\n\n  }\n\n  fechaInicial(event){\n\n  }\n\n  salir(){\n    this.dialogRef.close();\n  }\n\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport { from } from 'rxjs';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryModel } from '../../../models/category.model';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { ProjectCaptureComponent } from 'src/app/pages/projects/project-capture/project-capture.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\n\n@Component({\n  selector: 'app-project-capture-detail',\n  templateUrl: './project-capture-detail.component.html',\n  styleUrls: ['./project-capture-detail.component.css']\n})\nexport class ProjectCaptureDetailComponent implements OnInit {\n\t\n  fecha_inicial_proyecto:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  fecha_final_proyecto:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  nombre_proyecto : any = ''  \n  cliente : any = '0';\n  presupuesto_proyecto : any = 0;\n  responsable_proyecto : any = '';\n  centro_de_costo_proyecto : any = '0';\n  almacen : any = '0';\n  codigo_proyecto : any = '';\n\n  numerotxt : any;\n  nombretxt : any;\n  clientecbo : any;  \n  presupuestotxt : any;\n  responsabletxt : any;\n  fechaInicialtxt : any;\n  fechaFinaltxt : any;\n  centroDeCostoscbo : any;\n  almacencbo : any;\n  projectInfo : any;\n  projectId : any;\n  newProject: FormGroup;\n  datasourceCategories : any[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , @Inject(MAT_DIALOG_DATA) public data,public snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n  ) { \n    this.projectInfo = data.arrayData;\n    this.projectId = data.projectId;\n\n    this.newProject = this.formBuilder.group({\n      codigo_proyecto : new FormControl(''),\n      proyecto_id: new FormControl(''),\n      nombre_proyecto: new FormControl(''),\n      cliente: new FormControl(''),\n      presupuesto_proyecto: new FormControl('', Validators.required),\n      fecha_inicial_proyecto: new FormControl(''),\n      fecha_final_proyecto: new FormControl(''),\n      responsable_proyecto: new FormControl(''),\n      centroDeCostos: new FormControl(''),\n      almacen: new FormControl('')  \n  });\n  }\n\n  ngOnInit(): void {\n\n    this.getEnabledCategories();\n\n    if(this.projectId != 0){\n        this.newProject.patchValue({\n          proyecto_id : this.projectInfo[\"proyecto_id\"],\n          nombre_proyecto : this.projectInfo[\"nombre_proyecto\"] ,\n          cliente : this.projectInfo[\"cliente_id\"],\n          presupuesto_proyecto : this.projectInfo[\"presupuesto_proyecto\"] ,\n          fecha_inicial_proyecto : this.projectInfo[\"fecha_inicial_proyecto\"],\n          fecha_final_proyecto : this.projectInfo[\"fecha_final_proyecto\"] ,\n          responsable_proyecto : this.projectInfo[\"responsable_proyecto\"],\n          centroDeCostos : this.projectInfo[\"centro_de_costo_proyecto_id\"] ,\n          almacen : this.projectInfo[\"almacen_id\"],\n          codigo_proyecto : this.projectInfo[\"codigo_proyecto\"]\n      })\n\n      this.nombre_proyecto = this.projectInfo[\"nombre_proyecto\"];\n      this.cliente = this.projectInfo[\"cliente_id\"];\n      this.presupuesto_proyecto = this.projectInfo[\"presupuesto_proyecto\"];\n      this.fecha_inicial_proyecto = this.projectInfo[\"fecha_inicial_proyecto\"];\n      this.fecha_final_proyecto = this.projectInfo[\"fecha_final_proyecto\"];\n      this.responsable_proyecto = this.projectInfo[\"responsable_proyecto\"];\n      this.centro_de_costo_proyecto = this.projectInfo[\"centro_de_costo_proyecto_id\"];\n      this.almacen = this.projectInfo[\"almacen_id\"];\n      this.codigo_proyecto = this.projectInfo[\"codigo_proyecto\"];\n    }\n\n  }\n\n  getEnabledCategories(){\n    // Actualiza registro NUEVO\n    this._categoryService.getCategoryAll().subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('CATEGORIAS', this.datasourceCategories);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n  save(form, event){\n\n    let arrayTodb : any;\n\n    if(this.projectId == 0){\n\n      arrayTodb = { codigo_proyecto : this.codigo_proyecto,\n                  nombre_proyecto : this.nombre_proyecto,\n                  cliente_id : this.cliente,\n                  presupuesto_proyecto : this.presupuesto_proyecto,\n                  fecha_inicial_proyecto : moment(this.fecha_inicial_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n                  fecha_final_proyecto : moment(this.fecha_final_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n                  responsable_proyecto : this.responsable_proyecto,\n                  centro_de_costo_proyecto_id : this.centro_de_costo_proyecto,\n                  almacen_id : this.almacen};\n\n      // Actualiza registro NUEVO\n      this._projectService.insertProjects(arrayTodb).subscribe(\n        res=> {\n          console.log('Se inserto con éxito', res);\n\n          // Inserta categorias\n          this.insertCategories();\n        },\n        error => console.log(\"error alta de proyectos\",error)\n      )\n    // Inserta categorias\n    // this.insertCategories();\n    // this.dialogRef.close();\n    }\n    else{\n      arrayTodb = {proyecto_id : this.projectId,\n        nombre_proyecto : this.nombre_proyecto,\n        cliente_id : this.cliente,\n        presupuesto_proyecto : this.presupuesto_proyecto,\n        fecha_inicial_proyecto : moment(this.fecha_inicial_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n        fecha_final_proyecto : moment(this.fecha_final_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n        responsable_proyecto : this.responsable_proyecto,\n        centro_de_costo_proyecto_id : this.centro_de_costo_proyecto,\n        almacen_id : this.almacen,\n        codigo_proyecto : this.codigo_proyecto};\n\n        // Actualiza registro EDICION\n        this._projectService.updateProjects(arrayTodb).subscribe(\n        res=> {\n        console.log('Se edito con éxito', res);\n        },\n        error => console.log(\"error consulta regiones\",error)\n        )\n        this.dialogRef.close();\n    }\n  }\n\ninsertCategories(){\n\n  console.log('para guardar')\n\n  // Obtiene Proyecto Registrado\n  let datasourceProyectos : MatTableDataSource<projectModel>\n  let proyectoIdMaximo : any = \"0\";\n  let codigoProyecto : any = \"0\";\n  let arrayProjectCategories : any;\n  this._projectService.getProjectAll().subscribe(\n    res=> {\n      datasourceProyectos = new MatTableDataSource(res);\n\n      proyectoIdMaximo = (datasourceProyectos.filteredData[datasourceProyectos.filteredData.length -1][\"proyecto_id\"]);\n      codigoProyecto = datasourceProyectos.filteredData.find(e => e.proyecto_id == proyectoIdMaximo);\n\n      console.log('proyectoid proyectaso', codigoProyecto[\"codigo_proyecto\"]);\n\n      this.datasourceCategories.forEach(element => {\n        console.log('proyectoid', codigoProyecto[\"codigo_proyecto\"] + '-' + element.codigo_categoria);\n        arrayProjectCategories = {proyecto_id : proyectoIdMaximo\n            , categoria_id : element.categoria_id\n            , presupuesto : 0\n            , responsable : ''\n            , fecha_inicial : moment(new Date, 'YYYY-MM-DD').format('YYYY-MM-DD')\n            , almacen_id : 1\n            , codigo_proyectocategoria : codigoProyecto[\"codigo_proyecto\"] + '-' + element.codigo_categoria\n        }\n\n        // Inserta Proyecto Categoria\n        this._projectCategoryservice.insertProjects(arrayProjectCategories).subscribe(\n          res=> {\n            console.log('CATEGORIAS', this.datasourceCategories);\n          },\n          error => console.log(\"error al insertar proyectos categorias\",error)\n        )\n        \n        arrayProjectCategories = null;\n\n      });\n      \n    },\n    error => console.log(\"error consulta todos los proyectos\",error)\n  )\n\n}\n\n\n  fechaInicial(event){\n    console.log('fecha', this.fecha_inicial_proyecto);\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n}\n"," <div fxLayout=\"row\">\n  <h4>Nuevo Proyecto</h4>\n</div>\n<br>\n<div mat-dialog-content-example [formGroup]=\"newProject\">\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div>Código</div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n        <div><input type=\"text\" class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"codigo_proyecto\" [(ngModel)]=\"codigo_proyecto\"></div><!--[(ngModel)]=\"numerotxt\" -->\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div>Nombre</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div><input type=\"text\" class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"nombre_proyecto\" [(ngModel)]=\"nombre_proyecto\"></div><!--[(ngModel)]=\"nombretxt\" -->\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div>Cliente</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div><mat-select class=\"form-control control\" formControlName=\"cliente\" [(ngModel)]=\"cliente\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\"-->\n          <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n          <mat-option value= \"1\">Javier Peña y asociados</mat-option>\n          <mat-option value= \"2\">Ragasa</mat-option>\n          <mat-option value= \"3\">Cemex</mat-option>\n          </mat-select></div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div>Presupuesto</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div><input type=\"text\" class=\"form-control form-control-line control\" formControlName=\"presupuesto_proyecto\" [(ngModel)]=\"presupuesto_proyecto\"></div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div>Fecha Inicial</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div><mat-form-field appearance=\"fill\">\n          <mat-label>Choose a date</mat-label>\n          <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha_inicial_proyecto\" (dateChange)=\"fechaInicial($event)\" [(ngModel)]=\"fecha_inicial_proyecto\" class=\"control\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field></div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div>Fecha Final</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div><mat-form-field appearance=\"fill\">\n        <mat-label>Choose a date</mat-label>\n        <input matInput [matDatepicker]=\"pickerf\" formControlName=\"fecha_final_proyecto\" [(ngModel)]=\"fecha_final_proyecto\" class=\"control\">\n        <mat-datepicker-toggle matSuffix [for]=\"pickerf\"></mat-datepicker-toggle>\n        <mat-datepicker #pickerf></mat-datepicker>\n      </mat-form-field></div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div>Responsable</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\">\n        <div><input type=\"text\" class=\"form-control form-control-line control\" placeholder=\"Responsable\" formControlName=\"responsable_proyecto\" [(ngModel)]=\"responsable_proyecto\"></div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div>Centro de costos</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\">\n      <div><mat-select class=\"form-control\" formControlName=\"centroDeCostos\" [(ngModel)]=\"centro_de_costo_proyecto\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\"-->\n        <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n        <mat-option value= \"1\">Acabados</mat-option>\n        <mat-option value= \"2\">Tuberias</mat-option>\n        <mat-option value= \"3\">Electrico</mat-option>\n        </mat-select></div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div>Almacén</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div><mat-select class=\"form-control\"  formControlName=\"almacen\" [(ngModel)]=\"almacen\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\"-->\n          <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n          <mat-option value= \"1\">California</mat-option>\n          <mat-option value= \"2\">Norte</mat-option>\n          <mat-option value= \"3\">Centro</mat-option>\n          </mat-select></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n  </div>\n</div>\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-requisition-detail',\n  templateUrl: './requisition-detail.component.html',\n  styleUrls: ['./requisition-detail.component.css']\n})\nexport class RequisitionDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>requisition-detail works!</p>\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\n\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\n\r\n/**\r\n * NgModule that includes all Material modules that are required to serve the demo-app.\r\n */\r\n@NgModule({\r\n    exports: [\r\n        MatAutocompleteModule,\r\n        MatButtonModule,\r\n        MatBottomSheetModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatTableModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatBadgeModule,\r\n        MatSidenavModule,\r\n        MatSlideToggleModule,\r\n        MatSliderModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatStepperModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatNativeDateModule,\r\n        CdkTableModule,\r\n        A11yModule,\r\n        BidiModule,\r\n        CdkAccordionModule,\r\n        ObserversModule,\r\n        OverlayModule,\r\n        PlatformModule,\r\n        PortalModule\r\n    ]\r\n})\r\nexport class DemoMaterialModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport { WorkBook, WorkSheet } from 'xlsx';\r\n\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheethml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExcelServiceService {\r\n\r\n  constructor() { }\r\n\r\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n\r\n    const worksheet: WorkSheet = XLSX.utils.json_to_sheet(json);\r\n\r\n    const workbook: WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n\r\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n\r\n    this.saveAsExcelFile(excelBuffer, excelFileName);\r\n\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    const data: Blob = new Blob([buffer], { type: EXCEL_TYPE });\r\n\r\n    FileSaver.saveAs(data, `${fileName}_export_${new Date().getTime()}${EXCEL_EXTENSION}`);\r\n  }\r\n\r\n}\r\n","import { MediaMatcher } from '@angular/cdk/layout';\r\nimport {ChangeDetectorRef, Component,OnDestroy,AfterViewInit} from '@angular/core';\r\nimport { MenuItems } from '../../shared/menu-items/menu-items';\r\n\r\n\r\n/** @title Responsive sidenav */\r\n@Component({\r\n  selector: 'app-full-layout',\r\n  templateUrl: 'full.component.html',\r\n  styleUrls: []\r\n})\r\nexport class FullComponent implements OnDestroy, AfterViewInit {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n  ngAfterViewInit() {}\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<div class=\"main-container\"> \r\n    <!-- ============================================================== -->\r\n    <!-- Topbar - style you can find in header.scss -->\r\n    <!-- ============================================================== -->\r\n    <mat-toolbar color=\"primary\" class=\"topbar telative\">\r\n        <!-- ============================================================== -->\r\n        <!-- Logo - style you can find in header.scss -->\r\n        <!-- ============================================================== -->\r\n        <div class=\"navbar-header\">\r\n            <a class=\"navbar-brand\" href=\"index.html\">\r\n                <!-- Logo icon --><b>\r\n                    <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\r\n                    <!-- Dark Logo icon -->\r\n                    <img src=\"assets/images/logo-icon.png\" alt=\"homepage\" class=\"dark-logo\">\r\n                    <!-- Light Logo icon -->\r\n                    <img src=\"assets/images/logo-light-icon.png\" alt=\"homepage\" class=\"light-logo\">\r\n                    <!-- <img src=\"assets/images/logo-comercial20.jpeg\" alt=\"homepage\" class=\"light-logo\"> -->\r\n                </b>\r\n                <!--End Logo icon -->\r\n                <!-- Logo text -->\r\n                <span fxShow=\"false\" fxShow.gt-xs>\r\n                 <!-- dark Logo text -->\r\n                 <img src=\"assets/images/logo-text.png\" alt=\"homepage\" class=\"dark-logo\">\r\n                 <!-- Light Logo text -->    \r\n                 <img src=\"assets/images/logo-light-text.png\" class=\"light-logo\" alt=\"homepage\">\r\n                </span> </a>\r\n        </div>\r\n        <!-- ============================================================== -->\r\n        <!-- sidebar toggle -->\r\n        <!-- ============================================================== -->\r\n        \r\n        <button mat-icon-button (click)=\"snav.toggle()\" value=\"sidebarclosed\">\r\n            <mat-icon>menu</mat-icon>\r\n        </button>\r\n        <span fxFlex></span>\r\n        <!-- ============================================================== -->\r\n        <!-- app header component - style you can find in header.scss / header.component.ts-->\r\n        <!-- ============================================================== -->\r\n        <app-header></app-header>\r\n    </mat-toolbar>\r\n    <!-- ============================================================== -->\r\n    <!-- End Topbar - style you can find in pages.scss -->\r\n    <!-- ============================================================== -->\r\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\">\r\n        <!-- ============================================================== -->\r\n        <!-- Sidebar - style you can find in sidebar.scss -->\r\n        <!-- ============================================================== -->\r\n        <mat-sidenav #snav id=\"snav\" class=\"dark-sidebar pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\" fixedTopGap=\"0\" [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\"  >\r\n            \r\n                <app-sidebar></app-sidebar>\r\n               \r\n            \r\n        </mat-sidenav>\r\n        <!-- ============================================================== -->\r\n        <!-- Sidebar - style you can find in sidebar.scss -->\r\n        <!-- ============================================================== -->\r\n        \r\n        <!-- ============================================================== -->\r\n        <!-- Page container - style you can find in pages.scss -->\r\n        <!-- ============================================================== -->\r\n        <mat-sidenav-content class=\"page-wrapper\">\r\n                 \r\n                <div class=\"page-content\">\r\n                   \r\n                        <router-outlet><app-spinner></app-spinner></router-outlet>\r\n                    \r\n                </div>    \r\n               \r\n        </mat-sidenav-content>\r\n        <!-- ============================================================== -->\r\n        <!-- Page container - style you can find in pages.scss -->\r\n        <!-- ============================================================== -->\r\n    </mat-sidenav-container>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppHeaderComponent {}\r\n","        \r\n<!-- ============================================================== -->\r\n<!-- Profile - style you can find in header.scss -->\r\n<!-- ============================================================== -->\r\n<!-- <a href=\"https://wrappixel.com/templates/materialpro-angular-dashboard/\" class=\" m-r-20 hidden-sm-up\" mat-raised-button color=\"warn\">Upgrade To Pro</a> -->\r\n<!-- <button [matMenuTriggerFor]=\"profile\" mat-icon-button class=\"m-r-5\"> <img src=\"assets/images/users/1.jpg\" alt=\"user\" class=\"profile-pic\"> </button> -->\r\n<mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\r\n    <button mat-menu-item>\r\n        <mat-icon>settings</mat-icon> Settings </button>\r\n    <button mat-menu-item>\r\n        <mat-icon>account_box</mat-icon> Profile </button>\r\n    <button mat-menu-item>\r\n        <mat-icon>notifications_off</mat-icon> Disable notifications </button>\r\n    <button mat-menu-item>\r\n        <mat-icon>exit_to_app</mat-icon> Sign Out </button>\r\n</mat-menu>\r\n\r\n","<!-- ============================================================== -->\r\n<!-- sidebar -->\r\n<!-- ============================================================== -->\r\n <div class=\"user-profile\" style=\"background: url(assets/images/background/user-info.jpg) no-repeat;\">\r\n    <!-- User profile image -->\r\n    <div class=\"profile-img\"> <img src=\"assets/images/users/profile.png\" alt=\"user\"> </div>\r\n    <!-- User profile text-->\r\n    <!-- ============================================================== -->\r\n    <!-- Profile - style you can find in header.scss -->\r\n    <!-- ============================================================== -->\r\n    <div class=\"profile-text\"><a [matMenuTriggerFor]=\"sdprofile\" class=\"\"> Markarn Doe <i class=\"ti-angle-down font-12 m-l-5\"></i></a></div>\r\n    <mat-menu #sdprofile=\"matMenu\" class=\"mymegamenu\">\r\n        <button mat-menu-item>\r\n            <mat-icon>settings</mat-icon> Settings </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>account_box</mat-icon> Profile </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>notifications_off</mat-icon> Disable notifications </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>exit_to_app</mat-icon> Sign Out </button>\r\n    </mat-menu>\r\n    \r\n</div>\r\n<mat-nav-list appAccordion>\r\n    <mat-list-item appAccordionLink *ngFor=\"let menuitem of menuItems.getMenuitem()\" routerLinkActive=\"selected\" group=\"{{menuitem.state}}\">\r\n        <a class=\"\" appAccordionToggle [routerLink]=\"['/', menuitem.state]\" *ngIf=\"menuitem.type === 'link'\">\r\n            <mat-icon>{{ menuitem.icon }}</mat-icon> \r\n            <span>{{ menuitem.name }}</span> \r\n            <span fxFlex></span> \r\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span> \r\n        </a>\r\n\r\n        \r\n    </mat-list-item>\r\n\r\n</mat-nav-list>","import { ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppSidebarComponent implements OnDestroy {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories-list',\n  templateUrl: './categories-list.component.html',\n  styleUrls: ['./categories-list.component.css']\n})\nexport class CategoriesListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>categories-list works!</p>\n","<div class=\"login-register\" style=\"background-image:url(assets/images/background/login-register.jpg);\">\r\n    <div class=\"login-register-box\">\r\n        <!-- <div class=\"bg-info text-white m-b-10 text-center p-t-10 p-b-10 alert-box\">\r\n            <span class=\"m-r-10\">Username : admin</span> |\r\n            <span class=\"m-l-10\">Password : admin123</span>\r\n        </div> -->\r\n        <mat-card class=\"m-t-10\">\r\n        <mat-card-content>\r\n        <form id=\"loginform\">\r\n            <div class=\"text-center\">\r\n                <img alt=\"homepage\" src=\"assets/images/logo-comercial20.jpeg\">\r\n                <!-- <h4 class=\"m-t-0\">Login to App</h4> -->\r\n            </div>\r\n            <div *ngIf=\"msg\" class=\"bg-danger p-10 text-white\">{{ msg }}</div>\r\n            <div fxLayout=\"row wrap\">\r\n                <!-- col full-->\r\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n                    <mat-form-field>\r\n                    <input matInput placeholder=\"Usuario\" required=\"\" #u1>\r\n                    </mat-form-field>\r\n                </div>\r\n                <!-- col full-->\r\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n                    <mat-form-field>\r\n                    <input matInput type=\"password\" placeholder=\"Clave\" required=\"\" #p2>\r\n                    </mat-form-field>\r\n                </div>\r\n                <!-- col half-->\r\n                <!-- <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\">\r\n                    <mat-checkbox color=\"warn\">Remember me</mat-checkbox>\r\n                </div> -->\r\n                <!-- col half-->\r\n                <!-- <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" class=\"text-right\">\r\n                    <a [routerLink]=\"['/authentication/forgot']\" class=\"link\">Forgot pwd?</a>\r\n                </div> -->\r\n                <!-- col full-->\r\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n                    <button mat-raised-button color=\"primary\" class=\"btn-block btn-lg m-t-20 m-b-20\" (click)=\"check(u1.value, p2.value)\" type=\"button\">Acceder</button>\r\n                </div>\r\n                <!-- col full-->\r\n                <!-- <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" class=\"text-center\">\r\n                    <span>Don't have an account?\r\n                        <a [routerLink]=\"['/authentication/register']\" class=\"text-info link\">Register</a>\r\n                    </span>\r\n                </div> -->\r\n            </div>\r\n        </form>\r\n        </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { loginservice } from '../../services/login/login.service';\r\n\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  providers: [loginservice]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  msg = '';\r\n  constructor(private service: loginservice, private routes: Router) { }\r\n\r\n  check(uname: string, p: string) {\r\n    const output = this.service.checkusernameandpassword(uname, p);\r\n    if (output == true) {\r\n      console.log(output);\r\n      this.routes.navigate(['/dashboard']);\r\n    } else {  \r\n      this.msg = 'Usuario o Clave inválido';\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Proyectos</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarProyectos()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevoProyecto($event)\">Nuevo Proyecto</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n          <div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"codigo_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_proyecto}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"nombre_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Nombre </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.nombre_proyecto}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"fecha_inicial_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha Inicial </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha_inicial_proyecto | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"fecha_final_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha Final </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha_final_proyecto | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"nombre_cliente\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Cliente </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.nombre_cliente}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"responsable_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Responable </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.responsable_proyecto}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"presupuesto_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Presupuesto </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.presupuesto_proyecto}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"proyect_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\" hidden> proyecto_id  </th>\n                  <td mat-cell *matCellDef=\"let element\" hidden> {{element.proyecto_id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editProyecto(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n        </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { projectModel } from '../../../models/project.model';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-project-capture',\n  templateUrl: './project-capture.component.html',\n  styleUrls: ['./project-capture.component.css'],\n})\nexport class ProjectCaptureComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n\n  displayedColumns = ['codigo_proyecto', 'nombre_proyecto', 'fecha_inicial_proyecto', 'fecha_final_proyecto', 'nombre_cliente', 'responsable_proyecto', 'presupuesto_proyecto', 'proyect_id', 'editar', 'categorias'];\n\n  projectData : any[] = [];\n  dataSourceShow : MatTableDataSource<projectModel>; //<any> = new MatTableDataSource\n  buscar:any;\n\n  @Output() filterChange = new EventEmitter();\n\n  constructor(public dialog: MatDialog\n          , MatTableModule : MatTableModule\n          , private _projectService : projectservice\n          , private _excelService : ExcelServiceService) { \n    // this.displayedColumns = ['proyecto']\n  }\n\n  ngOnInit(): void {\n    this.getProjects();\n  }\n\n  getProjects(){\n\n    // Proyectos registrados\n    this._projectService.getProjectAll().subscribe(\n      res=> {\n        console.log('Proyectos', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n\n  }\n\n  onOpenDialogAddProject() {\n    \n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      //title: 'NUEVO PROYECTO',\n     \n    }\n    dialogConfig.width = '450px';\n    dialogConfig.height = '350px';\n    dialogConfig.disableClose = true;\n\n  }\n\n  editProyecto(element : any, event){\n    console.log('Edita', element);\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'EDITAR PROYECTO',\n      arrayData : element,\n      projectId : element.proyecto_id\n     \n    }\n    dialogConfig.width = '800px';\n    dialogConfig.height = '500px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(ProjectCaptureDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  addCategorias(proyectoId : any, event){\n    console.log('Alta de categoras', proyectoId);\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'CATEGORIAS',\n      arrayData : null,\n      projectId: proyectoId\n     \n    }\n    dialogConfig.width = '1400px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(CategoriesComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  nuevoProyecto(event){\n    console.log('Alta de categoras');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'NUEVO PROYECTO',\n      arrayData : null,\n      projectId: 0\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '500px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(ProjectCaptureDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  descargarProyectos(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , nombre_proyecto : element.nombre_proyecto\n                              , fecha_inicial_proyecto : moment(element.fecha_inicial_proyecto, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , fecha_final_proyecto : moment(element.fecha_final_proyecto, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , nombre_cliente : element.nombre_cliente\n                              , responsable_proyecto : element.responsable_proyecto\n                              , presupuesto_proyecto : element.presupuesto_proyecto\n      })\n    });\n\n    \n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Proyectos');  \n  }\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n  filtrar(event: Event) {\n    const filtro = (event.target as HTMLInputElement).value;\n    this.dataSourceShow.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Ordenes de compra</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n        <div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"ordenDeCompra_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Orden de compra</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.ordenDeCompra_Id}} </td>\n                </ng-container>\n                \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"proyecto_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.proyecto_id}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"Categoria_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Categoria </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Categoria_Id}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Requisicion_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Requisicion_Id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Fecha_OrdenDeCompra\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Fecha_OrdenDeCompra | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Estatus}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-po-list',\n  templateUrl: './po-list.component.html',\n  styleUrls: ['./po-list.component.css']\n})\nexport class PoListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['ordenDeCompra_Id', 'proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_OrdenDeCompra', 'Estatus', 'editar'];\n  \n  constructor(public dialog: MatDialog\n          , private _excelService : ExcelServiceService) { }\n\n  ngOnInit(): void {\n    let arrayData : any;\n\n    arrayData = [{ordenDeCompra_Id : 1, proyecto_id : 1, Categoria_Id : 1, Requisicion_Id : 1, Fecha_OrdenDeCompra : '2020-01-01', Estatus : 'ACTIVO'}]\n    this.dataSourceShow = new MatTableDataSource(arrayData);\n\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , categoria : element.Categoria_Id\n                              , requisicion : element.Requisicion_Id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.Estatus\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaRequisicion(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editRequisicion(event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Cotizaciones</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"proyecto_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.proyecto_id}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"Categoria_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Categoria </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Categoria_Id}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Requisicion_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Requisicion_Id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Fecha_Requisicion\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha de Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Fecha_Requisicion | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Estatus}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <!-- <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container> -->\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-quotation-list',\n  templateUrl: './quotation-list.component.html',\n  styleUrls: ['./quotation-list.component.css']\n})\nexport class QuotationListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_Requisicion', 'Estatus', 'editar'];\n  \n  constructor(public dialog: MatDialog\n    , private _excelService : ExcelServiceService) { }\n\n  ngOnInit(): void {\n    let arrayData : any;\n\n    arrayData = [{proyecto_id : 1, Categoria_Id : 1, Requisicion_Id : 1, Fecha_Requisicion : '2020-01-01', Estatus : 'ACTIVO'}]\n    this.dataSourceShow = new MatTableDataSource(arrayData);\n\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , categoria : element.Categoria_Id\n                              , requisicion : element.Requisicion_Id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.Estatus\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaRequisicion(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editRequisicion(event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Requisiciones</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"proyecto_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.proyecto_id}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"Categoria_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Categoria </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Categoria_Id}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Requisicion_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Requisicion_Id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Fecha_Requisicion\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha de Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Fecha_Requisicion | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Estatus}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <!-- <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container> -->\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n\n@Component({\n  selector: 'app-requisition-list',\n  templateUrl: './requisition-list.component.html',\n  styleUrls: ['./requisition-list.component.css']\n})\nexport class RequisitionListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_Requisicion', 'Estatus', 'editar'];\n  \n  constructor(public dialog: MatDialog\n          , private _excelService : ExcelServiceService) { }\n\n  ngOnInit(): void {\n    let arrayData : any;\n\n    arrayData = [{proyecto_id : 1, Categoria_Id : 1, Requisicion_Id : 1, Fecha_Requisicion : '2020-01-01', Estatus : 'ACTIVO'}]\n    this.dataSourceShow = new MatTableDataSource(arrayData);\n\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , categoria : element.Categoria_Id\n                              , requisicion : element.Requisicion_Id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.Estatus\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaRequisicion(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editRequisicion(event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Almacén</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"proyecto_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.proyecto_id}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"Categoria_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Categoria </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Categoria_Id}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Requisicion_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Requisicion_Id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Fecha_Requisicion\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha de Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Fecha_Requisicion | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Estatus}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <!-- <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container> -->\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-storage-invoice-list',\n  templateUrl: './storage-invoice-list.component.html',\n  styleUrls: ['./storage-invoice-list.component.css']\n})\nexport class StorageInvoiceListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_Requisicion', 'Estatus', 'editar'];\n  \n  constructor(public dialog: MatDialog\n    , private _excelService : ExcelServiceService) { }\n\n  ngOnInit(): void {\n    let arrayData : any;\n\n    arrayData = [{proyecto_id : 1, Categoria_Id : 1, Requisicion_Id : 1, Fecha_Requisicion : '2020-01-01', Estatus : 'ACTIVO'}]\n    this.dataSourceShow = new MatTableDataSource(arrayData);\n\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , categoria : element.Categoria_Id\n                              , requisicion : element.Requisicion_Id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.Estatus\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaRequisicion(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editRequisicion(event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { observable, Observable, of } from 'rxjs';\r\nimport { categoryModel } from 'src/app/models/category.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { from } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class categoryservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getCategoryAll() {\r\n        return this.http.get<categoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'Category/lista');\r\n    }\r\n\r\n    getProjectById(id : number) {\r\n        return this.http.get<categoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'Category/' + id);\r\n    }\r\n\r\n    updateProjects(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'Category/actualizar',arrayToDb);\r\n    }\r\n\r\n    insertProjects(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Category/registrar',arrayToDb);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class loginservice {\r\n\r\n  constructor() { }\r\n\r\n  checkusernameandpassword(uname: string, pwd: string) {\r\n    if (uname === 'admin' && pwd === 'admin123') {\r\n      localStorage.setItem('username', 'admin');\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { observable, Observable, of } from 'rxjs';\r\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { from } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class projectCategoryservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getProjectCateogryAll() {\r\n        return this.http.get<projectCategoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/lista');\r\n    }\r\n\r\n    getProjectCateogryById(proyectoId : any) {\r\n        return this.http.get<projectCategoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/' + proyectoId);\r\n    }\r\n\r\n    updateProjects(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'ProjectCategory/actualizar',arrayToDb);\r\n    }\r\n\r\n    insertProjects(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'ProjectCategory/registrar',arrayToDb);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { observable, Observable, of } from 'rxjs';\r\nimport { projectModel } from 'src/app/models/project.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { from } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class projectservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getProjectAll() {\r\n        return this.http.get<projectModel[]>(environment.urlapi + environment.apiContextDrivers + 'Project/lista');\r\n    }\r\n\r\n    updateProjects(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'Project/actualizar',arrayToDb);\r\n    }\r\n\r\n    insertProjects(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Project/registrar',arrayToDb);\r\n    }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  OnInit,\r\n  AfterViewInit,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]'\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf(link.group) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe(e => this.checkOpenLinks());\r\n  }\r\n\r\n  constructor(private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionToggle]'\r\n})\r\nexport class AccordionAnchorDirective {\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: any) {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionLink]'\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  public group: any;\r\n\r\n  @HostBinding('class.selected')\r\n  @Input()\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: boolean) {\r\n    this._selected = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _selected: boolean=false;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.selected = !this.selected;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\n\r\nconst MENUITEMS = [\r\n  { state: 'dashboard', name: 'Dashboard', type: 'link', icon: 'av_timer' },\r\n  { state: 'project', name: 'Proyecto', type: 'link', icon: 'view_comfy' },\r\n  { state: 'requisition', name: 'Requisiciones', type: 'link', icon: 'view_list' },\r\n  { state: 'quotation', name: 'Cotizaciones', type: 'link', icon: 'web' },\r\n  { state: 'po', name: 'Orden de compra', type: 'link', icon: 'tab' },\r\n  { state: 'storage', name: 'Almacén', type: 'link', icon: 'assignment_turned_in' },\r\n  // { state: 'button', type: 'link', name: 'Buttons', icon: 'crop_7_5' },\r\n  // { state: 'grid', type: 'link', name: 'Grid List', icon: 'view_comfy' },\r\n  // { state: 'lists', type: 'link', name: 'Lists', icon: 'view_list' },\r\n  // { state: 'menu', type: 'link', name: 'Menu', icon: 'view_headline' },\r\n  // { state: 'tabs', type: 'link', name: 'Tabs', icon: 'tab' },\r\n  // { state: 'stepper', type: 'link', name: 'Stepper', icon: 'web' },\r\n  // {\r\n  //   state: 'expansion',\r\n  //   type: 'link',\r\n  //   name: 'Expansion Panel',\r\n  //   icon: 'vertical_align_center'\r\n  // },\r\n  // { state: 'chips', type: 'link', name: 'Chips', icon: 'vignette' },\r\n  // { state: 'toolbar', type: 'link', name: 'Toolbar', icon: 'voicemail' },\r\n  // {\r\n  //   state: 'progress-snipper',\r\n  //   type: 'link',\r\n  //   name: 'Progress snipper',\r\n  //   icon: 'border_horizontal'\r\n  // },\r\n  // {\r\n  //   state: 'progress',\r\n  //   type: 'link',\r\n  //   name: 'Progress Bar',\r\n  //   icon: 'blur_circular'\r\n  // },\r\n  // {\r\n  //   state: 'dialog',\r\n  //   type: 'link',\r\n  //   name: 'Dialog',\r\n  //   icon: 'assignment_turned_in'\r\n  // },\r\n  // { state: 'tooltip', type: 'link', name: 'Tooltip', icon: 'assistant' },\r\n  // { state: 'snackbar', type: 'link', name: 'Snackbar', icon: 'adb' },\r\n  // { state: 'slider', type: 'link', name: 'Slider', icon: 'developer_mode' },\r\n  // {\r\n  //   state: 'slide-toggle',\r\n  //   type: 'link',\r\n  //   name: 'Slide Toggle',\r\n  //   icon: 'all_inclusive'\r\n  // }\r\n];\r\n\r\n@Injectable()\r\nexport class MenuItems {\r\n  getMenuitem(): Menu[] {\r\n    return MENUITEMS;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MenuItems } from './menu-items/menu-items';\r\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n  ],\r\n  exports: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n   ],\r\n  providers: [ MenuItems ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, Input, OnDestroy, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\r\n        <div class=\"spinner\">\r\n          <div class=\"double-bounce1\"></div>\r\n          <div class=\"double-bounce2\"></div>\r\n        </div>\r\n    </div>`,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SpinnerComponent implements OnDestroy {\r\n  public isSpinnerVisible = true;\r\n\r\n  @Input()\r\n  public backgroundColor = 'rgba(0, 115, 170, 0.69)';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    this.router.events.subscribe(\r\n      event => {\r\n        if (event instanceof NavigationStart) {\r\n          this.isSpinnerVisible = true;\r\n        } else if (\r\n          event instanceof NavigationEnd ||\r\n          event instanceof NavigationCancel ||\r\n          event instanceof NavigationError\r\n        ) {\r\n          this.isSpinnerVisible = false;\r\n        }\r\n      },\r\n      () => {\r\n        this.isSpinnerVisible = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isSpinnerVisible = false;\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  urlapi : 'https://sap-comercial.azurewebsites.net/',\r\n  apiContextDrivers : 'api/'\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport 'hammerjs';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","var map = {\n\t\"./af\": 26431,\n\t\"./af.js\": 26431,\n\t\"./ar\": 81286,\n\t\"./ar-dz\": 1616,\n\t\"./ar-dz.js\": 1616,\n\t\"./ar-kw\": 9759,\n\t\"./ar-kw.js\": 9759,\n\t\"./ar-ly\": 43160,\n\t\"./ar-ly.js\": 43160,\n\t\"./ar-ma\": 62551,\n\t\"./ar-ma.js\": 62551,\n\t\"./ar-sa\": 79989,\n\t\"./ar-sa.js\": 79989,\n\t\"./ar-tn\": 6962,\n\t\"./ar-tn.js\": 6962,\n\t\"./ar.js\": 81286,\n\t\"./az\": 15887,\n\t\"./az.js\": 15887,\n\t\"./be\": 14572,\n\t\"./be.js\": 14572,\n\t\"./bg\": 3276,\n\t\"./bg.js\": 3276,\n\t\"./bm\": 93344,\n\t\"./bm.js\": 93344,\n\t\"./bn\": 58985,\n\t\"./bn-bd\": 83990,\n\t\"./bn-bd.js\": 83990,\n\t\"./bn.js\": 58985,\n\t\"./bo\": 94391,\n\t\"./bo.js\": 94391,\n\t\"./br\": 46728,\n\t\"./br.js\": 46728,\n\t\"./bs\": 5536,\n\t\"./bs.js\": 5536,\n\t\"./ca\": 41043,\n\t\"./ca.js\": 41043,\n\t\"./cs\": 70420,\n\t\"./cs.js\": 70420,\n\t\"./cv\": 33513,\n\t\"./cv.js\": 33513,\n\t\"./cy\": 6771,\n\t\"./cy.js\": 6771,\n\t\"./da\": 47978,\n\t\"./da.js\": 47978,\n\t\"./de\": 46061,\n\t\"./de-at\": 25204,\n\t\"./de-at.js\": 25204,\n\t\"./de-ch\": 2653,\n\t\"./de-ch.js\": 2653,\n\t\"./de.js\": 46061,\n\t\"./dv\": 85,\n\t\"./dv.js\": 85,\n\t\"./el\": 8579,\n\t\"./el.js\": 8579,\n\t\"./en-au\": 25724,\n\t\"./en-au.js\": 25724,\n\t\"./en-ca\": 10525,\n\t\"./en-ca.js\": 10525,\n\t\"./en-gb\": 52847,\n\t\"./en-gb.js\": 52847,\n\t\"./en-ie\": 67216,\n\t\"./en-ie.js\": 67216,\n\t\"./en-il\": 39305,\n\t\"./en-il.js\": 39305,\n\t\"./en-in\": 73364,\n\t\"./en-in.js\": 73364,\n\t\"./en-nz\": 79130,\n\t\"./en-nz.js\": 79130,\n\t\"./en-sg\": 11161,\n\t\"./en-sg.js\": 11161,\n\t\"./eo\": 50802,\n\t\"./eo.js\": 50802,\n\t\"./es\": 40328,\n\t\"./es-do\": 45551,\n\t\"./es-do.js\": 45551,\n\t\"./es-mx\": 75615,\n\t\"./es-mx.js\": 75615,\n\t\"./es-us\": 64790,\n\t\"./es-us.js\": 64790,\n\t\"./es.js\": 40328,\n\t\"./et\": 96389,\n\t\"./et.js\": 96389,\n\t\"./eu\": 52961,\n\t\"./eu.js\": 52961,\n\t\"./fa\": 26151,\n\t\"./fa.js\": 26151,\n\t\"./fi\": 7997,\n\t\"./fi.js\": 7997,\n\t\"./fil\": 58898,\n\t\"./fil.js\": 58898,\n\t\"./fo\": 37779,\n\t\"./fo.js\": 37779,\n\t\"./fr\": 28174,\n\t\"./fr-ca\": 3287,\n\t\"./fr-ca.js\": 3287,\n\t\"./fr-ch\": 38867,\n\t\"./fr-ch.js\": 38867,\n\t\"./fr.js\": 28174,\n\t\"./fy\": 50452,\n\t\"./fy.js\": 50452,\n\t\"./ga\": 45014,\n\t\"./ga.js\": 45014,\n\t\"./gd\": 74127,\n\t\"./gd.js\": 74127,\n\t\"./gl\": 72124,\n\t\"./gl.js\": 72124,\n\t\"./gom-deva\": 6444,\n\t\"./gom-deva.js\": 6444,\n\t\"./gom-latn\": 37953,\n\t\"./gom-latn.js\": 37953,\n\t\"./gu\": 76604,\n\t\"./gu.js\": 76604,\n\t\"./he\": 1222,\n\t\"./he.js\": 1222,\n\t\"./hi\": 74235,\n\t\"./hi.js\": 74235,\n\t\"./hr\": 622,\n\t\"./hr.js\": 622,\n\t\"./hu\": 37735,\n\t\"./hu.js\": 37735,\n\t\"./hy-am\": 90402,\n\t\"./hy-am.js\": 90402,\n\t\"./id\": 59187,\n\t\"./id.js\": 59187,\n\t\"./is\": 30536,\n\t\"./is.js\": 30536,\n\t\"./it\": 35007,\n\t\"./it-ch\": 94667,\n\t\"./it-ch.js\": 94667,\n\t\"./it.js\": 35007,\n\t\"./ja\": 62093,\n\t\"./ja.js\": 62093,\n\t\"./jv\": 80059,\n\t\"./jv.js\": 80059,\n\t\"./ka\": 66870,\n\t\"./ka.js\": 66870,\n\t\"./kk\": 80880,\n\t\"./kk.js\": 80880,\n\t\"./km\": 1083,\n\t\"./km.js\": 1083,\n\t\"./kn\": 68785,\n\t\"./kn.js\": 68785,\n\t\"./ko\": 21721,\n\t\"./ko.js\": 21721,\n\t\"./ku\": 37851,\n\t\"./ku.js\": 37851,\n\t\"./ky\": 1727,\n\t\"./ky.js\": 1727,\n\t\"./lb\": 40346,\n\t\"./lb.js\": 40346,\n\t\"./lo\": 93002,\n\t\"./lo.js\": 93002,\n\t\"./lt\": 64035,\n\t\"./lt.js\": 64035,\n\t\"./lv\": 56927,\n\t\"./lv.js\": 56927,\n\t\"./me\": 5634,\n\t\"./me.js\": 5634,\n\t\"./mi\": 94173,\n\t\"./mi.js\": 94173,\n\t\"./mk\": 86320,\n\t\"./mk.js\": 86320,\n\t\"./ml\": 11705,\n\t\"./ml.js\": 11705,\n\t\"./mn\": 31062,\n\t\"./mn.js\": 31062,\n\t\"./mr\": 92805,\n\t\"./mr.js\": 92805,\n\t\"./ms\": 11341,\n\t\"./ms-my\": 59900,\n\t\"./ms-my.js\": 59900,\n\t\"./ms.js\": 11341,\n\t\"./mt\": 37734,\n\t\"./mt.js\": 37734,\n\t\"./my\": 19034,\n\t\"./my.js\": 19034,\n\t\"./nb\": 9324,\n\t\"./nb.js\": 9324,\n\t\"./ne\": 46495,\n\t\"./ne.js\": 46495,\n\t\"./nl\": 70673,\n\t\"./nl-be\": 76272,\n\t\"./nl-be.js\": 76272,\n\t\"./nl.js\": 70673,\n\t\"./nn\": 72486,\n\t\"./nn.js\": 72486,\n\t\"./oc-lnc\": 46219,\n\t\"./oc-lnc.js\": 46219,\n\t\"./pa-in\": 2829,\n\t\"./pa-in.js\": 2829,\n\t\"./pl\": 78444,\n\t\"./pl.js\": 78444,\n\t\"./pt\": 53170,\n\t\"./pt-br\": 66117,\n\t\"./pt-br.js\": 66117,\n\t\"./pt.js\": 53170,\n\t\"./ro\": 96587,\n\t\"./ro.js\": 96587,\n\t\"./ru\": 39264,\n\t\"./ru.js\": 39264,\n\t\"./sd\": 42135,\n\t\"./sd.js\": 42135,\n\t\"./se\": 95366,\n\t\"./se.js\": 95366,\n\t\"./si\": 93379,\n\t\"./si.js\": 93379,\n\t\"./sk\": 46143,\n\t\"./sk.js\": 46143,\n\t\"./sl\": 196,\n\t\"./sl.js\": 196,\n\t\"./sq\": 21082,\n\t\"./sq.js\": 21082,\n\t\"./sr\": 91621,\n\t\"./sr-cyrl\": 98963,\n\t\"./sr-cyrl.js\": 98963,\n\t\"./sr.js\": 91621,\n\t\"./ss\": 41404,\n\t\"./ss.js\": 41404,\n\t\"./sv\": 55685,\n\t\"./sv.js\": 55685,\n\t\"./sw\": 3872,\n\t\"./sw.js\": 3872,\n\t\"./ta\": 54106,\n\t\"./ta.js\": 54106,\n\t\"./te\": 39204,\n\t\"./te.js\": 39204,\n\t\"./tet\": 83692,\n\t\"./tet.js\": 83692,\n\t\"./tg\": 86361,\n\t\"./tg.js\": 86361,\n\t\"./th\": 31735,\n\t\"./th.js\": 31735,\n\t\"./tk\": 1568,\n\t\"./tk.js\": 1568,\n\t\"./tl-ph\": 96129,\n\t\"./tl-ph.js\": 96129,\n\t\"./tlh\": 13759,\n\t\"./tlh.js\": 13759,\n\t\"./tr\": 81644,\n\t\"./tr.js\": 81644,\n\t\"./tzl\": 90875,\n\t\"./tzl.js\": 90875,\n\t\"./tzm\": 16878,\n\t\"./tzm-latn\": 11041,\n\t\"./tzm-latn.js\": 11041,\n\t\"./tzm.js\": 16878,\n\t\"./ug-cn\": 74357,\n\t\"./ug-cn.js\": 74357,\n\t\"./uk\": 74810,\n\t\"./uk.js\": 74810,\n\t\"./ur\": 86794,\n\t\"./ur.js\": 86794,\n\t\"./uz\": 28966,\n\t\"./uz-latn\": 77959,\n\t\"./uz-latn.js\": 77959,\n\t\"./uz.js\": 28966,\n\t\"./vi\": 35386,\n\t\"./vi.js\": 35386,\n\t\"./x-pseudo\": 23156,\n\t\"./x-pseudo.js\": 23156,\n\t\"./yo\": 68028,\n\t\"./yo.js\": 68028,\n\t\"./zh-cn\": 9330,\n\t\"./zh-cn.js\": 9330,\n\t\"./zh-hk\": 89380,\n\t\"./zh-hk.js\": 89380,\n\t\"./zh-mo\": 60874,\n\t\"./zh-mo.js\": 60874,\n\t\"./zh-tw\": 96508,\n\t\"./zh-tw.js\": 96508\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}