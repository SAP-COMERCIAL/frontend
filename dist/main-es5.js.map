{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/components/auth/auth.component.ts","webpack:///src/app/components/auth/auth.component.html","webpack:///src/app/components/categories/categories/categories.component.html","webpack:///src/app/components/categories/categories/categories.component.ts","webpack:///src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component.html","webpack:///src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component.ts","webpack:///src/app/components/quotations/quotation-detail-files/quotation-detail-files.component.html","webpack:///src/app/components/quotations/quotation-detail-files/quotation-detail-files.component.ts","webpack:///src/app/components/quotations/quotation-detail/quotation-detail.component.html","webpack:///src/app/components/quotations/quotation-detail/quotation-detail.component.ts","webpack:///src/app/components/requisitions/requisition-detail/requisition-detail.component.html","webpack:///src/app/components/requisitions/requisition-detail/requisition-detail.component.ts","webpack:///src/app/demo-material-module.ts","webpack:///src/app/guards/auth.guards.ts","webpack:///src/app/helpers/excel-service.service.ts","webpack:///src/app/layouts/full/full.component.ts","webpack:///src/app/layouts/full/full.component.html","webpack:///src/app/layouts/full/header/header.component.ts","webpack:///src/app/layouts/full/header/header.component.html","webpack:///src/app/layouts/full/sidebar/sidebar.component.html","webpack:///src/app/layouts/full/sidebar/sidebar.component.ts","webpack:///src/app/models/users.ts","webpack:///src/app/pages/categories/categories-list/categories-list.component.ts","webpack:///src/app/pages/categories/categories-list/categories-list.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/projects/project-capture/project-capture.component.html","webpack:///src/app/pages/projects/project-capture/project-capture.component.ts","webpack:///src/app/pages/purchaseOrder/po-list/po-list.component.html","webpack:///src/app/pages/purchaseOrder/po-list/po-list.component.ts","webpack:///src/app/pages/quotation/quotation-list/quotation-list.component.html","webpack:///src/app/pages/quotation/quotation-list/quotation-list.component.ts","webpack:///src/app/pages/requisition/requisition-list/requisition-list.component.html","webpack:///src/app/pages/requisition/requisition-list/requisition-list.component.ts","webpack:///src/app/pages/storageInvoice/storage-invoice-list/storage-invoice-list.component.html","webpack:///src/app/pages/storageInvoice/storage-invoice-list/storage-invoice-list.component.ts","webpack:///src/app/pages/warehouse-review/warehouse-review.component.html","webpack:///src/app/pages/warehouse-review/warehouse-review.component.ts","webpack:///src/app/services/aesencrypt.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/category/category.service.ts","webpack:///src/app/services/login/login.service.ts","webpack:///src/app/services/projectCtegory/projectCateogry.service.ts","webpack:///src/app/services/projects/project.service.ts","webpack:///src/app/services/quotation/quotation.service.ts","webpack:///src/app/services/requisition/requisition.service.ts","webpack:///src/app/services/webapiurl.ts","webpack:///src/app/shared/accordion/accordion.directive.ts","webpack:///src/app/shared/accordion/accordionanchor.directive.ts","webpack:///src/app/shared/accordion/accordionlink.directive.ts","webpack:///src/app/shared/menu-items/menu-items.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/spinner.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///node_modules/moment/locale|sync|/^/.*$","webpack:///ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\crypto-js|crypto","webpack:///ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|crypto","webpack:///ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|fs","webpack:///ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|stream"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","AppComponent","AppModule","provide","LocationStrategy","useClass","PathLocationStrategy","BrowserModule","BrowserAnimationsModule","DemoMaterialModule","FormsModule","FlexLayoutModule","HttpClientModule","SharedModule","MatTableModule","MatSortModule","MatFormFieldModule","MatInputModule","ReactiveFormsModule","AppRoutingModule","ToastrModule","timeOut","positionClass","preventDuplicates","FullComponent","AppHeaderComponent","SpinnerComponent","AppSidebarComponent","CategoriesComponent","LoginComponent","CategoriesListComponent","ProjectCaptureDetailComponent","ProjectCaptureComponent","RequisitionListComponent","RequisitionDetailComponent","QuotationListComponent","PoListComponent","StorageInvoiceListComponent","QuotationDetailComponent","QuotationDetailFilesComponent","AuthComponent","WarehouseReviewComponent","routes","path","component","outlet","children","redirectTo","pathMatch","loadChildren","m","MaterialComponentsModule","DashboardModule","ProjectModule","CategoriesModule","RequisitionModule","QuotationModule","PoModule","StorageModule","WarehouseModule","canActivate","AuthGuard","RouterModule","$event","stopPropagation","dialogRef","data","snackBar","_projectCategoryservice","formBuilder","_snackBar","pageIndex","pageSize","currentPage","totalSize","almacen_id","fecha_inicial","Date","format","proyecto_id","responsableEdicion","presupuestoEdicion","activoEdicion","almacenEdicion","fechaEdicion","presupuesto","activo","displayedColumns","projectInfo","arrayData","projectId","getproyectosCategorias","getProjectCateogryById","subscribe","res","console","log","datasourceProjectCategories","MatTableDataSource","array","length","sort","error","element","event","camporesponsable","arraySaveData","proyectocategoria_id","codigo_proyectocategoria","responsable","toString","insertProjectCategoryDet","campo","target","value","arrayToDb","updateProjectCatgory","openSnackBar","elementAlmacen","message","action","open","duration","close","MAT_DIALOG_DATA","MatSort","MatPaginator","salir","_projectService","_categoryService","fecha_inicial_proyecto","fecha_final_proyecto","nombre_proyecto","cliente","presupuesto_proyecto","responsable_proyecto","centro_de_costo_proyecto","almacen","codigo_proyecto","proeycto_id_mayor","proeycto_numero_mayor","datasourceCategories","datasourceProyects","newProject","group","FormControl","Validators","centroDeCostos","getAllProjects","getEnabledCategories","patchValue","getProjectAll","Number","getCategoryAll","form","arrayTodb","cliente_id","insertProjects","insertCategories","updateProjects","datasourceProyectos","proyectoIdMaximo","codigoProyecto","arrayProjectCategories","filteredData","find","forEach","categoria_id","codigo_categoria","ultimoCaracter","valido","pattern","inputChar","String","fromCharCode","charCode","slice","i","substring","_keyUp","fechaInicial","save","cancel","_requisitionservice","proveedor_id","datasourcePoveedores","nombreArchivo","cotizacionId","QuotationInfo","cotizacion_Id","getProveedores","extencionArchivo","UploadDataQuotation","files","reader","FileReader","readAsBinaryString","name","onload","binarystr","result","dataUploadFile","push","file","dataShowUploadFile","arrayProvider","proveedor_nombre","onFileChange","uploadFile","_quotationservice","fecha","requisicion_id","requisicion_Numero","cotizacion_Numero","loadfile","buscar","requisicionId","quotationId","datasourcePorjects","datasourceRequisitionDetail","datasourceCotizacionesDet","arraytemp","seleccionar","getProyectos","getCategories","getrequisitionAll","arrayRequisicion_interna","codigoRequisicion_interna","controls","datasourceRequisition","filter","requisicioninterna_id","getCotizacionesAll","getRequisitionDetail","cantidadOrdenar","requisicionDet_id","uom","descripcionOrdenar","arrayRequisicioneDetalle","requisicionDetalle_id","requisicioninternaDetalle_id","cantidad","um","descripcion","codigo","insertQuotationHeader","iterator","end","start","part","dataSourceShow","paginator","filtro","trim","toLowerCase","requisicion_interna","getQuotationAll","datasourceCotizaciones","codigo_requisicioninterna","getRequisitionAll","getRequisitionById","Requisition_Id","proyecto","insertQuotation","insertQuotationDet","datasourceRequsition","requisitionIdMaximo","cotizacion_id","insertQuotationDetail","proyectoSelected","categorySelected","RequisitionSelected","fechaControl","setValue","UploadDataExcel","wb","type","wsname","SheetNames","ws","Sheets","dataExcel","validate","arrayErrores","arrayExcel","errorCantidad","errorUoM","errorDescripcion","errorSKU","DescripcionAnt","Descripcion","a","b","DESCRIPCION","toUpperCase","contador","SKU","CANTIDAD_REQUERIDA","UNIDAD","unidad_de_medida","requisition_Id","medida","MEDIDA","color","COLOR","otras_especificaciones","OTRAS_ESPECIFICACIONES","deleteUploadFile","proyectoCategoria_id","arrayProyectoCategoria","getrequisition","fo","cargo","no_pym","insertRequisition","updateRequisition","codigo_requisicion","arrayRequisition","arrayCodigoCategoria","cantidadRequisition","insertRequisitionDet","undefined","insertRequisitionDetail","MatAutocompleteModule","MatButtonModule","MatBottomSheetModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatDialogModule","MatExpansionModule","MatGridListModule","MatIconModule","MatListModule","MatMenuModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatBadgeModule","MatSidenavModule","MatSlideToggleModule","MatSliderModule","MatSnackBarModule","MatStepperModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatNativeDateModule","CdkTableModule","A11yModule","BidiModule","CdkAccordionModule","ObserversModule","OverlayModule","PlatformModule","PortalModule","router","localStorage","getItem","navigate","EXCEL_TYPE","EXCEL_EXTENSION","ExcelServiceService","json","excelFileName","worksheet","workbook","excelBuffer","bookType","saveAsExcelFile","buffer","fileName","Blob","getTime","changeDetectorRef","media","menuItems","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","removeListener","UserC","perfil","fraccionamiento_id","nombre_perfil","nombre_completo","nombre","apellido_paterno","apellido_materno","foto","correo","telefono","contrasegna","token","estado","nombre_estado","service","authService","route","cryptService","toastr","msg","spinerShow","userinterface","uname","p","encryptedMessage","claves","loginform","hash","update","digest","loginReq","response","setItem","err","status","clearForm","loginservice","check","dialog","_excelService","projectData","filterChange","EventEmitter","getProjects","dialogConfig","MatDialogConfig","width","height","disableClose","title","afterClosed","proyectoId","dataSourceShowToExcel","nombre_cliente","exportAsExcelFile","filtrar","descargarProyectos","nuevoProyecto","handlePage","ordenDeCompra_Id","Categoria_Id","Requisicion_Id","Fecha_OrdenDeCompra","Estatus","categoria","requisicion","Fecha_Requisicion","estatus","evetn","window","location","reload","descargarExcel","nuevaOrdenDeCompra","_quotationService","nuevaCotizacion","_requisitionService","nuevaRequisicion","requisicion_Codigo","AESEncryptService","secretKey","AuthService","http","url","GlobalUrl","userLoginReq","post","resetPasswordReq","changePasswordReq","put","categoryservice","get","environment","pwd","projectCategoryservice","projectservice","quotationservice","requisitionservice","url_webapi","AccordionDirective","navlinks","setTimeout","checkOpenLinks","selectedLink","link","selected","index","indexOf","splice","routeUrl","currentUrl","split","closeOtherLinks","events","pipe","NavigationEnd","AccordionAnchorDirective","navlink","toggle","AccordionLinkDirective","nav","_selected","addLink","removeGroup","MENUITEMS","state","icon","MenuItems","document","isSpinnerVisible","backgroundColor","NavigationStart","NavigationCancel","NavigationError","DOCUMENT","production","urlapi","apiContextDrivers","enableProdMode","platformBrowser","bootstrapModule","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {}\r\n","<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<router-outlet><app-spinner></app-spinner></router-outlet>","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\r\nimport { AppRoutingModule } from './app.routing';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\r\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DemoMaterialModule } from './demo-material-module';\r\nimport { LoginComponent } from './pages/login/login.component';  \r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { SpinnerComponent } from './shared/spinner.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { CategoriesComponent } from './components/categories/categories/categories.component';\r\nimport { CategoriesListComponent } from './pages/categories/categories-list/categories-list.component';\r\nimport { ProjectCaptureDetailComponent } from '../app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\r\nimport { ProjectCaptureComponent } from '../app/pages/projects/project-capture/project-capture.component';\r\nimport { ReactiveFormsModule} from '@angular/forms';\r\nimport { RequisitionListComponent } from './pages/requisition/requisition-list/requisition-list.component';\r\nimport { RequisitionDetailComponent } from './components/requisitions/requisition-detail/requisition-detail.component';\r\nimport { QuotationListComponent } from './pages/quotation/quotation-list/quotation-list.component';\r\nimport { PoListComponent } from './pages/purchaseOrder/po-list/po-list.component';\r\nimport { StorageInvoiceListComponent } from './pages/storageInvoice/storage-invoice-list/storage-invoice-list.component';\r\nimport { QuotationDetailComponent } from './components/quotations/quotation-detail/quotation-detail.component';\r\nimport { QuotationDetailFilesComponent } from './components/quotations/quotation-detail-files/quotation-detail-files.component';\r\nimport { AuthComponent } from './components/auth/auth.component';\r\nimport { WarehouseReviewComponent } from './pages/warehouse-review/warehouse-review.component';\r\n// import { Notification } from './components/notification/notification.component/notification.component.component';\r\n// import { NotificationComponent } from './components/notification/notification/notification.component' \r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FullComponent,\r\n    AppHeaderComponent,\r\n    SpinnerComponent,\r\n    AppSidebarComponent,\r\n    CategoriesComponent,\r\n    LoginComponent,\r\n    CategoriesListComponent,\r\n    ProjectCaptureDetailComponent,\r\n    ProjectCaptureComponent,\r\n    RequisitionListComponent,\r\n    RequisitionDetailComponent,\r\n    QuotationListComponent,\r\n    PoListComponent,\r\n    StorageInvoiceListComponent,\r\n    QuotationDetailComponent,\r\n    QuotationDetailFilesComponent,\r\n    AuthComponent,\r\n    WarehouseReviewComponent\r\n    // ,\r\n    // Notification.ComponentComponent,\r\n    // NotificationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    DemoMaterialModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 5000,\r\n      positionClass: 'toast-bottom-center',\r\n      preventDuplicates: true,\r\n    })\r\n    // RouterModule.forRoot(AppRoutingModule, {useHash: true}) // AppRoutes\r\n  ],\r\n  exports:[ MatTableModule ],\r\n  providers: [\r\n    {\r\n      provide: LocationStrategy,\r\n      useClass: PathLocationStrategy\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\n\r\n// import { AdminComponent } from './theme/layout/admin/admin.component';\r\nimport { AuthComponent } from  '../../src/app/components/auth/auth.component';\r\nimport { AuthGuard } from './guards/auth.guards';\r\n// import { ProfileGuard } from './guards/profile.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FullComponent,\r\n    outlet:'primary',\r\n    children: [\r\n      {\r\n        path: '',\r\n        // redirectTo: 'login',\r\n        redirectTo: '/auth/signin',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: '',\r\n        loadChildren:\r\n          () => import('./material-component/material.module').then(m => m.MaterialComponentsModule)\r\n      }\r\n      // {\r\n      //   path: 'login',\r\n      //   loadChildren: () => import('src/app/pages/authentication.module').then(module => module.AuthenticationModule)\r\n      // }\r\n      ,\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\r\n      },\r\n      {\r\n        path: 'project',\r\n        loadChildren: () => import('./pages/projects/project-capture/project.module').then(m => m.ProjectModule)\r\n      },\r\n      {\r\n        path: 'categories',\r\n        loadChildren: () => import('./pages/categories/categories-list/categories.module').then(m => m.CategoriesModule)\r\n      },\r\n      {\r\n        path: 'requisition',\r\n        loadChildren: () => import('./pages/requisition/requisition-list/requisition.module').then(m => m.RequisitionModule)\r\n      },\r\n      {\r\n        path: 'quotation',\r\n        loadChildren: () => import('./pages/quotation/quotation-list/quotation.module').then(m => m.QuotationModule)\r\n      },\r\n      {\r\n        path: 'po',\r\n        loadChildren: () => import('./pages/purchaseOrder/po-list/po.module').then(m => m.PoModule)\r\n      },\r\n      {\r\n        path: 'storage',\r\n        loadChildren: () => import('./pages/storageInvoice/storage-invoice-list/storage.module').then(m => m.StorageModule)\r\n      },\r\n      {\r\n        path: 'warehouse-review',\r\n        loadChildren: () => import('./pages/warehouse-review/warehouse-review.module').then(m => m.WarehouseModule)\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '',\r\n    component: FullComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'dashboard',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\r\n      },\r\n      {\r\n        path: 'project',\r\n        loadChildren: () => import('./pages/projects/project-capture/project.module').then(m => m.ProjectModule)\r\n      },\r\n      {\r\n        path: 'categories',\r\n        loadChildren: () => import('./pages/categories/categories-list/categories.module').then(m => m.CategoriesModule)\r\n      },\r\n      {\r\n        path: 'requisition',\r\n        loadChildren: () => import('./pages/requisition/requisition-list/requisition.module').then(m => m.RequisitionModule)\r\n      },\r\n      {\r\n        path: 'quotation',\r\n        loadChildren: () => import('./pages/quotation/quotation-list/quotation.module').then(m => m.QuotationModule)\r\n      },\r\n      {\r\n        path: 'po',\r\n        loadChildren: () => import('./pages/purchaseOrder/po-list/po.module').then(m => m.PoModule)\r\n      },\r\n      {\r\n        path: 'storage',\r\n        loadChildren: () => import('./pages/storageInvoice/storage-invoice-list/storage.module').then(m => m.StorageModule)\r\n      }\r\n    ],\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n      path: 'login',\r\n      component: LoginComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  // imports: [RouterModule.forRoot(routes, {useHash: true})],\r\nexports: [RouterModule],\r\nproviders: []\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n\r\n// export const AppRoutes: Routes = [\r\n//   {\r\n//     path: '',\r\n//     component: AuthComponent,\r\n//     children: [\r\n//       {\r\n//         path: '',\r\n//         redirectTo: 'auth/signin',\r\n//         pathMatch: 'full'\r\n//       },\r\n//       {\r\n//         path: '',\r\n//         loadChildren:\r\n//           () => import('./material-component/material.module').then(m => m.MaterialComponentsModule)\r\n//       },\r\n//       {\r\n//         path: 'dashboard',\r\n//         loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\r\n//       },\r\n//       {\r\n//         path: 'project',\r\n//         loadChildren: () => import('./pages/projects/project-capture/project.module').then(m => m.ProjectModule)\r\n//       },\r\n//       {\r\n//         path: 'categories',\r\n//         loadChildren: () => import('./pages/categories/categories-list/categories.module').then(m => m.CategoriesModule)\r\n//       },\r\n//       {\r\n//         path: 'requisition',\r\n//         loadChildren: () => import('./pages/requisition/requisition-list/requisition.module').then(m => m.RequisitionModule)\r\n//       },\r\n//       {\r\n//         path: 'quotation',\r\n//         loadChildren: () => import('./pages/quotation/quotation-list/quotation.module').then(m => m.QuotationModule)\r\n//       },\r\n//       {\r\n//         path: 'po',\r\n//         loadChildren: () => import('./pages/purchaseOrder/po-list/po.module').then(m => m.PoModule)\r\n//       },\r\n//       {\r\n//         path: 'storage',\r\n//         loadChildren: () => import('./pages/storageInvoice/storage-invoice-list/storage.module').then(m => m.StorageModule)\r\n//       }\r\n//     ]\r\n//   },\r\n//   {\r\n//       path: 'login',\r\n//       component: LoginComponent,\r\n//   }\r\n// ];\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet name=\"primary\"></router-outlet>\n","<!-- [formGroup]=\"newProject\" -->\n<div fxLayout=\"row\" >\n    <div fxFlex.gt-sm=\"95%\" >\n            <mat-card>\n              <mat-table [dataSource]=\"datasourceProjectCategories\" matSort class=\"mat-elevation-z8\" style=\"vertical-align: middle;\">\n                <ng-container matColumnDef=\"select\">\n                  <th mat-header-cell *matHeaderCellDef>\n                      <div style=\"width: 100%; text-align: left; vertical-align: middle;\">\n                          ACTIVAR\n                  </div>\n                    </th>\n                    <div style=\"width: 50px;\">\n                    <td mat-cell *matCellDef=\"let element; let i = index\">\n                      <mat-checkbox color=\"warn\"\n                                  [checked]=\"element.activo\"\n                                  (click)=\"$event.stopPropagation()\"\n                                  (change)=\"ActivarDesactivar(element.activo, $event)\"\n                                  [(ngModel)]=\"element.activo\"\n                                  >\n                                  <!-- formControlName=\"activo\"  -->\n                                  <!--[checked]=\"selection.isSelected(element.proyecto_id)\"-->\n                                  <!--[(ngModel)]=\"element.activo\" -->\n                      </mat-checkbox>\n                    </td>\n                  </div>\n              </ng-container>\n\n              <!-- Position Column -->\n              <ng-container matColumnDef=\"codigo_proyectocategoria\" >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-column-20\"> <span class=\"order-th\">Número <mat-icon class=\"orage-icon\" aria-hidden=\"false\"></mat-icon></span> </th>\n                <td mat-cell *matCellDef=\"let element\" style=\"width: 500px;\"> {{element.codigo_proyectocategoria}} </td>\n              </ng-container>\n\n              <!-- Position Column -->\n              <ng-container matColumnDef=\"nombre_categoria\" >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-column-20\"> <span class=\"order-th\">Nombre <mat-icon class=\"orage-icon\" aria-hidden=\"false\"></mat-icon></span> </th>\n                <td mat-cell *matCellDef=\"let element\" style=\"width: 500px;\"> {{element.nombre_categoria}} </td>\n              </ng-container>\n\n              <!-- responsable Column -->\n              <ng-container matColumnDef=\"responsable\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Responable </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                  <mat-form-field>\n                    <mat-label>{{element.responsable}}</mat-label>\n                    <input [type]=\"element.responsable\" matInput [(ngModel)]=\"element.responsable\" (keyup)=\"checkEnterKey($event, 'responsable')\">\n                  </mat-form-field>\n                  <!-- <input type=\"text\" class=\"controltable100\" [(ngModel)]=\"element.responsable\" value=\"responsableEdicion\">  -->\n                </td>\n                <!-- formControlName=\"responsable\" -->\n              </ng-container>\n\n              <!-- presupuesto Column -->\n              <ng-container matColumnDef=\"presupuesto\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Presupuesto </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                  <mat-form-field>\n                    <mat-label>{{element.presupuesto}}</mat-label>\n                    <input [type]=\"element.presupuesto\" matInput [(ngModel)]=\"element.presupuesto\" (keyup)=\"checkEnterKey($event, 'presupuesto')\">\n                  </mat-form-field>\n                  <!-- <input type=\"number\" step=\"any\" class=\"controltable100\" formControlName=\"presupuesto\" value=\"{{element.presupuesto}}\" placeholder=\"{{element.presupuesto}}\">  -->\n                </td>\n                  <!--[(ngModel)]=\"element.presupuesto\" -->\n              </ng-container>\n\n              <!-- fecha incial Column -->\n              <ng-container matColumnDef=\"fecha_inicial\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha incial </th>\n                <td mat-cell *matCellDef=\"let element\"> <div><mat-form-field appearance=\"fill\">\n                  <mat-label>{{element.fecha_inicial | date: 'dd-MM-yyyy'}}</mat-label>\n                  <input matInput [matDatepicker]=\"picker\" (dateChange)=\"checkEnterKey($event, 'fecha')\" class=\"controltable100\" [(ngModel)]=\"element.fecha_inicial\" ><!-- formControlName=\"fecha_inicial\"\" -->\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                  <mat-datepicker [startAt]=\"element.fecha_inicial\" #picker></mat-datepicker>\n                </mat-form-field></div></td>\n              </ng-container>\n\n              <!-- almacen Column -->\n              <ng-container matColumnDef=\"almacen_id\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Almacen </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                  <div>\n                    <mat-select class=\"form-control\"  [(ngModel)]=\"element.almacen_id\" (selectionChange)=\"seleccionaAlmacen($event, 'almacen')\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\" [(ngModel)]=\"element.almacen\" formControlName=\"almacen_id\" -->\n                      <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n                      <mat-option value= \"1\">California</mat-option>\n                      <mat-option value= \"2\">Norte</mat-option>\n                      <mat-option value= \"3\">Centro</mat-option>\n                    </mat-select>\n                  </div>\n                </td>\n              </ng-container>\n\n              <!-- Email Column -->\n              <ng-container matColumnDef=\"actualizar\">\n                <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Actualizar </th>\n                <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"save(element, element.responsable, $event)\">Actualizar</button> </td>\n              </ng-container>\n              \n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n              </mat-table> \n            </mat-card>\n            <table>\n                <tr>\n                  <td style=\"width: 10px;\"></td>\n                  <td style=\"width: 300px;\"></td>\n                  <td style=\"width: 500px;\"></td>\n                  <td style=\"width: 100px;\"></td>\n                  <td style=\"width: 100px;\"><button mat-raised-button color=\"warn\" (click)=\"salir()\">Cerrar</button></td>\n                  <td style=\"width: 100px;\"></td>\n                  <td style=\"width: 10px;\"></td>\n                </tr>\n              </table>\n    </div>\n</div>","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {MatListModule} from '@angular/material/list';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport { MatSelectChange } from '@angular/material/select';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n  projectInfo : any;\n  projectId : any;\n\n  almacen_id : any = '1';\n  fecha_inicial : any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  proyecto_id : any = 0;\n  responsableEdicion : any = '';\n  presupuestoEdicion : any = '';\n  activoEdicion : boolean = true;\n  almacenEdicion : any = '';\n  fechaEdicion : any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  presupuesto : any = 0;\n  activo : any = true;\n\n  displayedColumns: string[] = ['select','codigo_proyectocategoria', 'nombre_categoria', 'responsable', 'presupuesto', 'fecha_inicial', 'almacen_id', 'actualizar'];\n  datasourceProjectCategories : MatTableDataSource<projectCategoryModel>\n  // newProject: FormGroup;\n  \n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n\n  constructor(public dialogRef: MatDialogRef<projectCategoryModel>\n      , @Inject(MAT_DIALOG_DATA) public data,public snackBar: MatSnackBar\n      , private _projectCategoryservice : projectCategoryservice\n      , private formBuilder: FormBuilder\n      , private _snackBar : MatSnackBar) { \n        this.projectInfo = data.arrayData;\n        this.projectId = data.projectId;\n\n      //   this.newProject = this.formBuilder.group({\n      //     responsable: new FormControl(''),\n      //     presupuesto: new FormControl(''),\n      //     fecha_inicial: new FormControl('', Validators.required),\n      //     almacen_id: new FormControl(''),\n      //     activo: new FormControl('')\n      // });\n      }\n\n  ngOnInit(): void {\n    \n    this.getproyectosCategorias();\n  }\n\n  getproyectosCategorias(){\n    // Proyectos categorias\n    this._projectCategoryservice.getProjectCateogryById(this.projectId).subscribe(\n      res=> {\n        // console.log('this.datasourceProjectCategories.filteredData[\"responsable\"]', this.datasourceProjectCategories.filteredData[\"responsable\"]);\n        console.log('Proyectos', res);\n        this.datasourceProjectCategories = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        this.datasourceProjectCategories.sort = this.sort;\n        // this.newProject.controls[\"responsable\"].setValue = this.datasourceProjectCategories.filteredData[\"responsable\"];\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n\n  }\n\n  ActivarDesactivar(element : any, event : Event){\n    this.activoEdicion = event[\"checked\"]\n    console.log('Actualiza registro de activar y desactivar', event[\"checked\"])\n  }\n\n  save(element : any, camporesponsable : any, event : Event){\n    let arraySaveData : any;\n    console.log('frfrfr', element);\n    console.log('ENTRADA', event);\n\n    arraySaveData = {proyectocategoria_id : element.proyectocategoria_id\n          , codigo_proyectocategoria : element.codigo_proyectocategoria\n          , presupuesto : (this.presupuestoEdicion != '') ? this.presupuestoEdicion : element.presupuesto //this.newProject.controls[\"presupuesto\"].value\n          , responsable : (this.responsableEdicion != '') ? this.responsableEdicion : element.responsable //this.newProject.controls[\"responsable\"].value\n          , fecha_inicial : (this.fechaEdicion != '') ? this.fechaEdicion : moment(element.fecha_inicial, 'YYYY-MM-DD').format('YYYY-MM-DD')\n          , almacen_id : (this.almacenEdicion != '') ? this.almacenEdicion : element.almacen_id.toString()\n          , activo : this.activoEdicion // (this.activoEdicion != false) ? this.activoEdicion : element.activo\n        }\n\n          console.log('datos a actualizar', arraySaveData)\n\n          this.insertProjectCategoryDet(arraySaveData);\n\n          // Limpia variables\n          this.responsableEdicion = '';\n          this.presupuestoEdicion = '';\n          this.fechaEdicion = '';\n\n  }\n\n  checkEnterKey(event: Event, campo : any){\n\n    switch (campo){\n      case 'responsable' : this.responsableEdicion = (event.target as HTMLInputElement).value;\n        break;\n      case 'presupuesto' : this.presupuestoEdicion = (event.target as HTMLInputElement).value;\n        break;\n      case 'fecha' : this.fechaEdicion = moment((event.target as HTMLInputElement).value, 'YYYY-MM-DD').format('YYYY-MM-DD');\n        break;\n      default : this.responsableEdicion = '';\n        break;\n    }\n    console.log('filtro', this.responsableEdicion);\n  }\n\n  insertProjectCategoryDet(arrayToDb : any){\n    // Inserta Proyecto Categoria\n    this._projectCategoryservice.updateProjectCatgory(arrayToDb).subscribe(\n      res=> {\n        console.log('ACTUALIZA PROYECO CATEGORIA', arrayToDb);\n        this.openSnackBar('El registro se actualizó con éxito', '');\n      },\n      error => console.log(\"error al insertar proyectos categorias\",error)\n    )\n    \n  }\n\n  seleccionaAlmacen(elementAlmacen : any){\n\n    this.almacenEdicion = elementAlmacen.value;\n    console.log('almacen', this.almacenEdicion);\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n  \n  salir(){\n    this.dialogRef.close();\n  }\n\n}\n"," <div fxLayout=\"row\">\n  <h4>Nuevo Proyecto</h4>\n</div>\n<br>\n<div mat-dialog-content-example [formGroup]=\"newProject\">\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Código</div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n        <div>\n          <mat-form-field>\n          <!-- <input type=\"text\" class=\"form-control form-control-line control\" formControlName=\"codigo_proyecto\" [(ngModel)]=\"codigo_proyecto\" disabled > -->\n          <input [type]=\"codigo_proyecto\" matInput class=\"form-control form-control-line control\" formControlName=\"codigo_proyecto\" [(ngModel)]=\"codigo_proyecto\" disabled >\n          \n          <span *ngIf=\"newProject.hasError('codigo_proyecto', 'codigo_proyecto') && newProject.get('codigo_proyecto').touched\">\n            Please enter the correct email, this email not valid.\n          </span>\n        </mat-form-field>\n        </div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Nombre</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div>\n        <mat-form-field>\n          <!--[(ngModel)]=\"nombretxt\" -->\n          <!-- <input type=\"text\" class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"nombre_proyecto\" [(ngModel)]=\"nombre_proyecto\"> -->\n          <input [type]=\"nombre_proyecto\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"nombre_proyecto\" [(ngModel)]=\"nombre_proyecto\">\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Cliente</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"cliente\" [(ngModel)]=\"cliente\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\"-->\n              <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n              <mat-option value= \"1\">Javier Peña y asociados</mat-option>\n              <mat-option value= \"2\">Ragasa</mat-option>\n              <mat-option value= \"3\">Cemex</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Presupuesto</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div>\n        <mat-form-field>\n          <input [type]=\"presupuesto_proyecto\" matInput class=\"form-control form-control-line control\" formControlName=\"presupuesto_proyecto\" [(ngModel)]=\"presupuesto_proyecto\" step=\"any\" (keyup)=\"_keyUp($event)\" > <!--required=\"required\" min=\"0\" max=\"999999999\"  pattern=\"^\\$\\d{1,3}(,\\d{3})*(\\.\\d+)?$\"-->\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Fecha Inicial</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div><mat-form-field appearance=\"fill\">\n          <mat-label>Choose a date</mat-label>\n          <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha_inicial_proyecto\" (dateChange)=\"fechaInicial($event)\" [(ngModel)]=\"fecha_inicial_proyecto\" class=\"control\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field></div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Fecha Final</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div><mat-form-field appearance=\"fill\">\n        <mat-label>Choose a date</mat-label>\n        <input matInput [matDatepicker]=\"pickerf\" formControlName=\"fecha_final_proyecto\" [(ngModel)]=\"fecha_final_proyecto\" class=\"control\">\n        <mat-datepicker-toggle matSuffix [for]=\"pickerf\"></mat-datepicker-toggle>\n        <mat-datepicker #pickerf></mat-datepicker>\n      </mat-form-field></div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Responsable</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\">\n        <div>\n          <mat-form-field>\n            <input [type]=\"responsable_proyecto\" matInput class=\"form-control form-control-line control\" placeholder=\"Responsable\" formControlName=\"responsable_proyecto\" [(ngModel)]=\"responsable_proyecto\">\n          </mat-form-field>\n        </div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Centro de costos</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\">\n      <div>\n        <mat-form-field>\n          <input [type]=\"centro_de_costo_proyecto\" matInput class=\"form-control form-control-line control\" placeholder=\"centroDeCostos\" formControlName=\"centroDeCostos\" [(ngModel)]=\"centro_de_costo_proyecto\">\n        </mat-form-field>\n      </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Almacén</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control\"  formControlName=\"almacen\" [(ngModel)]=\"almacen\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\"-->\n              <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n              <mat-option value= \"1\">California</mat-option>\n              <mat-option value= \"2\">Norte</mat-option>\n              <mat-option value= \"3\">Centro</mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n  </div>\n</div>\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n    </div>\n  </div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport { from } from 'rxjs';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryModel } from '../../../models/category.model';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { ProjectCaptureComponent } from 'src/app/pages/projects/project-capture/project-capture.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { coerceStringArray } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'app-project-capture-detail',\n  templateUrl: './project-capture-detail.component.html',\n  styleUrls: ['./project-capture-detail.component.css']\n})\nexport class ProjectCaptureDetailComponent implements OnInit {\n\t\n  fecha_inicial_proyecto:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  fecha_final_proyecto:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  nombre_proyecto : any = ''  \n  cliente : any = '1';\n  presupuesto_proyecto : any = 0;\n  responsable_proyecto : any = '';\n  centro_de_costo_proyecto : any = '1';\n  almacen : any = '1';\n  codigo_proyecto : any = '';\n  proeycto_id_mayor : number = 0;\n  proeycto_numero_mayor : number = 0;\n\n  numerotxt : any;\n  nombretxt : any;\n  clientecbo : any;  \n  presupuestotxt : any;\n  responsabletxt : any;\n  fechaInicialtxt : any;\n  fechaFinaltxt : any;\n  centroDeCostoscbo : any;\n  almacencbo : any;\n  projectInfo : any;\n  projectId : any;\n  public newProject: FormGroup;\n  datasourceCategories : any[] = [];\n  datasourceProyects : any[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , @Inject(MAT_DIALOG_DATA) public data,public _snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n  ) { \n    this.projectInfo = data.arrayData;\n    this.projectId = data.projectId;\n\n    this.newProject = this.formBuilder.group({\n      codigo_proyecto :  new FormControl(this.codigo_proyecto, [Validators.required, Validators.minLength(4), Validators.maxLength(7)]),\n      // proyecto_id: new FormControl(''),\n      nombre_proyecto: new FormControl('', [Validators.required, Validators.minLength(1), Validators.maxLength(50)]),\n      cliente: new FormControl(this.cliente, [Validators.required]),\n      // presupuesto_proyecto: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,3}$')]],\n      presupuesto_proyecto: new FormControl(this.presupuesto_proyecto, [Validators.required, Validators.pattern('^[0-9]+([.][0-9]{1,2})?$')]),\n      // presupuesto_proyecto: new FormControl('', Validators.required),\n      fecha_inicial_proyecto: new FormControl(''),\n      fecha_final_proyecto: new FormControl(''),\n      responsable_proyecto: new FormControl(''),\n      centroDeCostos: new FormControl(''),\n      almacen: new FormControl('')  \n    });\n  }\n\n  ngOnInit(): void {\n\n    this.getAllProjects();\n    this.getEnabledCategories();\n\n    if(this.projectId != 0){\n        this.newProject.patchValue({\n          proyecto_id : this.projectInfo[\"proyecto_id\"],\n          codigo_proyecto : this.projectInfo[\"codigo_proyecto\"],\n          nombre_proyecto : this.projectInfo[\"nombre_proyecto\"] ,\n          cliente : this.projectInfo[\"cliente_id\"].toString(),\n          presupuesto_proyecto : this.projectInfo[\"presupuesto_proyecto\"] ,\n          fecha_inicial_proyecto : this.projectInfo[\"fecha_inicial_proyecto\"],\n          fecha_final_proyecto : this.projectInfo[\"fecha_final_proyecto\"] ,\n          responsable_proyecto : this.projectInfo[\"responsable_proyecto\"],\n          centroDeCostos : this.projectInfo[\"centro_de_costo_proyecto\"].toString() ,\n          almacen : this.projectInfo[\"almacen_id\"].toString()\n      })\n      this.nombre_proyecto = this.projectInfo[\"nombre_proyecto\"];\n      this.cliente = this.projectInfo[\"cliente_id\"].toString() ;\n      this.presupuesto_proyecto = this.projectInfo[\"presupuesto_proyecto\"];\n      this.fecha_inicial_proyecto = this.projectInfo[\"fecha_inicial_proyecto\"];\n      this.fecha_final_proyecto = this.projectInfo[\"fecha_final_proyecto\"];\n      this.responsable_proyecto = this.projectInfo[\"responsable_proyecto\"];\n      this.centro_de_costo_proyecto = this.projectInfo[\"centro_de_costo_proyecto\"].toString();\n      this.almacen = this.projectInfo[\"almacen_id\"].toString();\n      this.codigo_proyecto = '';\n    }\n\n  }\n\n  getAllProjects(){\n    // Actualiza registro NUEVO\n    this._projectService.getProjectAll().subscribe(\n      res=> {\n        this.datasourceProyects = res;\n        if(this.projectId == 0){\n          this.codigo_proyecto = Number(this.datasourceProyects[this.datasourceProyects.length - 1][\"codigo_proyecto\"]) + 1;\n          console.log('PROEYCTOS TODOS', this.proeycto_numero_mayor);\n        }else{\n          this.codigo_proyecto = this.projectInfo[\"codigo_proyecto\"];\n        }\n\n      },\n      error => console.log(\"error consulta proyectos\",error)\n    )\n  }\n\n  getEnabledCategories(){\n    // Actualiza registro NUEVO\n    this._categoryService.getCategoryAll().subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('CATEGORIAS', this.datasourceCategories);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n  save(form, event){\n\n    let arrayTodb : any;\n\n    if(this.projectId == 0){\n\n      arrayTodb = { codigo_proyecto : this.codigo_proyecto,\n                  nombre_proyecto : this.nombre_proyecto,\n                  cliente_id : this.cliente,\n                  presupuesto_proyecto : this.presupuesto_proyecto,\n                  fecha_inicial_proyecto : moment(this.fecha_inicial_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n                  fecha_final_proyecto : moment(this.fecha_final_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n                  responsable_proyecto : this.responsable_proyecto,\n                  centro_de_costo_proyecto : '', //this.centro_de_costo_proyecto,\n                  almacen_id : this.almacen};\n\n      // Actualiza registro NUEVO\n      this._projectService.insertProjects(arrayTodb).subscribe(\n        res=> {\n          console.log('Se inserto con éxito', res);\n          this.openSnackBar('Se genero el proyecto exitosamente', 'success');\n          \n          // Inserta categorias\n          this.insertCategories();\n        },\n        error => console.log(\"error alta de proyectos\",error)\n      )\n    // Inserta categorias\n    // this.insertCategories();\n    // this.dialogRef.close();\n    }\n    else{\n      arrayTodb = {proyecto_id : this.projectId,\n        nombre_proyecto : this.nombre_proyecto,\n        cliente_id : this.cliente,\n        presupuesto_proyecto : this.presupuesto_proyecto,\n        fecha_inicial_proyecto : moment(this.fecha_inicial_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n        fecha_final_proyecto : moment(this.fecha_final_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n        responsable_proyecto : this.responsable_proyecto,\n        centro_de_costo_proyecto : this.centro_de_costo_proyecto,\n        almacen_id : this.almacen,\n        codigo_proyecto : this.codigo_proyecto};\n\n        // Actualiza registro EDICION\n        this._projectService.updateProjects(arrayTodb).subscribe(\n        res=> {\n        console.log('Se edito con éxito', res);\n        },\n        error => console.log(\"error consulta regiones\",error)\n        )\n    }\n    this.dialogRef.close();\n  }\n\ninsertCategories(){\n  // Obtiene Proyecto Registrado\n  let datasourceProyectos : MatTableDataSource<projectModel>\n  let proyectoIdMaximo : any = \"0\";\n  let codigoProyecto : any = \"0\";\n  let arrayProjectCategories : any;\n  this._projectService.getProjectAll().subscribe(\n    res=> {\n      datasourceProyectos = new MatTableDataSource(res);\n\n      proyectoIdMaximo = (datasourceProyectos.filteredData[datasourceProyectos.filteredData.length -1][\"proyecto_id\"]);\n      codigoProyecto = datasourceProyectos.filteredData.find(e => e.proyecto_id == proyectoIdMaximo);\n\n      this.datasourceCategories.forEach(element => {\n        arrayProjectCategories = {proyecto_id : proyectoIdMaximo\n            , categoria_id : element.categoria_id\n            , presupuesto : 0\n            , responsable : ''\n            , fecha_inicial : moment(new Date, 'YYYY-MM-DD').format('YYYY-MM-DD')\n            , almacen_id : 1\n            , codigo_proyectocategoria : codigoProyecto[\"codigo_proyecto\"] + '-' + element.codigo_categoria\n        }\n\n        // Inserta Proyecto Categoria\n        this._projectCategoryservice.insertProjects(arrayProjectCategories).subscribe(\n          res=> {\n            console.log('CATEGORIAS', this.datasourceCategories);\n          },\n          error => console.log(\"error al insertar proyectos categorias\",error)\n        )\n        \n        arrayProjectCategories = null;\n\n      });\n      \n    },\n    error => console.log(\"error consulta todos los proyectos\",error)\n  )\n\n}\n\n  fechaInicial(event){\n    console.log('fecha', this.fecha_inicial_proyecto);\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  _keyUp(event: any) {\n    let ultimoCaracter : any;\n    let valido : boolean = false;\n\n    console.log('presione : ', (event.target as HTMLInputElement).value);\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n\n    if(this.presupuesto_proyecto.length > 0){\n      ultimoCaracter = this.presupuesto_proyecto.slice(-1);\n\n      for(let i = 0; i < 10; i++)\n      {\n        if(ultimoCaracter == i){\n          valido = true;\n        }\n      }\n\n      if(ultimoCaracter == '.'){\n        valido = true;\n      }\n\n      if(valido == false)\n      {\n        this.presupuesto_proyecto = this.presupuesto_proyecto.substring(0,this.presupuesto_proyecto.length-1)\n      }\n\n    }\n  }\n\n}\n","<div fxLayout=\"row\">\n    <h4>Capturar cotizaciones</h4>\n  </div>\n  <br>\n  <div mat-dialog-content-example [formGroup]=\"newProject\">\n    <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"30%\">\n            <div><br>Cotización</div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n            <div><br></div>\n          </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n            <mat-form-field>\n                <input [type]=\"cotizacionId\" matInput class=\"form-control form-control-line control\" formControlName=\"cotizacion_Id\" [(ngModel)]=\"cotizacionId\" disabled>\n            </mat-form-field>\n            </div>\n          </div>\n    </div>\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"30%\">\n          <div><br>Proveedor</div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n          <div><br></div>\n        </div>\n      <div fxFlex.gt-sm=\"25%\" >\n          <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"proveedor_id\" [(ngModel)]=\"proveedor_id\" >\n              <mat-option *ngFor=\"let op of datasourcePoveedores\" [value]=\"op.proveedor_id\" >\n                {{op.proveedor_nombre}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          </div>\n        </div>\n  </div>\n\n    <!-- CARGA DE ARCHIVOS -->\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div class=\"input-group mb-3\">\n                          <input type=\"file\" name=\"loadFile\" id=\"loadFile\" class=\"form-control form-control-line\" placeholder=\"SELECCIONA ARCHIVO\" style=\"display: none;\" (change)=\"onFileChange($event)\" onclick=\"this.value=null;\"> <!--[(ngModel)]=\"buscar\" -->\n                          <label for=\"loadFile\" style=\"margin: 0; text-align: left; width: 400px;\" class=\"btn btn-outline-dark\"><b>{{nombreArchivo}}</b></label><br><!--{{nombreArchivo}}  formControlName=\"loadFile\"--> \n                      </div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\">\n          <div><button mat-raised-button color=\"primary\" (click)=\"uploadFile(newProject, $event)\">Subir Archivo</button></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\">\n        <div><button mat-raised-button color=\"warn\" (click)=\"cancel(newProject, $event)\">Cancelar</button></div>\n      </div>\n  </div>\n\n  <!-- BOTONES -->\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div class=\"input-group mb-3\">\n          <!-- <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Generar ODC</button></div> -->\n        </div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\">\n      <!-- <div><button mat-raised-button color=\"warn\" (click)=\"cancel(newProject, $event)\">Cancelar</button></div> -->\n    </div>\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n</div>\n\n  </div>\n    <!-- INICIA CUERPO DE LA PÁGINA-->\n    <!-- INICIA CUERPO DE LA PÁGINA-->\n    <div class=\"col-12 col-md-12 p-0\">\n      <div class=\"card\">\n        <div class=\"card-body card-body-table\">\n          <mat-table [dataSource]=\"dataShowUploadFile\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n              \n            <!-- ID Column -->\n            <ng-container matColumnDef=\"SKU\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>SKU</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.SKU}} </td>\n            </ng-container>\n\n            <!-- ID Column -->\n            <ng-container matColumnDef=\"cantidad\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> <span>Cantidad</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.file}} </td>\n            </ng-container>\n            \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </mat-table>\n    \n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator> -->\n      </div>\n\n\n\n  ","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {MAT_SNACK_BAR_DATA} from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport * as XLSX from 'xlsx';\nimport { from } from 'rxjs';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryModel } from '../../../models/category.model';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { ProjectCaptureComponent } from 'src/app/pages/projects/project-capture/project-capture.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from '../../../services/requisition/requisition.service';\nimport { requisitionModelDetail } from 'src/app/models/requisition.model.detail';\nimport { AppConstants } from '../../../shared/app.constants';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { filter } from 'rxjs-compat/operator/filter';\nimport { quotationDetailModel } from 'src/app/models/quotation-detail.model';\nimport { quotationDetailFileModel } from 'src/app/models/quotation-detail-file.model';\nimport { providerModel } from 'src/app/models/provider.model';\n\n@Component({\n  selector: 'app-quotation-detail-files',\n  templateUrl: './quotation-detail-files.component.html',\n  styleUrls: ['./quotation-detail-files.component.css']\n})\nexport class QuotationDetailFilesComponent implements OnInit {\n\n  // =========================\n  // DECLARACIONES\n  // =========================\n\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n\n  QuotationInfo : any;\n  newProject: FormGroup;\n  displayedColumns = ['SKU', 'file'];\n\n  // NgModels\n  proveedor_id : any = 0;\n  UploadDataQuotation : MatTableDataSource<quotationDetailFileModel>;\n  datasourcePoveedores : any[] = [];\n  public nombreArchivo : any = 'selecciona archivo';\n  dataExcel: any[];\n  dataShowUploadFile : MatTableDataSource<quotationDetailFileModel>;\n  \n  // NGModels\n  cotizacionId : any = 0;\n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , @Inject(MAT_DIALOG_DATA) public data\n    , public snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n    , private _snackBar : MatSnackBar\n    , private _requisitionservice : requisitionservice\n    // , private notificationService: NotificationService,\n  ) { \n    this.QuotationInfo = data.arrayData;\n    this.cotizacionId = data.cotizacionId;\n\n    this.newProject = this.formBuilder.group({\n      cotizacion_Id : new FormControl(''),\n      proveedor_id : new FormControl('')\n  });\n  }\n\n  ngOnInit(): void {\n    this.cotizacionId = this.QuotationInfo[\"cotizacion_id\"];\n    console.log('cotizacion aqui', this.QuotationInfo[\"cotizacion_id\"]);\n    this.getProveedores();\n  }\n\n  onFileChange(event){\n    /* wire up file reader */\n    const target: DataTransfer = <DataTransfer>(event.target);\n    let extencionArchivo : string = '';\n\n    this.UploadDataQuotation = null;\n\n    if (target.files.length !== 1) {\n      throw new Error('No se pueden seleccionar multiples archivos');\n    }\n\n    this.nombreArchivo = (target.files.length > 0) ? target.files[0][\"name\"].substring(1,30) : \" (archivo nuevo) \";\n    const reader: FileReader = new FileReader();\n    reader.readAsBinaryString(target.files[0]);\n    extencionArchivo = target.files[0].name.substring(target.files[0].name.length - 5,target.files[0].name.length)\n    \n      console.log('AQUI ESTAN LAS EXTENCIONES DE EXCEL')\n      reader.onload = (e: any) => {\n        /* create workbook */\n  \n        const binarystr: string = e.target.result;\n \n      };\n  }\n\n  // PROCEDIMIENTO\n  validate(data : any)\n  {\n    // Valida que todos los datos esten completos\n    return data\n  }\n\n  deleteUploadFile(event: any){\n    this.nombreArchivo = \" (archivo nuevo) \";\n    this.UploadDataQuotation = null;\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  save(form, event){\n\n  }\n\n  uploadFile(form, event){\n\n    let dataUploadFile : any[] = [];\n\n    dataUploadFile.push({proveedor_id : this.proveedor_id, file : this.nombreArchivo });\n\n    this.dataShowUploadFile = new MatTableDataSource(dataUploadFile);\n\n    this.openSnackBar('Se subió el archivo correctamente  ' + this.nombreArchivo, '');\n  }\n\n  cancel(form, event){\n    this.dialogRef.close();\n  }\n\n  // =====================\n  // CONSILTA DE SERVICIOS\n  // =====================\n\n  getProveedores(){\n\n    let arrayProvider : any [];\n\n    arrayProvider = [];\n    arrayProvider.push({proveedor_id : 1, proveedor_nombre : 'CABLES MONTERREY SA DE CV'},\n                    {proveedor_id : 2, proveedor_nombre : 'VENTA DE CABLEADO SA'}\n                    )\n\n    this.datasourcePoveedores = arrayProvider;\n\n    console.log(this.datasourcePoveedores);\n  }\n}\n","<div fxLayout=\"row\">\n  <h4>Nueva Cotización</h4>\n</div>\n<br>\n<div mat-dialog-content-example [formGroup]=\"newProject\">\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <!-- <div><br>Proyecto</div> -->\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div>\n        <mat-form-field>\n          <mat-select class=\"form-control control\" formControlName=\"proyecto_id\" [(ngModel)]=\"proyecto_id\" (selectionChange)=\"proyectoSelected()\" >\n            <mat-option *ngFor=\"let op of datasourcePorjects\" [value]=\"op.proyecto_id\" >\n              {{op.codigo_proyecto}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Proyecto-Categoria</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"categoria_id\" [(ngModel)]=\"categoria_id\" (selectionChange)=\"categorySelected()\" >\n              <mat-option *ngFor=\"let opx of datasourceCategories\" [value]=\"opx.proyectocategoria_id\">\n                {{opx.codigo_proyectocategoria}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Requisición</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div>\n      <mat-form-field>\n        <mat-select class=\"form-control control\" formControlName=\"requisicion_Numero\" [(ngModel)]=\"requisicion_Numero\" (selectionChange)=\"RequisitionSelected()\" >\n          <mat-option *ngFor=\"let op of datasourceRequisition\" [value]=\"op.requisicioninterna_id\">\n            {{op.codigo}}\n          </mat-option>\n        </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div>Fecha</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div><mat-form-field appearance=\"fill\">\n          <mat-label>Choose a date</mat-label>\n          <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" (dateChange)=\"fechaControl($event)\" class=\"control\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field></div>\n    </div>\n  </div>\n  <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>Cotización</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"cotizacion_Numero\" matInput class=\"form-control form-control-line control\" formControlName=\"cotizacion_Numero\" [(ngModel)]=\"cotizacion_Numero\">\n            </mat-form-field>\n          </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <!-- <div><button mat-raised-button color=\"accent\" (click)=\"find(newProject, $event)\">Buscar</button></div> -->\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n      </div>\n  </div>\n  <br>\n  <!--Tabla de captura-->\n  <div fxLayout=\"row\" class=\"division\">      \n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Generar Cotización</button></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n    </div>\n  </div>\n  \n   <!-- INICIA CUERPO DE LA PÁGINA-->\n   <div class=\"col-12 col-md-12 p-0\">\n    <div class=\"card\">\n      <div class=\"card-body card-body-table\">\n        <mat-table [dataSource]=\"datasourceRequisitionDetail\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n\n          <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                  <div style=\"width: 100%; text-align: left; vertical-align: middle;\">\n                      SELECCIONAR\n              </div>\n                </th>\n                <div style=\"width: 50px;\">\n                <td mat-cell *matCellDef=\"let element; let i = index\">\n                  <mat-checkbox color=\"warn\"\n                              formControlName=\"seleccionar\" \n                              (click)=\"$event.stopPropagation()\"\n                              (change)=\"SeleccionarRegistro(element.cantidad, element.requisicioninternadetalle_id, element.um, element.descripcion, $event)\"\n                              >\n                              <!--[checked]=\"selection.isSelected(element.proyecto_id)\"-->\n                              <!--[(ngModel)]=\"element.activo\" -->\n                  </mat-checkbox>\n                </td>\n              </div>\n          </ng-container>\n\n          <!-- SKU Column -->\n          <ng-container matColumnDef=\"sku\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>sku</span> </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.sku}} </td>\n          </ng-container>\n\n          <!-- descripción Column -->\n          <ng-container matColumnDef=\"descripcion\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Descripción </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.descripcion}} </td>\n          </ng-container>\n\n          <!-- descripción Column -->\n          <ng-container matColumnDef=\"medida\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Medida </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.medida}} </td>\n          </ng-container>\n\n          <!-- descripción Column -->\n          <ng-container matColumnDef=\"color\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Color </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.color}} </td>\n          </ng-container>\n\n          <!-- Name Column -->\n          <ng-container matColumnDef=\"um\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Unidad de Medida </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.unidad_de_medida}} </td>\n          </ng-container>\n\n          <!-- ID Column -->\n          <ng-container matColumnDef=\"cantidad\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Cantidad</span> </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.cantidad}} </td>\n          </ng-container>\n\n          <!-- ID Column -->\n          <ng-container matColumnDef=\"cantidad_comprar\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Cantidad a comprar</span> </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.cantidad_comprar}} </td>\n          </ng-container>\n          \n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </mat-table>\n  \n      </div>\n      <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator> -->\n    </div>\n    </div>\n  </div>\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {MAT_SNACK_BAR_DATA} from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport * as XLSX from 'xlsx';\nimport { from } from 'rxjs';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryModel } from '../../../models/category.model';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { ProjectCaptureComponent } from 'src/app/pages/projects/project-capture/project-capture.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from '../../../services/requisition/requisition.service';\nimport { quotationListModel } from '../../../models/quotation-list.model'\nimport { quotationservice } from '../../../services/quotation/quotation.service';\nimport { requisitionModelDetail } from 'src/app/models/requisition.model.detail';\nimport { AppConstants } from '../../../shared/app.constants';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { filter } from 'rxjs-compat/operator/filter';\nimport { RequisitionDetailComponent } from '../../requisitions/requisition-detail/requisition-detail.component';\nimport { umask } from 'process';\n\n@Component({\n  selector: 'app-quotation-detail',\n  templateUrl: './quotation-detail.component.html',\n  styleUrls: ['./quotation-detail.component.css']\n})\nexport class QuotationDetailComponent implements OnInit {\n  // ====================\n  // DECLARACIONES\n  // ====================\n\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  \n  fecha:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  requisicion_id : any = '';\n  categoria_id : any = '';\n  proyecto_id : any = 0;\n  requisicion_Numero : any = '';\n  cotizacion_Numero : any = '';\n  loadfile : any  = '';\n  buscar : any = '';\n  public nombreArchivo : any = 'selecciona archivo';\n  dataSourceShow : MatTableDataSource<requisitionModel>;\n  dataExcel: any[];\n  dataSourceDetail : MatTableDataSource<RequisitionDetailComponent>\n  seleccionaRegistro : any;\n  displayedColumns = ['select', 'sku', 'descripcion', 'medida', 'color', 'um', 'cantidad', 'cantidad_comprar' ];\n\n  projectInfo : any;\n  requisicionId : any = 0;\n  quotationId : any = 0;\n  newProject: FormGroup;\n  datasourceCategories : any[] = [];\n  datasourcePorjects : any[] = [];\n  datasourceRequisition : any;\n  datasourceRequisitionDetail : any = []; // MatTableDataSource<requisitionModelDetail>;\n  datasourceCotizaciones : any;\n  datasourceCotizacionesDet : any[] = [];\n  arraytemp : any = [];\n  \n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , @Inject(MAT_DIALOG_DATA) public data,public snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n    , private _snackBar : MatSnackBar\n    , private _requisitionservice : requisitionservice\n    , private _quotationservice : quotationservice\n    // , private notificationService: NotificationService,\n  ) { \n    this.projectInfo = data.arrayData;\n    this.requisicionId = data.requisicionId;\n    this.quotationId = data.cotizacionId;\n\n    this.newProject = this.formBuilder.group({\n      proyecto_id : new FormControl(''),\n      categoria_id: new FormControl(''),\n      requisicion_id: new FormControl(''),\n      fecha: new FormControl(''),\n      requisicion_Numero : new FormControl(''),\n      cotizacion_Numero : new FormControl(''),\n      seleccionar : new FormControl('')\n  });\n  }\n\n  ngOnInit(): void {\n\n    this.getProyectos();\n    if(this.requisicionId != 0){\n        this.newProject.patchValue({\n          proyecto_id : this.projectInfo[\"proyecto_id\"],\n          requisicion_id : '', // this.projectInfo[\"requisicion_id\"] ,\n          requisicion_Numero : this.projectInfo[\"codigo\"] ,\n          categoria_id : '', // this.projectInfo[\"categoria_id\"],\n          fecha : '', // this.projectInfo[\"fecha\"]\n          loadfile : ''\n          \n      })\n      this.requisicion_Numero = this.projectInfo[\"codigo\"];\n      this.proyecto_id = this.projectInfo[\"proyecto_id\"];\n      this.requisicion_id = '' //this.projectInfo[\"requisicion_id\"];\n      this.categoria_id = this.projectInfo[\"categoria_id\"];\n      this.fecha = '', //this.projectInfo[\"fecha\"];\n      this.loadfile = ''\n    }\n\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  proyectoSelected(){\n    console.log('Selecciona categorias', this.proyecto_id);\n    this.getCategories(this.proyecto_id);\n  }\n\n  categorySelected(){\n    this.getrequisitionAll();\n  }\n\n  RequisitionSelected(){\n    \n    let arrayRequisicion_interna : any;\n    let codigoRequisicion_interna : any;\n\n    this.requisicionId = this.newProject.controls[\"requisicion_Numero\"].value;\n    arrayRequisicion_interna = this.datasourceRequisition.filter(e => e.requisicioninterna_id == this.requisicionId);\n    \n    this.getCotizacionesAll(arrayRequisicion_interna[0][\"codigo\"])\n    \n    // Busca cotizaciones y arma nuevo numero de cotización\n    this.getRequisitionDetail(this.requisicionId)\n  }\n\n  SeleccionarRegistro(cantidadOrdenar : any, requisicionDet_id : any, uom : any, descripcionOrdenar : any, event : Event){\n\n    let arrayRequisicioneDetalle : any[] = [];\n\n    if(event[\"checked\"] == true && this.datasourceCotizacionesDet.filter(e => e.requisicionDetalle_id == requisicionDet_id).length == 0){\n        this.datasourceCotizacionesDet.push({requisicioninternaDetalle_id : requisicionDet_id, cantidad : cantidadOrdenar, um: uom, descripcion: descripcionOrdenar})\n    }\n\n    if(event[\"checked\"] == false && this.datasourceCotizacionesDet.filter(e => e.requisicionDetalle_id == requisicionDet_id).length != 0){\n      arrayRequisicioneDetalle = this.datasourceCotizacionesDet.filter(e => e.requisicionDetalle_id != requisicionDet_id)\n      this.datasourceCotizacionesDet = [];\n      this.datasourceCotizacionesDet = arrayRequisicioneDetalle;\n    }\n  }\n\n  save(form, event){\n\n    let arrayTodb : any;\n\n    if(this.quotationId == 0){\n      arrayTodb = { \n        // proyecto_id : this.proyecto_id,\n                  requisicioninterna_id : this.requisicionId,\n                  codigo : this.newProject.controls[\"cotizacion_Numero\"].value,\n                  fecha : moment(this.fecha, 'YYYY-MM-DD').format('YYYY-MM-DD')\n                };\n\n      // INSERTA REQUISICION HDR\n      this.insertQuotationHeader(arrayTodb);\n    }\n    else{\n      arrayTodb = {\n        // proyecto_id : this.proyecto_id,\n        categoria_id : this.categoria_id,\n        requisicioninterna_id : this.requisicionId,\n        fecha : moment(this.fecha, 'YYYY-MM-DD').format('YYYY-MM-DD')\n      };\n\n        // Actualiza registro EDICION\n        // this._projectService.updateProjects(arrayTodb).subscribe(\n        // res=> {\n        // console.log('Se edito con éxito', res);\n        // },\n        // error => console.log(\"error consulta regiones\",error)\n        // )\n        // this.dialogRef.close();\n    }\n  }\n\n\n\n  fechaControl(event){\n    console.log('fecha', this.fecha);\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n\n// =============================\n// UTILERIAS\n// =============================\n\nfind(form, event){\n  // Buscar requisiciones\n  console.log('requisiciones', this.requisicion_Numero)\n  // this._requisitionservice.getRequisitionById(this.cotizacion_Numero).subscribe(\n  //   res=> {\n  //     this.datasourceCategories = res;\n  //     console.log('PROYECTOS - CATEGORIAS', res);\n  //   },\n  //   error => console.log(\"error consulta cateogorias\",error)\n  // )\n\n}\n\npublic handlePage(e: any) {\n  this.currentPage = e.pageIndex;\n  this.pageSize = e.pageSize;\n  this.iterator();\n}\n\nprivate iterator() {\n  const end = (this.currentPage + 1) * this.pageSize;\n  const start = this.currentPage * this.pageSize;\n  const part = this.array.slice(0, this.totalSize);\n  this.dataSourceShow = new MatTableDataSource(part);\n  this.dataSourceShow.sort = this.sort;\n  this.dataSourceShow.paginator = this.paginator;\n}\n\nfiltrar(event: Event) {\n  const filtro = (event.target as HTMLInputElement).value;\n  this.dataSourceShow.filter = filtro.trim().toLowerCase();\n  console.log('filtro', filtro);\n}\n\n// =============================\n// CONSUME SERVICIOS\n// =============================\n\ngetProyectos(){\n  // Obtiene proyectos\n  this._projectService.getProjectAll().subscribe(\n    res=> {\n      this.datasourcePorjects = res;\n      console.log('PROYECTOS', res);\n    },\n    error => console.log(\"error consulta proyectos\",error)\n  )\n}\n\ngetCotizacionesAll(requisicion_interna : any){\n  this._quotationservice.getQuotationAll().subscribe(\n    res=> {\n      this.datasourceCotizaciones = res;\n      console.log('COTIZACIONES TODAS', res);\n      this.cotizacion_Numero = this.cotizacion_Numero = requisicion_interna + '-' + (this.datasourceCotizaciones.filter(e => e.codigo_requisicioninterna == requisicion_interna).length + 1);\n\n    },\n    error => console.log(\"error consulta proyectos\",error)\n  )\n}\n\ngetrequisitionAll(){\n  // Obtiene todas las requisiciones \n  this._requisitionservice.getRequisitionAll().subscribe(\n    res=> {\n      // this.datasourceRequisition = [];\n      this.datasourceRequisition = res;\n        this.datasourceRequisition = this.datasourceRequisition.filter(e => e.proyectocategoria_id == this.newProject.controls[\"categoria_id\"].value)\n\n        // // Consulta detalle de requisición\n        // this.getRequisitionDetail();\n    },\n    error => console.log(\"error consulta requisiciones\",error)\n  )\n\n}\n\ngetrequisition(){\n  // Obtiene las requisiciones \n  this._requisitionservice.getRequisitionById(this.newProject.controls[\"categoria_id\"].value).subscribe(\n    res=> {\n      this.datasourceRequisition = [];\n      this.datasourceRequisition.push(res);\n        console.log('REQUISICIONES', this.datasourceRequisition);\n\n    //     // Consulta detalle de requisición\n    //     this.getRequisitionDetail();\n    },\n    error => console.log(\"error consulta requisiciones\",error)\n  )\n}\n\ngetRequisitionDetail(Requisition_Id : any){\n  // Obtiene requisiciones \n  this._requisitionservice.getRequisitionDetail(Requisition_Id).subscribe(\n    res=> {\n      this.datasourceRequisitionDetail = (res);\n\n        console.log('REQUISICIONES DETALLE', this.datasourceRequisitionDetail);\n    },\n    error => console.log(\"error consulta requisiciones\",error)\n  )\n}\n\ngetCategories(proyecto : any){\n  // Obtiene categorias \n    this._projectCategoryservice.getProjectCateogryById(proyecto).subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('PROYECTOS - CATEGORIAS', res);\n      },\n      error => console.log(\"error consulta cateogorias\",error)\n    )\n\n  // this._projectCategoryservice.getProjectCateogryAll().subscribe(\n  //   res=> {\n  //     this.datasourceCategories = res;\n  //     console.log('PROYECTOS - CATEGORIAS', res);\n  //   },\n  //   error => console.log(\"error consulta cateogorias\",error)\n  // )\n}\n\ninsertQuotationHeader(arrayTodb : any){\n  this._quotationservice.insertQuotation(arrayTodb).subscribe(\n    res=> {\n      console.log('Se inserto con éxito', res);\n\n      // INSERTA REQUISICIONES DET\n      this.insertQuotationDet(res);\n    },\n    error => console.log(\"error alta de proyectos\",error)\n  )\n}\n\ninsertQuotationDet(cotizacionId : any){\n\n  console.log('para guardar')\n\n  // Obtiene Requisicion Registrada\n  let datasourceRequsition : MatTableDataSource<requisitionModel>\n  let requisitionIdMaximo : any = \"0\";\n  let arrayToDb : any;\n\n    this.datasourceCotizacionesDet.forEach(element => {\n        arrayToDb = { cotizacion_id : cotizacionId\n            , requisicioninternaDetalle_id : element.requisicioninternaDetalle_id\n            , cantidad : element.cantidad\n            , um : element.um\n            , descripcion : element.descripcion\n        }\n\n        // Inserta Proyecto Categoria\n        this._quotationservice.insertQuotationDetail(arrayToDb).subscribe(\n          res=> {\n            console.log('INSERTA COTIZACION DETALLE', arrayToDb);\n            this.openSnackBar('Se genero el la cotización exitosamente', 'success');\n          },\n          error => console.log(\"error al insertar proyectos categorias\",error)\n        )\n        \n        arrayToDb = null;\n\n      });\n}\n\n\n}\n","<div fxLayout=\"row\">\n    <h4>Nueva Requisición</h4>\n  </div>\n  <br>\n  <div mat-dialog-content-example [formGroup]=\"newProject\">\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>Proyecto</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <!-- [(ngModel)]=\"proyecto_id\" (selectionChange)=\"emitFilters($event, 'Enviado')\"  -->\n            <mat-select class=\"form-control control\" formControlName=\"proyecto_id\" [(ngModel)]=\"proyecto_id\" (selectionChange)=\"proyectoSelected()\" >\n              <mat-option *ngFor=\"let op of datasourcePorjects\" [value]=\"op.proyecto_id\" >\n                {{op.codigo_proyecto}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><br>Proyecto-Categoría</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n                <mat-select class=\"form-control control\" formControlName=\"categoria_id\" [(ngModel)]=\"categoria_id\" (selectionChange)=\"categorySelected()\" ><!-- (selectionChange)=\"emitFilters($event, 'Enviado')\"-->\n                <mat-option *ngFor=\"let opx of datasourceCategories\" [value]=\"opx.proyectocategoria_id\">\n                  {{opx.codigo_proyectocategoria}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n      </div>\n    </div>\n  \n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>Requisición</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"requisicion_Numero\" matInput class=\"form-control form-control-line control\" formControlName=\"requisicion_Numero\" [(ngModel)]=\"requisicion_Numero\">\n            </mat-form-field>\n          </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><br>Fecha</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>{{fecha | date: 'dd-MM-yyyy'}}</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" (dateChange)=\"fechaInicial($event)\" class=\"control\" [(ngModel)]=\"fecha\"> <!--[(ngModel)]=\"fecha\" -->\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker [startAt]=\"fecha\" #picker></mat-datepicker>\n          </mat-form-field></div>\n      </div>\n    </div>\n    <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div class=\"input-group mb-3\">\n                            <input type=\"file\" name=\"loadFile\" id=\"loadFile\" class=\"form-control form-control-line\" placeholder=\"SELECCIONA ARCHIVO\" style=\"display: none;\" (change)=\"onFileChange($event)\" onclick=\"this.value=null;\"> <!--[(ngModel)]=\"buscar\" -->\n                            <label for=\"loadFile\" style=\"margin: 0; text-align: left; width: 400px;\" class=\"btn btn-outline-dark\"><b>{{nombreArchivo}}</b></label><br><!--{{nombreArchivo}}  formControlName=\"loadFile\"--> \n                        </div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\">\n            <!-- <div><button mat-raised-button color=\"primary\" (click)=\"save(newProject, $event)\">Subir Archivo</button></div> -->\n        </div>\n        <div fxFlex.gt-sm=\"20%\">\n            <div></div>\n        </div>\n    </div>\n\n    <br>\n    <!--Tabla de captura-->\n    <div fxLayout=\"row\" class=\"division\">\n        \n    </div>\n\n  </div>\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n          <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n      </div>\n    </div>\n     <!-- INICIA CUERPO DE LA PÁGINA-->\n     <div class=\"col-12 col-md-12 p-0\">\n      <div class=\"card\">\n        <div class=\"card-body card-body-table\">\n          <mat-table [dataSource]=\"UploadDataExcel\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n              \n            <!-- ID Column -->\n            <ng-container matColumnDef=\"SKU\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>SKU</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.SKU}} </td>\n            </ng-container>\n\n            <!-- ID Column -->\n            <ng-container matColumnDef=\"cantidad\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> <span>Cantidad</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.cantidad}} </td>\n            </ng-container>\n            \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"unidad_de_medida\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Unidad de Medida </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.um}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"descripcion\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Descripción </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.descripcion}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"medida\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Medida </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.medida}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"color\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Color </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.color}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"otras_Especificaciones\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Otras especificaciones </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.otras_especificaciones}} </td>\n            </ng-container>\n            \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </mat-table>\n    \n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator> -->\n      </div>\n    </div>\n  ","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport * as XLSX from 'xlsx';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from '../../../services/requisition/requisition.service';\nimport { requisitionModelDetail } from 'src/app/models/requisition.model.detail';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { dateInputsHaveChanged } from '@angular/material/datepicker/datepicker-input-base';\n// import { NotificationService } from '../../../services/common/notification.service';\n\n@Component({\n  selector: 'app-requisition-detail',\n  templateUrl: './requisition-detail.component.html',\n  styleUrls: ['./requisition-detail.component.css']\n})\nexport class RequisitionDetailComponent implements OnInit {\n  // ===================\n  // DECLARACIONES\n  // ===================\n\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  \n  fecha:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  requisicion_id : any = '';\n  categoria_id : any = '';\n  proyecto_id : any = 77;\n  requisicion_Numero : any = ''\n  loadfile : any  = '';\n  buscar : any = '';\n  public nombreArchivo : any = 'selecciona archivo';\n  UploadDataExcel : MatTableDataSource<requisitionModelDetail>;\n  dataExcel: any[];\n  // displayedColumns = ['SKU', 'cantidad', 'unidad_de_medida', 'descripcion'];\n  displayedColumns = ['SKU', 'cantidad', 'unidad_de_medida', 'descripcion', 'medida', 'color', 'otras_Especificaciones'];\n\n  projectInfo : any;\n  requisicionId : any = 0;\n  newProject: FormGroup;\n  datasourceCategories : any[] = [];\n  datasourcePorjects : any[] = [];\n  datasourceRequisition : any;\n\n  fo : string\n  cargo : string\n  no_pym : string\n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , @Inject(MAT_DIALOG_DATA) public data\n    , public snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n    , private _snackBar : MatSnackBar\n    , private _requisitionservice : requisitionservice\n    // , private notificationService: NotificationService,\n  ) { \n    this.projectInfo = data.arrayData;\n    this.requisicionId = data.requisicionId;\n\n    this.newProject = this.formBuilder.group({\n      proyecto_id : new FormControl(''),\n      categoria_id: new FormControl(''),\n      requisicion_id: new FormControl(''),\n      fecha: new FormControl(''),\n      requisicion_Numero : new FormControl('')\n      // loadFile: new FormControl(''),\n  });\n  }\n\n// ===============\n// PROCEDIMIENTOS\n// ===============\n\n  ngOnInit(): void {\n\n    this.getProyectos();\n    this.getEnabledCategories();\n\n    console.log('this.projectInfo[\"codigo\"]', this.projectInfo[\"proyectocategoria_id\"]);\n    if(this.requisicionId != 0){\n        this.newProject.patchValue({\n          proyecto_id : this.projectInfo[\"proyecto_id\"],\n          requisicion_id : '', // this.projectInfo[\"requisicion_id\"] ,\n          requisicion_Numero : this.projectInfo[\"codigo\"] ,\n          categoria_id : '', // this.projectInfo[\"categoria_id\"],\n          fecha : moment(new Date), //this.projectInfo[\"fecha\"], // this.projectInfo[\"fecha\"]\n          loadfile : ''\n      })\n      this.requisicion_Numero = this.projectInfo[\"codigo\"];\n      // this.projectInfo.controls[\"proyecto_id\"].setValue(77);\n      this.proyecto_id = this.projectInfo[\"proyecto_id\"];\n      this.requisicion_id = '' //this.projectInfo[\"requisicion_id\"];\n      this.categoria_id = this.projectInfo[\"proyectocategoria_id\"];\n      this.projectInfo.controls[\"categoria_id\"].setValue('161');\n      this.fecha = '', //this.projectInfo[\"fecha\"];\n      this.loadfile = ''\n    }\n\n  }\n\n  onFileChange(event){\n    /* wire up file reader */\n    const target: DataTransfer = <DataTransfer>(event.target);\n    let extencionArchivo : string = '';\n\n    this.UploadDataExcel = null;\n\n    if (target.files.length !== 1) {\n      throw new Error('No se pueden seleccionar multiples archivos');\n    }\n\n    this.nombreArchivo = (target.files.length > 0) ? target.files[0][\"name\"].substring(1,30) : \" (archivo nuevo) \";\n    const reader: FileReader = new FileReader();\n    reader.readAsBinaryString(target.files[0]);\n    extencionArchivo = target.files[0].name.substring(target.files[0].name.length - 5,target.files[0].name.length)\n    if(extencionArchivo == '.xlsx' || extencionArchivo.substring(extencionArchivo.length - 4, extencionArchivo.length) == 'xls'){\n      console.log('AQUI ESTAN LAS EXTENCIONES DE EXCEL')\n      reader.onload = (e: any) => {\n        /* create workbook */\n  \n        const binarystr: string = e.target.result;\n        const wb: XLSX.WorkBook = XLSX.read(binarystr, { type: 'binary' });\n  \n        /* selected the first sheet */\n        const wsname: string = wb.SheetNames[0];\n        const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n        /* save data */\n        const data = XLSX.utils.sheet_to_json(ws);\n        this.dataExcel = this.validate(data);\n        this.dataExcel = data;\n\n        let arrayErrores = [];\n        let arrayExcel = [];\n        let valido : boolean = true;\n\n        // Validadores de campos\n        let errorCantidad : boolean = false;\n        let errorUoM : boolean = false;\n        let errorDescripcion : boolean = false;\n        let errorSKU : boolean = false;\n        let DescripcionAnt : string = '';\n        let Descripcion : string = '';\n\n        // Ordena los descuentos por cr + produto + plataforma\n        this.dataExcel.sort(function (a, b) {\n          if (a.DESCRIPCION > b.DESCRIPCION) {\n            return 1;\n          }\n          if (a.DESCRIPCION < b.DESCRIPCION) {\n            return -1;\n          }\n          // a must be equal to b\n          return 0;\n        });\n\n        DescripcionAnt = this.dataExcel[0][\"DESCRIPCION\"].toUpperCase();\n\n        // Validamos que los crs del excel vs las existentes en el ctálogo\n      let contador : number = 0;\n      this.dataExcel.forEach(element => {\n        // Reinicia valores\n        valido = true;\n        errorDescripcion = false;\n\n        Descripcion = element.DESCRIPCION.toUpperCase()\n\n        if(element.SKU == '') {valido = false; errorSKU = true}\n        if(element.CANTIDAD_REQUERIDA == '') {valido = false; errorCantidad = true;}\n        if(element.UNIDAD.toUpperCase() == '') {valido = false; errorUoM = true;}\n        if(element.DESCRIPCION.toUpperCase() == '') {valido = false; errorDescripcion = true;}\n\n        contador++;\n        DescripcionAnt = Descripcion;\n\n        if(valido == false){\n          arrayErrores.push({ cantidad : element.CANTIDAD_REQUERIDA, \n            unidad_de_medida : element.UNIDAD, \n            descripcion : element.DESCRIPCION.toUpperCase()\n           })\n        }else{\n          arrayExcel.push({ \n            requisition_Id : 0,\n            SKU : element.SKU,\n            cantidad : element.CANTIDAD_REQUERIDA, \n            um : element.UNIDAD,\n            descripcion : element.DESCRIPCION,\n            medida : element.MEDIDA,\n            color : element.COLOR,\n            otras_especificaciones : element.OTRAS_ESPECIFICACIONES\n           })\n        }\n      });\n\n      if(arrayErrores.length > 0){\n        this.openSnackBar('Los registros contienen datos incorrectos', '');\n\n        // this.notificationService.openNotification(AppConstants.defaultNotificationWarningTitle, 'Los registros contienen estaciónes, productos o plataformas no validos', 'warn');\n        this.dataExcel = null;\n        // this.openErrorDialog(arrayErroresEstacion);\n        return;\n      }\n\n      this.UploadDataExcel = new MatTableDataSource(arrayExcel);\n      console.log('datos del excel', this.UploadDataExcel);\n\n      };\n    }\n    else{\n      this.openSnackBar('Los registros contienen datos incorrectos', '');\n      // this.notificationService.openNotification(AppConstants.defaultNotificationWarningTitle, 'No es un archivo de excel válido', 'warn');\n      this.deleteUploadFile(event);\n    }\n  }\n\n  validate(data : any)\n  {\n    // Valida que todos los datos esten completos\n    return data\n  }\n\n  deleteUploadFile(event: any){\n    this.nombreArchivo = \" (archivo nuevo) \";\n    this.UploadDataExcel = null;\n  }\n\n  proyectoSelected(){\n    console.log('Selecciona categorias', this.proyecto_id);\n    this.getCategories(this.proyecto_id);\n  }\n\n  categorySelected(){\n    // Obtenemos requisiciones existentes y generamos nuevo numero para la requisición\n    let proyectoCategoria_id : any = this.newProject.controls[\"categoria_id\"].value\n    let codigo_categoria : any = 0;\n    let arrayProyectoCategoria : any;\n\n    arrayProyectoCategoria = this.datasourceCategories.filter(e => e.proyectocategoria_id == proyectoCategoria_id);\n    codigo_categoria = arrayProyectoCategoria[0][\"codigo_proyectocategoria\"]\n    this.getrequisition(codigo_categoria);\n  }\n\n  save(form, event){\n\n    let arrayTodb : any;\n\n    if(this.requisicionId == 0){\n      arrayTodb = { proyecto_id : this.proyecto_id,\n                  proyectocategoria_id : this.categoria_id,\n                  codigo : this.requisicion_Numero,\n                  fecha : moment(this.fecha, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n                  fo : this.fo,\n                  cargo : this.cargo,\n                  no_pym : this.no_pym\n                };\n\n      // INSERTA REQUISICION HDR\n      this.insertRequisition(arrayTodb)\n    }\n    else{\n      arrayTodb = {proyecto_id : this.proyecto_id,\n        proyectocategoria_id : this.categoria_id,\n        requisicion_id : this.requisicion_id,\n        fecha : moment(this.fecha, 'YYYY-MM-DD').format('YYYY-MM-DD')\n      };\n\n        // Actualiza registro EDICION\n        this.updateRequisition(arrayTodb);\n    }\n  }\n\n  fechaInicial(event){\n    console.log('fecha', this.fecha);\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n  // ====================\n  // UTILERIAS\n  // ====================\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.UploadDataExcel = new MatTableDataSource(part);\n    this.UploadDataExcel.sort = this.sort;\n    this.UploadDataExcel.paginator = this.paginator;\n  }\n\n  filtrar(event: Event) {\n    const filtro = (event.target as HTMLInputElement).value;\n    this.UploadDataExcel.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n  // ====================\n  // LLAMADAS A SERVICIOS\n  // ====================\n\n  getEnabledCategories(){\n    // Actualiza registro NUEVO\n    this._projectCategoryservice.getProjectCateogryById(1).subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('CATEGORIAS', res);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n  getProyectos(){\n    // Obtiene proyectos\n    this._projectService.getProjectAll().subscribe(\n      res=> {\n        this.datasourcePorjects = res;\n        console.log('PROYECTOS', res);\n      },\n      error => console.log(\"error consulta proyectos\",error)\n    )\n  }\n\n  getrequisition(codigo_categoria : any){\n\n    let categoria_id : any = this.newProject.controls[\"categoria_id\"].value\n    let codigo_requisicion : any = 0;\n    let arrayRequisition : any;\n    let arrayCodigoCategoria : any;\n    \n    // Proyectos registrados\n    this._requisitionservice.getRequisitionAll().subscribe(\n      res=> {\n        this.datasourceRequisition = new MatTableDataSource(res);\n\n        if(this.datasourceRequisition.filteredData.length == 0){\n          codigo_requisicion = codigo_categoria + '-1'; \n        }else{\n          // Obtener requisicion en la que se mas alta y determinar cual sigue\n          arrayRequisition = this.datasourceRequisition.filteredData.filter(e => e.proyectocategoria_id == categoria_id);\n          if(arrayRequisition.length > 0){\n            let cantidadRequisition = arrayRequisition.length\n            codigo_requisicion = codigo_categoria + '-' + (cantidadRequisition + 1)\n          }else{\n            // obtener codigo_categoria\n            arrayCodigoCategoria = 1;\n            codigo_requisicion = codigo_categoria + '-1'; \n          }\n\n        }\n\n        // this.newProject.controls[\"requisicion_Numero\"].setValue = codigo_categoria + codigo_requisicion;\n        this.requisicion_Numero = codigo_requisicion;\n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n\n  getCategories(proyecto : any){\n    // Obtiene categorias \n    this._projectCategoryservice.getProjectCateogryById(proyecto).subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('PROYECTOS - CATEGORIAS', res);\n      },\n      error => console.log(\"error consulta cateogorias\",error)\n    )\n  }\n\n  insertRequisition(arrayTodb : any){\n    this._requisitionservice.insertRequisition(arrayTodb).subscribe(\n      res=> {\n        console.log('Se inserto con éxito', res);\n\n        // INSERTA REQUISICIONES DET\n        this.insertRequisitionDet(res);\n      },\n      error => console.log(\"error alta de proyectos\",error)\n    )\n  }\n\n  updateRequisition(arrayTodb : any){\n    console.log('ACTUALIZA REQUISICION');\n        // this._projectService.updateProjects(arrayTodb).subscribe(\n        // res=> {\n        // console.log('Se edito con éxito', res);\n        // },\n        // error => console.log(\"error consulta regiones\",error)\n        // )\n        // this.dialogRef.close();\n  }\n\n  insertRequisitionDet(requisicionId : any){\n    // Obtiene Requisicion Registrada\n    let datasourceRequsition : MatTableDataSource<requisitionModel>\n    let requisitionIdMaximo : any = \"0\";\n    let arrayToDb : any;\n\n      this.UploadDataExcel.filteredData.forEach(element => {\n        arrayToDb = {requisicioninterna_id : requisicionId\n            , SKU : element.SKU\n            , cantidad : element.cantidad\n            , um : element.um\n            , descripcion : element.descripcion\n            , medida : (element.medida != undefined) ? element.medida : ''\n            , color : (element.color != undefined) ? element.color : ''\n            , otras_especificaciones : (element.otras_especificaciones != undefined) ? element.otras_especificaciones : ''\n        }\n\n        console.log('DETALLE DETALLE DETALLE', arrayToDb);\n\n        // Inserta Proyecto Categoria\n        this._requisitionservice.insertRequisitionDetail(arrayToDb).subscribe(\n          res=> {\n            console.log('REQUISICIONES DETALLE', res);\n            this.openSnackBar('Se genero el la requisición exitosamente', 'success');\n            // this.dialogRef.close();\n          },\n          error => console.log(\"error al insertar proyectos categorias\",error)\n        )\n        \n        arrayToDb = null;\n\n      });\n  }\n\n}\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\n\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\n\r\n/**\r\n * NgModule that includes all Material modules that are required to serve the demo-app.\r\n */\r\n@NgModule({\r\n    exports: [\r\n        MatAutocompleteModule,\r\n        MatButtonModule,\r\n        MatBottomSheetModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatTableModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatBadgeModule,\r\n        MatSidenavModule,\r\n        MatSlideToggleModule,\r\n        MatSliderModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatStepperModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatNativeDateModule,\r\n        CdkTableModule,\r\n        A11yModule,\r\n        BidiModule,\r\n        CdkAccordionModule,\r\n        ObserversModule,\r\n        OverlayModule,\r\n        PlatformModule,\r\n        PortalModule\r\n    ]\r\n})\r\nexport class DemoMaterialModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) {\r\n\r\n  }\r\n\r\n  canActivate() {\r\n    if (localStorage.getItem('token_access') != null) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/auth/signin']);\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport { WorkBook, WorkSheet } from 'xlsx';\r\n\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheethml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExcelServiceService {\r\n\r\n  constructor() { }\r\n\r\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n\r\n    const worksheet: WorkSheet = XLSX.utils.json_to_sheet(json);\r\n\r\n    const workbook: WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n\r\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n\r\n    this.saveAsExcelFile(excelBuffer, excelFileName);\r\n\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    const data: Blob = new Blob([buffer], { type: EXCEL_TYPE });\r\n\r\n    FileSaver.saveAs(data, `${fileName}_export_${new Date().getTime()}${EXCEL_EXTENSION}`);\r\n  }\r\n\r\n}\r\n","import { MediaMatcher } from '@angular/cdk/layout';\r\nimport {ChangeDetectorRef, Component,OnDestroy,AfterViewInit} from '@angular/core';\r\nimport { MenuItems } from '../../shared/menu-items/menu-items';\r\n\r\n\r\n/** @title Responsive sidenav */\r\n@Component({\r\n  selector: 'app-full-layout',\r\n  templateUrl: 'full.component.html',\r\n  styleUrls: []\r\n})\r\nexport class FullComponent implements OnDestroy, AfterViewInit {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n  ngAfterViewInit() {}\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<div class=\"main-container\"> \r\n    <!-- ============================================================== -->\r\n    <!-- Topbar - style you can find in header.scss -->\r\n    <!-- ============================================================== -->\r\n    <mat-toolbar color=\"primary\" class=\"topbar telative\">\r\n        <!-- ============================================================== -->\r\n        <!-- Logo - style you can find in header.scss -->\r\n        <!-- ============================================================== -->\r\n        <div class=\"navbar-header\">\r\n            <a class=\"navbar-brand\" href=\"index.html\">\r\n                <!-- Logo icon --><b>\r\n                    <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\r\n                    <!-- Dark Logo icon -->\r\n                    <img src=\"assets/images/logo-icon.png\" alt=\"homepage\" class=\"dark-logo\">\r\n                    <!-- Light Logo icon -->\r\n                    <img src=\"assets/images/logo-light-icon.png\" alt=\"homepage\" class=\"light-logo\">\r\n                    <!-- <img src=\"assets/images/logo-comercial20.jpeg\" alt=\"homepage\" class=\"light-logo\"> -->\r\n                </b>\r\n                <!--End Logo icon -->\r\n                <!-- Logo text -->\r\n                <span fxShow=\"false\" fxShow.gt-xs>\r\n                 <!-- dark Logo text -->\r\n                 <img src=\"assets/images/logo-text.png\" alt=\"homepage\" class=\"dark-logo\">\r\n                 <!-- Light Logo text -->    \r\n                 <img src=\"assets/images/logo-light-text.png\" class=\"light-logo\" alt=\"homepage\">\r\n                </span> </a>\r\n        </div>\r\n        <!-- ============================================================== -->\r\n        <!-- sidebar toggle -->\r\n        <!-- ============================================================== -->\r\n        \r\n        <button mat-icon-button (click)=\"snav.toggle()\" value=\"sidebarclosed\">\r\n            <mat-icon>menu</mat-icon>\r\n        </button>\r\n        <span fxFlex></span>\r\n        <!-- ============================================================== -->\r\n        <!-- app header component - style you can find in header.scss / header.component.ts-->\r\n        <!-- ============================================================== -->\r\n        <app-header></app-header>\r\n    </mat-toolbar>\r\n    <!-- ============================================================== -->\r\n    <!-- End Topbar - style you can find in pages.scss -->\r\n    <!-- ============================================================== -->\r\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\">\r\n        <!-- ============================================================== -->\r\n        <!-- Sidebar - style you can find in sidebar.scss -->\r\n        <!-- ============================================================== -->\r\n        <mat-sidenav #snav id=\"snav\" class=\"dark-sidebar pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\" fixedTopGap=\"0\" [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\"  >\r\n            \r\n                <app-sidebar></app-sidebar>\r\n               \r\n            \r\n        </mat-sidenav>\r\n        <!-- ============================================================== -->\r\n        <!-- Sidebar - style you can find in sidebar.scss -->\r\n        <!-- ============================================================== -->\r\n        \r\n        <!-- ============================================================== -->\r\n        <!-- Page container - style you can find in pages.scss -->\r\n        <!-- ============================================================== -->\r\n        <mat-sidenav-content class=\"page-wrapper\">\r\n                 \r\n                <div class=\"page-content\">\r\n                   \r\n                        <router-outlet><app-spinner></app-spinner></router-outlet>\r\n                    \r\n                </div>    \r\n               \r\n        </mat-sidenav-content>\r\n        <!-- ============================================================== -->\r\n        <!-- Page container - style you can find in pages.scss -->\r\n        <!-- ============================================================== -->\r\n    </mat-sidenav-container>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppHeaderComponent {}\r\n","        \r\n<!-- ============================================================== -->\r\n<!-- Profile - style you can find in header.scss -->\r\n<!-- ============================================================== -->\r\n<!-- <a href=\"https://wrappixel.com/templates/materialpro-angular-dashboard/\" class=\" m-r-20 hidden-sm-up\" mat-raised-button color=\"warn\">Upgrade To Pro</a> -->\r\n<!-- <button [matMenuTriggerFor]=\"profile\" mat-icon-button class=\"m-r-5\"> <img src=\"assets/images/users/1.jpg\" alt=\"user\" class=\"profile-pic\"> </button> -->\r\n<mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\r\n    <button mat-menu-item>\r\n        <mat-icon>settings</mat-icon> Settings </button>\r\n    <button mat-menu-item>\r\n        <mat-icon>account_box</mat-icon> Profile </button>\r\n    <button mat-menu-item>\r\n        <mat-icon>notifications_off</mat-icon> Disable notifications </button>\r\n    <button mat-menu-item>\r\n        <mat-icon>exit_to_app</mat-icon> Sign Out </button>\r\n</mat-menu>\r\n\r\n","<!-- ============================================================== -->\r\n<!-- sidebar -->\r\n<!-- ============================================================== -->\r\n <div class=\"user-profile\" style=\"background: url(assets/images/background/user-info.jpg) no-repeat;\">\r\n    <!-- User profile image -->\r\n    <div class=\"profile-img\"> <img src=\"assets/images/users/profile.png\" alt=\"user\"> </div>\r\n    <!-- User profile text-->\r\n    <!-- ============================================================== -->\r\n    <!-- Profile - style you can find in header.scss -->\r\n    <!-- ============================================================== -->\r\n    <div class=\"profile-text\"><a [matMenuTriggerFor]=\"sdprofile\" class=\"\"> Markarn Doe <i class=\"ti-angle-down font-12 m-l-5\"></i></a></div>\r\n    <mat-menu #sdprofile=\"matMenu\" class=\"mymegamenu\">\r\n        <button mat-menu-item>\r\n            <mat-icon>settings</mat-icon> Settings </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>account_box</mat-icon> Profile </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>notifications_off</mat-icon> Disable notifications </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>exit_to_app</mat-icon> Sign Out </button>\r\n    </mat-menu>\r\n    \r\n</div>\r\n<mat-nav-list appAccordion>\r\n    <mat-list-item appAccordionLink *ngFor=\"let menuitem of menuItems.getMenuitem()\" routerLinkActive=\"selected\" group=\"{{menuitem.state}}\">\r\n        <a class=\"\" appAccordionToggle [routerLink]=\"['/', menuitem.state]\" *ngIf=\"menuitem.type === 'link'\">\r\n            <mat-icon>{{ menuitem.icon }}</mat-icon> \r\n            <span>{{ menuitem.name }}</span> \r\n            <span fxFlex></span> \r\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span> \r\n        </a>\r\n\r\n        \r\n    </mat-list-item>\r\n\r\n</mat-nav-list>","import { ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppSidebarComponent implements OnDestroy {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n}\r\n","export interface UserI {\r\n    id: number;\r\n    perfil: number;\r\n    fraccionamiento_id: number;\r\n    nombre_perfil: string;\r\n    nombre_completo: string;\r\n    nombre: string;\r\n    apellido_paterno: string;\r\n    apellido_materno: string;\r\n    foto: string;\r\n    correo: string;\r\n    telefono: string;\r\n    contrasegna: string;\r\n    token: string;\r\n    estado: number;\r\n    nombre_estado: string;\r\n  }\r\n  \r\n  export class UserC implements UserI {\r\n    id: number = null;\r\n    perfil: number = null;\r\n    fraccionamiento_id: number = null;\r\n    nombre_perfil: string = '';\r\n    nombre_completo: string = '';\r\n    nombre: string = '';\r\n    apellido_paterno: string = '';\r\n    apellido_materno: string = '';\r\n    foto: string = '';\r\n    correo: string = '';\r\n    telefono: string = '';\r\n    contrasegna: string = '';\r\n    token: string = '';\r\n    estado: number = null;\r\n    nombre_estado: string = '';\r\n  }\r\n  \r\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories-list',\n  templateUrl: './categories-list.component.html',\n  styleUrls: ['./categories-list.component.css']\n})\nexport class CategoriesListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>categories-list works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { loginservice } from '../../services/login/login.service';\r\nimport { UserI, UserC } from '../../models/users'; // './../../../../models/user';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AESEncryptService } from 'src/app/services/aesencrypt.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport * as shajs from 'sha.js';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  providers: [loginservice]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  msg = '';\r\n  public userinterface: UserI;\r\n  public spinerShow: boolean;\r\n  loginform: FormGroup;\r\n\r\n  constructor(private service: loginservice,\r\n    private routes: Router,\r\n    private authService: AuthService,\r\n    private formBuilder: FormBuilder,\r\n    private route: Router,\r\n    private cryptService: AESEncryptService,\r\n    private toastr: ToastrService\r\n    ) { \r\n      this.spinerShow = false;\r\n      this.userinterface = new UserC();\r\n    }\r\n\r\n  check(uname: string, p: string) {\r\n\r\n    let encryptedMessage : string;\r\n    let claves : any;\r\n\r\n    claves = this.loginform.value\r\n  \r\n    console.log('aaa', claves.correo.trim(), claves.contrasegna.trim());\r\n    // encryptedMessage = CryptoJS.AES.encrypt( claves.contrasegna.trim()).toString();\r\n    // encryptedMessage = CryptoJS.createHmac('sha256', \"key\");\r\n    // encryptedMessage = CryptoJS.HmacSha256Signature( claves.correo.trim(), claves.contrasegna.trim()).toString();\r\n    // encryptedMessage = CryptoJS.HmacSha256Signature( this.loginform.value).toString(CryptoJS.enc.Base64);\r\n//     var hash = CryptoJS.SHA256(\"123456789\");\r\n// ​         hash.toString(CryptoJS.enc.Base64)\r\n//     console.log('encriptado',hash.toString(CryptoJS.enc.Base64));\r\n\r\n\r\n  let hash = shajs('sha256').update('root' + claves.contrasegna.trim()).digest('hex');\r\n  console.log(hash);\r\n\r\n  this.routes.navigate(['/dashboard']);\r\n\r\n    this.authService.loginReq(this.loginform.value).subscribe(\r\n      response => {\r\n        \r\n        localStorage.setItem('token_access', response);\r\n        this.spinerShow = false;\r\n        this.routes.navigate(['/dashboard']);\r\n      },\r\n      err => {\r\n        if (err.status === 401) {\r\n          this.toastr.error('Credenciales de acceso inválidas', 'ERROR');\r\n        }\r\n\r\n        if (err.status === 0 || err.status === 500) {\r\n          this.toastr.error('No se puede comunicar con el servidor', 'ERROR');\r\n        }\r\n        console.error(err);\r\n        this.spinerShow = false;\r\n      }\r\n    );\r\n\r\n\r\n    // const output = this.service.checkusernameandpassword(uname, p);\r\n    // if (output == true) {\r\n    //   console.log(output);\r\n    //   this.routes.navigate(['/dashboard']);\r\n    // } else {  \r\n    //   this.msg = 'Usuario o Clave inválido';\r\n    // }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.clearForm();\r\n  }\r\n\r\n  loginReq() {\r\n\r\n    this.spinerShow = true;\r\n\r\n    // const pswdEncryp = this.cryptService.encrypt(this.loginForm.value.contrasegna);\r\n\r\n    // this.loginForm.value.contrasegna = pswdEncryp;\r\n\r\n    this.authService.loginReq(this.loginform.value).subscribe(\r\n      response => {\r\n        \r\n        localStorage.setItem('token_access', response);\r\n        this.spinerShow = false;\r\n        this.route.navigate(['/tablero/estadistica']);\r\n      },\r\n      err => {\r\n        if (err.status === 401) {\r\n          this.toastr.error('Credenciales de acceso inválidas', 'ERROR');\r\n        }\r\n\r\n        if (err.status === 0 || err.status === 500) {\r\n          this.toastr.error('No se puede comunicar con el servidor', 'ERROR');\r\n        }\r\n        console.error(err);\r\n        this.spinerShow = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  clearForm() {\r\n    this.loginform = this.formBuilder.group({\r\n      correo      : ['', Validators.required],\r\n      contrasegna : ['', Validators.required]\r\n    });\r\n  }\r\n}\r\n","<div class=\"login-register\" style=\"background-image:url(assets/images/background/login-register.jpg);\">\r\n    <div class=\"login-register-box\">\r\n        <!-- <div class=\"bg-info text-white m-b-10 text-center p-t-10 p-b-10 alert-box\">\r\n            <span class=\"m-r-10\">Username : admin</span> |\r\n            <span class=\"m-l-10\">Password : admin123</span>\r\n        </div> -->\r\n        <mat-card class=\"m-t-10\">\r\n        <mat-card-content>\r\n        <form id=\"loginform\" [formGroup]=\"loginform\" (ngSubmit)=\"loginReq()\">\r\n            <div class=\"text-center\">\r\n                <img alt=\"homepage\" src=\"assets/images/logo-comercial20.jpeg\">\r\n                <!-- <h4 class=\"m-t-0\">Login to App</h4> -->\r\n            </div>\r\n            <div *ngIf=\"msg\" class=\"bg-danger p-10 text-white\">{{ msg }}</div>\r\n            <div fxLayout=\"row wrap\">\r\n                <!-- col full-->\r\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n                    <mat-form-field>\r\n                    <input matInput placeholder=\"Usuario\" formControlName=\"correo\" required=\"\" #u1>\r\n                    </mat-form-field>\r\n                </div>\r\n                <!-- col full-->\r\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n                    <mat-form-field>\r\n                    <input matInput type=\"password\" placeholder=\"Clave\" formControlName=\"contrasegna\" required=\"\" #p2>\r\n                    </mat-form-field>\r\n                </div>\r\n                <!-- col half-->\r\n                <!-- <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\">\r\n                    <mat-checkbox color=\"warn\">Remember me</mat-checkbox>\r\n                </div> -->\r\n                <!-- col half-->\r\n                <!-- <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" class=\"text-right\">\r\n                    <a [routerLink]=\"['/authentication/forgot']\" class=\"link\">Forgot pwd?</a>\r\n                </div> -->\r\n                <!-- col full-->\r\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n                    <button mat-raised-button color=\"primary\" class=\"btn-block btn-lg m-t-20 m-b-20\" (click)=\"check(u1.value, p2.value)\" type=\"button\">Acceder</button>\r\n                </div>\r\n                <!-- col full-->\r\n                <!-- <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" class=\"text-center\">\r\n                    <span>Don't have an account?\r\n                        <a [routerLink]=\"['/authentication/register']\" class=\"text-info link\">Register</a>\r\n                    </span>\r\n                </div> -->\r\n            </div>\r\n        </form>\r\n        </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Proyectos</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarProyectos()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevoProyecto($event)\">Nuevo Proyecto</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n          <div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"codigo_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_proyecto}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"nombre_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Nombre </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.nombre_proyecto}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"fecha_inicial_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha Inicial </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha_inicial_proyecto | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"fecha_final_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha Final </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha_final_proyecto | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"nombre_cliente\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Cliente </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.nombre_cliente}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"responsable_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Responable </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.responsable_proyecto}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"presupuesto_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Presupuesto </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.presupuesto_proyecto}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"proyect_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\" hidden> proyecto_id  </th>\n                  <td mat-cell *matCellDef=\"let element\" hidden> {{element.proyecto_id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editProyecto(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n        </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { projectModel } from '../../../models/project.model';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-project-capture',\n  templateUrl: './project-capture.component.html',\n  styleUrls: ['./project-capture.component.css'],\n})\nexport class ProjectCaptureComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n\n  displayedColumns = ['codigo_proyecto', 'nombre_proyecto', 'fecha_inicial_proyecto', 'fecha_final_proyecto', 'nombre_cliente', 'responsable_proyecto', 'presupuesto_proyecto', 'proyect_id', 'editar', 'categorias'];\n\n  projectData : any[] = [];\n  dataSourceShow : MatTableDataSource<projectModel>; //<any> = new MatTableDataSource\n  buscar:any;\n\n  @Output() filterChange = new EventEmitter();\n\n  constructor(public dialog: MatDialog\n          , MatTableModule : MatTableModule\n          , private _projectService : projectservice\n          , private _excelService : ExcelServiceService) { \n    // this.displayedColumns = ['proyecto']\n  }\n\n  ngOnInit(): void {\n    this.getProjects();\n  }\n\n  getProjects(){\n\n    // Proyectos registrados\n    this._projectService.getProjectAll().subscribe(\n      res=> {\n        console.log('Proyectos', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n\n  }\n\n  onOpenDialogAddProject() {\n    \n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      //title: 'NUEVO PROYECTO',\n     \n    }\n    dialogConfig.width = '450px';\n    dialogConfig.height = '350px';\n    dialogConfig.disableClose = true;\n\n  }\n\n  editProyecto(element : any, event){\n    console.log('Edita', element);\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'EDITAR PROYECTO',\n      arrayData : element,\n      projectId : element.proyecto_id\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(ProjectCaptureDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  addCategorias(proyectoId : any, event){\n    console.log('Alta de categoras', proyectoId);\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'CATEGORIAS',\n      arrayData : null,\n      projectId: proyectoId\n     \n    }\n    dialogConfig.width = '1400px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(CategoriesComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  nuevoProyecto(event){\n    console.log('Alta de categoras');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'NUEVO PROYECTO',\n      arrayData : null,\n      projectId: 0\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(ProjectCaptureDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  descargarProyectos(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , nombre_proyecto : element.nombre_proyecto\n                              , fecha_inicial_proyecto : moment(element.fecha_inicial_proyecto, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , fecha_final_proyecto : moment(element.fecha_final_proyecto, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , nombre_cliente : element.nombre_cliente\n                              , responsable_proyecto : element.responsable_proyecto\n                              , presupuesto_proyecto : element.presupuesto_proyecto\n      })\n    });\n\n    \n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Proyectos');  \n  }\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n  filtrar(event: Event) {\n    const filtro = (event.target as HTMLInputElement).value;\n    this.dataSourceShow.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Ordenes de compra</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaOrdenDeCompra($event)\">Nueva Orde de Compra</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n        <div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"ordenDeCompra_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Orden de compra</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.ordenDeCompra_Id}} </td>\n                </ng-container>\n                \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"proyecto_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.proyecto_id}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"Categoria_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Categoria </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Categoria_Id}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Requisicion_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Requisicion_Id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Fecha_OrdenDeCompra\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Fecha_OrdenDeCompra | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Estatus}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-po-list',\n  templateUrl: './po-list.component.html',\n  styleUrls: ['./po-list.component.css']\n})\nexport class PoListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['ordenDeCompra_Id', 'proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_OrdenDeCompra', 'Estatus', 'editar'];\n  \n  constructor(public dialog: MatDialog\n          , private _excelService : ExcelServiceService) { }\n\n  ngOnInit(): void {\n    let arrayData : any;\n\n    arrayData = [{ordenDeCompra_Id : 1, proyecto_id : 1, Categoria_Id : 1, Requisicion_Id : 1, Fecha_OrdenDeCompra : '2020-01-01', Estatus : 'ACTIVO'}]\n    this.dataSourceShow = new MatTableDataSource(arrayData);\n\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , categoria : element.codigo_proyectocategoria\n                              , requisicion : element.requisicioninterna_id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaOrdenDeCompra(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '1500px';\n    dialogConfig.height = '9000px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editRequisicion(event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Cotizaciones</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaCotizacion($event)\">Nueva Cotización</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"codigo_requisicioninterna\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Requisición</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_requisicioninterna}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"codigo\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Cotización </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo}} </td>\n                </ng-container>\n                \n                <!-- Fecha Column -->\n                <ng-container matColumnDef=\"fecha\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Estado Column -->\n                <ng-container matColumnDef=\"estado\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estado </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.estado}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editCotizacion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { quotationListModel } from 'src/app/models/quotation-list.model';\nimport { quotationservice } from 'src/app/services/quotation/quotation.service';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { QuotationDetailComponent } from 'src/app/components/quotations/quotation-detail/quotation-detail.component';\nimport { QuotationDetailFilesComponent } from 'src/app/components/quotations/quotation-detail-files/quotation-detail-files.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\nimport { element } from 'protractor';\n\n@Component({\n  selector: 'app-quotation-list',\n  templateUrl: './quotation-list.component.html',\n  styleUrls: ['./quotation-list.component.css']\n})\nexport class QuotationListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<quotationListModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['codigo_requisicioninterna', 'codigo', 'fecha', 'estado', 'editar'];\n  \n  constructor(public dialog: MatDialog\n    , private _excelService : ExcelServiceService\n    , private _quotationService : quotationservice) { }\n\n  ngOnInit(): void {\n\n    this.getQuotationAll();\n\n    // let arrayData : any;\n\n    // arrayData = [{codigo_requisicioninterna : 1, codigo : 1, fecha : '2020-01-01', estado : 'ACTIVO', requisicioninterna_id : 1, cotizacion_id : 1}]\n    // this.dataSourceShow = new MatTableDataSource(arrayData);\n\n  }\n\n  getQuotationAll(){\n    // Proyectos registrados\n    this._quotationService.getQuotationAll().subscribe(\n      res=> {\n        console.log('Cotizaciones', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n  \n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({cotizacion_id : element.cotizacion_id\n                              , requisicioninterna_id : element.requisicioninterna_id\n                              , codigo_requisicioninterna : element.codigo_requisicioninterna\n                              , codigo : element.codigo\n                              , fecha : moment(element.fecha, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estado : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaCotizacion(evetn){\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'COTIZACIONES',\n      arrayData : null,\n      requisicionId: 0,\n      cotizacionId : 0\n     \n    }\n    dialogConfig.width = '1300px';\n    dialogConfig.height = '900px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(QuotationDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editCotizacion(element : any, event){\n    console.log('Edita cotizaciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'COTIZACIONES',\n      arrayData : element,\n      requisicionId: 0,\n      cotizacionId : 0\n     \n    }\n    dialogConfig.width = '1200px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(QuotationDetailFilesComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event : Event){\n    const filtro = (event.target as HTMLInputElement).value;\n    this.dataSourceShow.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Requisiciones</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <!-- <ng-container matColumnDef=\"codigo_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_proyecto}} </td>\n                </ng-container> -->\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"codigo_proyectocategoria\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Proyecto-Categoría </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_proyectocategoria}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"codigo\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"fecha\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha de Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"estado\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\">\n                    <ng-container *ngIf=\"element.estado == true\">ACTIVO</ng-container>\n                  <ng-container *ngIf=\"element.estado == false\">INACTIVO</ng-container>\n                  </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <!-- <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container> -->\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n\n@Component({\n  selector: 'app-requisition-list',\n  templateUrl: './requisition-list.component.html',\n  styleUrls: ['./requisition-list.component.css']\n})\nexport class RequisitionListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  // displayedColumns = ['proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_Requisicion', 'Estatus', 'editar'];\n  displayedColumns = ['codigo_proyectocategoria', 'codigo', 'fecha', 'estado', 'editar'];\n  \n  constructor(public dialog: MatDialog\n          , private _excelService : ExcelServiceService\n          , private _requisitionService : requisitionservice) { }\n\n  ngOnInit(): void {\n\n    this.getrequisition();\n      \n  }\n\n  getrequisition(){\n    // Proyectos registrados\n    this._requisitionService.getRequisitionAll().subscribe(\n      res=> {\n        console.log('Requisiciones', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({\n                              // proyecto_id : element.proyecto_id\n                              categoria : element.codigo_proyectocategoria\n                              , requisicion : element.requisicioninterna_id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaRequisicion(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 0\n     \n    }\n    dialogConfig.width = '1300px';\n    dialogConfig.height = '900px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editRequisicion(element){\n    console.log('Editar de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : element,\n      requisicionId: element.requisicioninterna_id\n     \n    }\n    dialogConfig.width = '1200px';\n    dialogConfig.height = '900px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event : Event){\n    const filtro = (event.target as HTMLInputElement).value;\n    this.dataSourceShow.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Almacén</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"proyecto_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.proyecto_id}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"Categoria_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Categoria </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Categoria_Id}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Requisicion_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Requisicion_Id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Fecha_Requisicion\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha de Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Fecha_Requisicion | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Estatus}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <!-- <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container> -->\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-storage-invoice-list',\n  templateUrl: './storage-invoice-list.component.html',\n  styleUrls: ['./storage-invoice-list.component.css']\n})\nexport class StorageInvoiceListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_Requisicion', 'Estatus', 'editar'];\n  \n  constructor(public dialog: MatDialog\n    , private _excelService : ExcelServiceService) { }\n\n  ngOnInit(): void {\n    let arrayData : any;\n\n    arrayData = [{proyecto_id : 1, Categoria_Id : 1, Requisicion_Id : 1, Fecha_Requisicion : '2020-01-01', Estatus : 'ACTIVO'}]\n    this.dataSourceShow = new MatTableDataSource(arrayData);\n\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , categoria : element.codigo_proyectocategoria\n                              , requisicion : element.requisicioninterna_id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaRequisicion(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editRequisicion(event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Revisión en Almacén</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <!-- <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div> -->\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"requisicion_Codigo\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Requisición</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.requisicion_Codigo}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"descripcion\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Descripción </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.descripcion}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.estado}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator> -->\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { warehouseModel } from 'src/app/models/warehouse.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-warehouse-review',\n  templateUrl: './warehouse-review.component.html',\n  styleUrls: ['./warehouse-review.component.css']\n})\nexport class WarehouseReviewComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<warehouseModel>\n\n@ViewChild(MatSort,{static:true}) sort: MatSort;\n@ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n@Output() filterChange = new EventEmitter();\n\ndisplayedColumns = ['requisicion_Codigo', 'descripcion', 'Estatus', 'editar'];\n\n  constructor(public dialog: MatDialog\n    , private _excelService : ExcelServiceService) { }\n\n  ngOnInit(): void {\n    let arrayData : any;\n\n    arrayData = [{requisicion_Codigo : 1, descripcion : 'Descripción', estado : 'ACTIVO'}]\n    this.dataSourceShow = new MatTableDataSource(arrayData);\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({requisicion_Codigo : element.requisicion_Codigo\n                              , descripcion : element.descripcion\n                              , estatus : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport * as CryptoJS from 'crypto-js';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AESEncryptService {\r\n\r\n  secretKey = 'C64GF-QGX43-2PMM3-KFGKM-Q66PR';\r\n\r\n  constructor() { }\r\n\r\n  encrypt(value: string): string{\r\n    return CryptoJS.HmacSHA256(value, this.secretKey.trim()).toString();\r\n    // return CryptoJS.AES.encrypt(value, this.secretKey.trim()).toString();\r\n    // return CryptoJS.AES.encrypt(value, this.secretKey.trim()).toString();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserI } from  '../models/users';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { GlobalUrl } from './webapiurl';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  public userLoginReq: UserI;\r\n  public url: string;\r\n  token;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.url = GlobalUrl.url_webapi;\r\n  }\r\n\r\n  loginReq(userLoginReq: any): Observable<any> {\r\n    return this.http.post(this.url + 'login/authenticate', userLoginReq);\r\n  }\r\n\r\n  resetPasswordReq(resetPasswordReq: any): Observable<any> {\r\n    return this.http.post(this.url + 'login/resetpassword', resetPasswordReq);\r\n  }\r\n\r\n  changePasswordReq(changePasswordReq: any): Observable<any> {\r\n    return this.http.put(this.url + 'login/changepassword', changePasswordReq);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { observable, Observable, of } from 'rxjs';\r\nimport { categoryModel } from 'src/app/models/category.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { from } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class categoryservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getCategoryAll() {\r\n        return this.http.get<categoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'Category/lista');\r\n    }\r\n\r\n    getCategoryById(id : number) {\r\n        return this.http.get<categoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'Category/' + id);\r\n    }\r\n\r\n    updateProjects(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'Category/actualizar',arrayToDb);\r\n    }\r\n\r\n    insertProjects(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Category/registrar',arrayToDb);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class loginservice {\r\n\r\n  constructor() { }\r\n\r\n  checkusernameandpassword(uname: string, pwd: string) {\r\n    if (uname === 'admin' && pwd === 'admin123') {\r\n      localStorage.setItem('username', 'admin');\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { observable, Observable, of } from 'rxjs';\r\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { from } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class projectCategoryservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getProjectCateogryAll() {\r\n        return this.http.get<projectCategoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/lista');\r\n    }\r\n\r\n    // getProjectCateogryById(proyectoId : any) {\r\n    //     return this.http.get<projectCategoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/' + proyectoId);\r\n    // }\r\n\r\n    getProjectCateogryById(proyectoId : any) {\r\n        console.log('vvv', environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/' + proyectoId);\r\n        return this.http.get<projectCategoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/' + proyectoId);\r\n    }\r\n\r\n    updateProjectCatgory(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'ProjectCategory/actualizar',arrayToDb);\r\n    }\r\n\r\n    insertProjects(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'ProjectCategory/registrar',arrayToDb);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { observable, Observable, of } from 'rxjs';\r\nimport { projectModel } from 'src/app/models/project.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { from } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class projectservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getProjectAll() {\r\n        return this.http.get<projectModel[]>(environment.urlapi + environment.apiContextDrivers + 'Project/lista');\r\n    }\r\n\r\n    updateProjects(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'Project/actualizar',arrayToDb);\r\n    }\r\n\r\n    insertProjects(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Project/registrar',arrayToDb);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { observable, Observable, of } from 'rxjs';\r\nimport { quotationListModel } from 'src/app/models/quotation-list.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { from } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class quotationservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getQuotationAll() {\r\n        return this.http.get<quotationListModel[]>(environment.urlapi + environment.apiContextDrivers + 'Quote/lista');\r\n    }\r\n\r\n    getQuotationById(id : any) {\r\n        return this.http.get<quotationListModel[]>(environment.urlapi + environment.apiContextDrivers + 'Quote/' + id);\r\n    }\r\n\r\n    insertQuotation(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Quote/registrar',arrayToDb);\r\n    }\r\n\r\n    insertQuotationDetail(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Quote/registrar/detalle',arrayToDb);\r\n    }\r\n\r\n    insertQuotationCancel(id : any) {\r\n        // return this.http.put(environment.urlapi + environment.apiContextDrivers + 'Quotation/cancelar' + id);\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { observable, Observable, of } from 'rxjs';\r\nimport { requisitionModel } from 'src/app/models/requisition.model';\r\nimport { requisitionModelDetail } from 'src/app/models/requisition.model.detail';\r\nimport { environment } from 'src/environments/environment';\r\nimport { from } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class requisitionservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getRequisitionAll() {\r\n        return this.http.get<requisitionModel[]>(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/lista');\r\n    }\r\n\r\n    getRequisitionById(id : any) {\r\n        return this.http.get<requisitionModel[]>(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/' + id);\r\n    }\r\n\r\n    getRequisitionDetail(id : any) {\r\n        return this.http.get<requisitionModelDetail[]>(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/detalle/' + id);\r\n    }\r\n\r\n    insertRequisition(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'InternalRequisition/registrar',arrayToDb);\r\n    }\r\n\r\n    insertRequisitionDetail(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'InternalRequisition/registrar/detalle',arrayToDb);\r\n    }\r\n\r\n    insertRequisitionCancel(id : any) {\r\n        // return this.http.put(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/cancelar' + id);\r\n    }\r\n\r\n}","export let GlobalUrl = {\r\n    // url_webapi: 'http://127.0.0.1:8080/api/'\r\n    url_webapi: 'https://localhost:44342/api/'\r\n    // url_webapi: 'https://apiconacoha.brandingpublicity.com.mx/api/'\r\n  };\r\n  ","import {\r\n  Directive,\r\n  OnInit,\r\n  AfterViewInit,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]'\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf(link.group) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe(e => this.checkOpenLinks());\r\n  }\r\n\r\n  constructor(private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionToggle]'\r\n})\r\nexport class AccordionAnchorDirective {\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: any) {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionLink]'\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  public group: any;\r\n\r\n  @HostBinding('class.selected')\r\n  @Input()\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: boolean) {\r\n    this._selected = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _selected: boolean=false;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.selected = !this.selected;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\n\r\nconst MENUITEMS = [\r\n  { state: 'dashboard', name: 'Dashboard', type: 'link', icon: 'av_timer' },\r\n  { state: 'project', name: 'Proyecto', type: 'link', icon: 'view_comfy' },\r\n  { state: 'requisition', name: 'Requisiciones', type: 'link', icon: 'view_list' },\r\n  { state: 'quotation', name: 'Cotizaciones', type: 'link', icon: 'web' },\r\n  { state: 'po', name: 'Orden de compra', type: 'link', icon: 'tab' },\r\n  { state: 'storage', name: 'Almacén', type: 'link', icon: 'assignment_turned_in' },\r\n  { state: 'warehouse-review', name: 'Revisión en Almacén', type: 'link', icon: 'assignment_turned_in' },\r\n  // { state: 'button', type: 'link', name: 'Buttons', icon: 'crop_7_5' },\r\n  // { state: 'grid', type: 'link', name: 'Grid List', icon: 'view_comfy' },\r\n  // { state: 'lists', type: 'link', name: 'Lists', icon: 'view_list' },\r\n  // { state: 'menu', type: 'link', name: 'Menu', icon: 'view_headline' },\r\n  // { state: 'tabs', type: 'link', name: 'Tabs', icon: 'tab' },\r\n  // { state: 'stepper', type: 'link', name: 'Stepper', icon: 'web' },\r\n  // {\r\n  //   state: 'expansion',\r\n  //   type: 'link',\r\n  //   name: 'Expansion Panel',\r\n  //   icon: 'vertical_align_center'\r\n  // },\r\n  // { state: 'chips', type: 'link', name: 'Chips', icon: 'vignette' },\r\n  // { state: 'toolbar', type: 'link', name: 'Toolbar', icon: 'voicemail' },\r\n  // {\r\n  //   state: 'progress-snipper',\r\n  //   type: 'link',\r\n  //   name: 'Progress snipper',\r\n  //   icon: 'border_horizontal'\r\n  // },\r\n  // {\r\n  //   state: 'progress',\r\n  //   type: 'link',\r\n  //   name: 'Progress Bar',\r\n  //   icon: 'blur_circular'\r\n  // },\r\n  // {\r\n  //   state: 'dialog',\r\n  //   type: 'link',\r\n  //   name: 'Dialog',\r\n  //   icon: 'assignment_turned_in'\r\n  // },\r\n  // { state: 'tooltip', type: 'link', name: 'Tooltip', icon: 'assistant' },\r\n  // { state: 'snackbar', type: 'link', name: 'Snackbar', icon: 'adb' },\r\n  // { state: 'slider', type: 'link', name: 'Slider', icon: 'developer_mode' },\r\n  // {\r\n  //   state: 'slide-toggle',\r\n  //   type: 'link',\r\n  //   name: 'Slide Toggle',\r\n  //   icon: 'all_inclusive'\r\n  // }\r\n];\r\n\r\n@Injectable()\r\nexport class MenuItems {\r\n  getMenuitem(): Menu[] {\r\n    return MENUITEMS;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MenuItems } from './menu-items/menu-items';\r\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n  ],\r\n  exports: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n   ],\r\n  providers: [ MenuItems ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, Input, OnDestroy, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\r\n        <div class=\"spinner\">\r\n          <div class=\"double-bounce1\"></div>\r\n          <div class=\"double-bounce2\"></div>\r\n        </div>\r\n    </div>`,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SpinnerComponent implements OnDestroy {\r\n  public isSpinnerVisible = true;\r\n\r\n  @Input()\r\n  public backgroundColor = 'rgba(0, 115, 170, 0.69)';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    this.router.events.subscribe(\r\n      event => {\r\n        if (event instanceof NavigationStart) {\r\n          this.isSpinnerVisible = true;\r\n        } else if (\r\n          event instanceof NavigationEnd ||\r\n          event instanceof NavigationCancel ||\r\n          event instanceof NavigationError\r\n        ) {\r\n          this.isSpinnerVisible = false;\r\n        }\r\n      },\r\n      () => {\r\n        this.isSpinnerVisible = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isSpinnerVisible = false;\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  urlapi : 'https://sap-comercial.azurewebsites.net/',\r\n  apiContextDrivers : 'api/'\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport 'hammerjs';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","var map = {\n\t\"./af\": 26431,\n\t\"./af.js\": 26431,\n\t\"./ar\": 81286,\n\t\"./ar-dz\": 1616,\n\t\"./ar-dz.js\": 1616,\n\t\"./ar-kw\": 9759,\n\t\"./ar-kw.js\": 9759,\n\t\"./ar-ly\": 43160,\n\t\"./ar-ly.js\": 43160,\n\t\"./ar-ma\": 62551,\n\t\"./ar-ma.js\": 62551,\n\t\"./ar-sa\": 79989,\n\t\"./ar-sa.js\": 79989,\n\t\"./ar-tn\": 6962,\n\t\"./ar-tn.js\": 6962,\n\t\"./ar.js\": 81286,\n\t\"./az\": 15887,\n\t\"./az.js\": 15887,\n\t\"./be\": 14572,\n\t\"./be.js\": 14572,\n\t\"./bg\": 3276,\n\t\"./bg.js\": 3276,\n\t\"./bm\": 93344,\n\t\"./bm.js\": 93344,\n\t\"./bn\": 58985,\n\t\"./bn-bd\": 83990,\n\t\"./bn-bd.js\": 83990,\n\t\"./bn.js\": 58985,\n\t\"./bo\": 94391,\n\t\"./bo.js\": 94391,\n\t\"./br\": 46728,\n\t\"./br.js\": 46728,\n\t\"./bs\": 5536,\n\t\"./bs.js\": 5536,\n\t\"./ca\": 41043,\n\t\"./ca.js\": 41043,\n\t\"./cs\": 70420,\n\t\"./cs.js\": 70420,\n\t\"./cv\": 33513,\n\t\"./cv.js\": 33513,\n\t\"./cy\": 6771,\n\t\"./cy.js\": 6771,\n\t\"./da\": 47978,\n\t\"./da.js\": 47978,\n\t\"./de\": 46061,\n\t\"./de-at\": 25204,\n\t\"./de-at.js\": 25204,\n\t\"./de-ch\": 2653,\n\t\"./de-ch.js\": 2653,\n\t\"./de.js\": 46061,\n\t\"./dv\": 85,\n\t\"./dv.js\": 85,\n\t\"./el\": 8579,\n\t\"./el.js\": 8579,\n\t\"./en-au\": 25724,\n\t\"./en-au.js\": 25724,\n\t\"./en-ca\": 10525,\n\t\"./en-ca.js\": 10525,\n\t\"./en-gb\": 52847,\n\t\"./en-gb.js\": 52847,\n\t\"./en-ie\": 67216,\n\t\"./en-ie.js\": 67216,\n\t\"./en-il\": 39305,\n\t\"./en-il.js\": 39305,\n\t\"./en-in\": 73364,\n\t\"./en-in.js\": 73364,\n\t\"./en-nz\": 79130,\n\t\"./en-nz.js\": 79130,\n\t\"./en-sg\": 11161,\n\t\"./en-sg.js\": 11161,\n\t\"./eo\": 50802,\n\t\"./eo.js\": 50802,\n\t\"./es\": 40328,\n\t\"./es-do\": 45551,\n\t\"./es-do.js\": 45551,\n\t\"./es-mx\": 75615,\n\t\"./es-mx.js\": 75615,\n\t\"./es-us\": 64790,\n\t\"./es-us.js\": 64790,\n\t\"./es.js\": 40328,\n\t\"./et\": 96389,\n\t\"./et.js\": 96389,\n\t\"./eu\": 52961,\n\t\"./eu.js\": 52961,\n\t\"./fa\": 26151,\n\t\"./fa.js\": 26151,\n\t\"./fi\": 7997,\n\t\"./fi.js\": 7997,\n\t\"./fil\": 58898,\n\t\"./fil.js\": 58898,\n\t\"./fo\": 37779,\n\t\"./fo.js\": 37779,\n\t\"./fr\": 28174,\n\t\"./fr-ca\": 3287,\n\t\"./fr-ca.js\": 3287,\n\t\"./fr-ch\": 38867,\n\t\"./fr-ch.js\": 38867,\n\t\"./fr.js\": 28174,\n\t\"./fy\": 50452,\n\t\"./fy.js\": 50452,\n\t\"./ga\": 45014,\n\t\"./ga.js\": 45014,\n\t\"./gd\": 74127,\n\t\"./gd.js\": 74127,\n\t\"./gl\": 72124,\n\t\"./gl.js\": 72124,\n\t\"./gom-deva\": 6444,\n\t\"./gom-deva.js\": 6444,\n\t\"./gom-latn\": 37953,\n\t\"./gom-latn.js\": 37953,\n\t\"./gu\": 76604,\n\t\"./gu.js\": 76604,\n\t\"./he\": 1222,\n\t\"./he.js\": 1222,\n\t\"./hi\": 74235,\n\t\"./hi.js\": 74235,\n\t\"./hr\": 622,\n\t\"./hr.js\": 622,\n\t\"./hu\": 37735,\n\t\"./hu.js\": 37735,\n\t\"./hy-am\": 90402,\n\t\"./hy-am.js\": 90402,\n\t\"./id\": 59187,\n\t\"./id.js\": 59187,\n\t\"./is\": 30536,\n\t\"./is.js\": 30536,\n\t\"./it\": 35007,\n\t\"./it-ch\": 94667,\n\t\"./it-ch.js\": 94667,\n\t\"./it.js\": 35007,\n\t\"./ja\": 62093,\n\t\"./ja.js\": 62093,\n\t\"./jv\": 80059,\n\t\"./jv.js\": 80059,\n\t\"./ka\": 66870,\n\t\"./ka.js\": 66870,\n\t\"./kk\": 80880,\n\t\"./kk.js\": 80880,\n\t\"./km\": 1083,\n\t\"./km.js\": 1083,\n\t\"./kn\": 68785,\n\t\"./kn.js\": 68785,\n\t\"./ko\": 21721,\n\t\"./ko.js\": 21721,\n\t\"./ku\": 37851,\n\t\"./ku.js\": 37851,\n\t\"./ky\": 1727,\n\t\"./ky.js\": 1727,\n\t\"./lb\": 40346,\n\t\"./lb.js\": 40346,\n\t\"./lo\": 93002,\n\t\"./lo.js\": 93002,\n\t\"./lt\": 64035,\n\t\"./lt.js\": 64035,\n\t\"./lv\": 56927,\n\t\"./lv.js\": 56927,\n\t\"./me\": 5634,\n\t\"./me.js\": 5634,\n\t\"./mi\": 94173,\n\t\"./mi.js\": 94173,\n\t\"./mk\": 86320,\n\t\"./mk.js\": 86320,\n\t\"./ml\": 11705,\n\t\"./ml.js\": 11705,\n\t\"./mn\": 31062,\n\t\"./mn.js\": 31062,\n\t\"./mr\": 92805,\n\t\"./mr.js\": 92805,\n\t\"./ms\": 11341,\n\t\"./ms-my\": 59900,\n\t\"./ms-my.js\": 59900,\n\t\"./ms.js\": 11341,\n\t\"./mt\": 37734,\n\t\"./mt.js\": 37734,\n\t\"./my\": 19034,\n\t\"./my.js\": 19034,\n\t\"./nb\": 9324,\n\t\"./nb.js\": 9324,\n\t\"./ne\": 46495,\n\t\"./ne.js\": 46495,\n\t\"./nl\": 70673,\n\t\"./nl-be\": 76272,\n\t\"./nl-be.js\": 76272,\n\t\"./nl.js\": 70673,\n\t\"./nn\": 72486,\n\t\"./nn.js\": 72486,\n\t\"./oc-lnc\": 46219,\n\t\"./oc-lnc.js\": 46219,\n\t\"./pa-in\": 2829,\n\t\"./pa-in.js\": 2829,\n\t\"./pl\": 78444,\n\t\"./pl.js\": 78444,\n\t\"./pt\": 53170,\n\t\"./pt-br\": 66117,\n\t\"./pt-br.js\": 66117,\n\t\"./pt.js\": 53170,\n\t\"./ro\": 96587,\n\t\"./ro.js\": 96587,\n\t\"./ru\": 39264,\n\t\"./ru.js\": 39264,\n\t\"./sd\": 42135,\n\t\"./sd.js\": 42135,\n\t\"./se\": 95366,\n\t\"./se.js\": 95366,\n\t\"./si\": 93379,\n\t\"./si.js\": 93379,\n\t\"./sk\": 46143,\n\t\"./sk.js\": 46143,\n\t\"./sl\": 196,\n\t\"./sl.js\": 196,\n\t\"./sq\": 21082,\n\t\"./sq.js\": 21082,\n\t\"./sr\": 91621,\n\t\"./sr-cyrl\": 98963,\n\t\"./sr-cyrl.js\": 98963,\n\t\"./sr.js\": 91621,\n\t\"./ss\": 41404,\n\t\"./ss.js\": 41404,\n\t\"./sv\": 55685,\n\t\"./sv.js\": 55685,\n\t\"./sw\": 3872,\n\t\"./sw.js\": 3872,\n\t\"./ta\": 54106,\n\t\"./ta.js\": 54106,\n\t\"./te\": 39204,\n\t\"./te.js\": 39204,\n\t\"./tet\": 83692,\n\t\"./tet.js\": 83692,\n\t\"./tg\": 86361,\n\t\"./tg.js\": 86361,\n\t\"./th\": 31735,\n\t\"./th.js\": 31735,\n\t\"./tk\": 1568,\n\t\"./tk.js\": 1568,\n\t\"./tl-ph\": 96129,\n\t\"./tl-ph.js\": 96129,\n\t\"./tlh\": 13759,\n\t\"./tlh.js\": 13759,\n\t\"./tr\": 81644,\n\t\"./tr.js\": 81644,\n\t\"./tzl\": 90875,\n\t\"./tzl.js\": 90875,\n\t\"./tzm\": 16878,\n\t\"./tzm-latn\": 11041,\n\t\"./tzm-latn.js\": 11041,\n\t\"./tzm.js\": 16878,\n\t\"./ug-cn\": 74357,\n\t\"./ug-cn.js\": 74357,\n\t\"./uk\": 74810,\n\t\"./uk.js\": 74810,\n\t\"./ur\": 86794,\n\t\"./ur.js\": 86794,\n\t\"./uz\": 28966,\n\t\"./uz-latn\": 77959,\n\t\"./uz-latn.js\": 77959,\n\t\"./uz.js\": 28966,\n\t\"./vi\": 35386,\n\t\"./vi.js\": 35386,\n\t\"./x-pseudo\": 23156,\n\t\"./x-pseudo.js\": 23156,\n\t\"./yo\": 68028,\n\t\"./yo.js\": 68028,\n\t\"./zh-cn\": 9330,\n\t\"./zh-cn.js\": 9330,\n\t\"./zh-hk\": 89380,\n\t\"./zh-hk.js\": 89380,\n\t\"./zh-mo\": 60874,\n\t\"./zh-mo.js\": 60874,\n\t\"./zh-tw\": 96508,\n\t\"./zh-tw.js\": 96508\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}