{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/components/auth-signin/auth-signin.component.ts","webpack:///src/app/components/auth-signin/auth-signin.component.html","webpack:///src/app/components/auth/auth.component.ts","webpack:///src/app/components/auth/auth.component.html","webpack:///src/app/components/categories/categories/categories.component.html","webpack:///src/app/components/categories/categories/categories.component.ts","webpack:///src/app/components/customer-detail/customer-detail.component.html","webpack:///src/app/components/customer-detail/customer-detail.component.ts","webpack:///src/app/components/po-detail/po-detail.component.html","webpack:///src/app/components/po-detail/po-detail.component.ts","webpack:///src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component.html","webpack:///src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component.ts","webpack:///src/app/components/quotations/quotation-detail-files/quotation-detail-files.component.html","webpack:///src/app/components/quotations/quotation-detail-files/quotation-detail-files.component.ts","webpack:///src/app/components/quotations/quotation-detail/quotation-detail.component.html","webpack:///src/app/components/quotations/quotation-detail/quotation-detail.component.ts","webpack:///src/app/components/requisitions/requisition-detail/requisition-detail.component.html","webpack:///src/app/components/requisitions/requisition-detail/requisition-detail.component.ts","webpack:///src/app/components/supplier-detail/supplier-detail.component.html","webpack:///src/app/components/supplier-detail/supplier-detail.component.ts","webpack:///src/app/demo-material-module.ts","webpack:///src/app/guards/auth.guards.ts","webpack:///src/app/helpers/excel-service.service.ts","webpack:///src/app/layouts/full/full.component.ts","webpack:///src/app/layouts/full/full.component.html","webpack:///src/app/layouts/full/header/header.component.ts","webpack:///src/app/layouts/full/header/header.component.html","webpack:///src/app/layouts/full/sidebar/sidebar.component.html","webpack:///src/app/layouts/full/sidebar/sidebar.component.ts","webpack:///src/app/models/auth.model.ts","webpack:///src/app/models/users.ts","webpack:///src/app/pages/categories/categories-list/categories-list.component.ts","webpack:///src/app/pages/categories/categories-list/categories-list.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/projects/project-capture/project-capture.component.html","webpack:///src/app/pages/projects/project-capture/project-capture.component.ts","webpack:///src/app/pages/purchaseOrder/po-list/po-list.component.html","webpack:///src/app/pages/purchaseOrder/po-list/po-list.component.ts","webpack:///src/app/pages/quotation/quotation-list/quotation-list.component.html","webpack:///src/app/pages/quotation/quotation-list/quotation-list.component.ts","webpack:///src/app/pages/requisition/requisition-list/requisition-list.component.html","webpack:///src/app/pages/requisition/requisition-list/requisition-list.component.ts","webpack:///src/app/pages/storageInvoice/storage-invoice-list/storage-invoice-list.component.html","webpack:///src/app/pages/storageInvoice/storage-invoice-list/storage-invoice-list.component.ts","webpack:///src/app/pages/warehouse-review/warehouse-review.component.html","webpack:///src/app/pages/warehouse-review/warehouse-review.component.ts","webpack:///src/app/services/PurchaseOrder.service.ts","webpack:///src/app/services/aesencrypt.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/category/category.service.ts","webpack:///src/app/services/customer.service.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/services/login/login.service.ts","webpack:///src/app/services/projectCtegory/projectCateogry.service.ts","webpack:///src/app/services/projects/project.service.ts","webpack:///src/app/services/quotation/quotation.service.ts","webpack:///src/app/services/requisition/requisition.service.ts","webpack:///src/app/services/supplier.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/shared/accordion/accordion.directive.ts","webpack:///src/app/shared/accordion/accordionanchor.directive.ts","webpack:///src/app/shared/accordion/accordionlink.directive.ts","webpack:///src/app/shared/menu-items/menu-items.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/spinner.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///node_modules/moment/locale|sync|/^/.*$","webpack:///ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\crypto-js|crypto","webpack:///ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|crypto","webpack:///ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|fs","webpack:///ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|stream"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","AppComponent","AppModule","provide","LocationStrategy","useClass","PathLocationStrategy","BrowserModule","BrowserAnimationsModule","DemoMaterialModule","FormsModule","FlexLayoutModule","HttpClientModule","SharedModule","MatTableModule","MatSortModule","MatFormFieldModule","MatInputModule","MatCardModule","ReactiveFormsModule","AppRoutingModule","ToastrModule","timeOut","positionClass","preventDuplicates","FullComponent","AppHeaderComponent","SpinnerComponent","AppSidebarComponent","CategoriesComponent","CategoriesListComponent","ProjectCaptureDetailComponent","ProjectCaptureComponent","RequisitionListComponent","RequisitionDetailComponent","QuotationListComponent","PoListComponent","StorageInvoiceListComponent","QuotationDetailComponent","QuotationDetailFilesComponent","AuthComponent","WarehouseReviewComponent","PoDetailComponent","AuthSigninComponent","CustomerDetailComponent","SupplierDetailComponent","routes","path","component","children","redirectTo","pathMatch","loadChildren","AuthenticationModule","m","DashboardModule","ProjectModule","CategoriesModule","RequisitionModule","QuotationModule","PoModule","StorageModule","CustomerModule","SupplierModule","LoginComponent","canActivate","AuthGuard","RouterModule","useHash","authservice","userS","fb","route","cryptojs","dataService","spinerShow","authmodel","AuthC","clearForm","pswdEncryp","encrypt","signinForm","value","password","substring","loginReq","subscribe","response","localStorage","setItem","token","DecodeToken","loginChanged","emit","navigate","err","status","alertify","warning","error","console","group","username","Validators","$event","stopPropagation","dialogRef","data","snackBar","_projectCategoryservice","formBuilder","_snackBar","pageIndex","pageSize","currentPage","totalSize","almacen_id","fecha_inicial","Date","format","proyecto_id","responsableEdicion","presupuestoEdicion","activoEdicion","almacenEdicion","fechaEdicion","presupuesto","activo","displayedColumns","projectInfo","arrayData","projectId","arrayPoryectoActual","filteredData","filter","presupuestoTotal","presupuestoRestante","getproyectosCategorias","getProjectCateogryById","res","log","datasourceProjectCategories","MatTableDataSource","array","length","sort","element","event","camporesponsable","arraySaveData","proyectocategoria_id","codigo_proyectocategoria","responsable","toString","insertProjectCategoryDet","campo","target","x","CalculaPresupuesto","presupuestoCategoria","tabla1","forEach","parseInt","arrayToDb","updateProjectCatgory","openSnackBar","elementAlmacen","message","action","open","duration","close","MAT_DIALOG_DATA","MatSort","MatPaginator","MatTable","salir","_customerservice","newProject","nombre","FormControl","direccion","ciudad","rfc","telefono","estado","form","controls","contacto","vigencia","estatus","insertCustommer","insertcustomer","updatecustomer","save","cancel","_quotationservice","_supplyservice","_purchaseOrderservice","dialog","title","cotizacion_id","codigo_requisicioninterna","odc_Numero","proveedor_id","cotizacionId","datasourcePoveedores","po_count","iva","subtotal","ivaSubtotal","total","precio_unitario","importe","moneda","getsupplierAll","getProveedores","getCotizacionesAll","undefined","ordendecompra_id","proveedor_nombre","sub_total","iva_moneda","getPO_Detail","patchValue","ordendecompra_codigo","tipo_moneda","getcotizacionesDetail","onBlurMethod","valido","get","validaCamposRequeridos","insertPOHdr","dialogConfig","MatDialogConfig","width","height","disableClose","afterClosed","result","cantidad","descuento","doc","pdfTable","nativeElement","html","innerHTML","documentDefinition","content","arrayProvider","push","codigo_cotizacion","arrayPO_Hdr","getPOAll","podatasource","getQuotationAll","datasourceCotizaciones","getQuotationDetail","datasourceCotizacionesDetalle","getPO_Hdr","table","arrayTodb","arrayDetail","conteo","codigo","fecha","ordendecompradetalle_id","cotizaciondetalle_id","sku","medida","color","otras_especificaciones","unidad_medida","costo","importe_total","descripcion","insertPO_Hdr","insertPODet","po_id","arrayTodbDetail","insertPODetail","getsupplyAll","datasourcesupplier","getPODetail","cotizacionSelected","ivaSelected","addSupplier","reloadSupplier","_projectService","_categoryService","fecha_inicial_proyecto","fecha_final_proyecto","nombre_proyecto","cliente","presupuesto_proyecto","responsable_proyecto","centro_de_costo_proyecto","almacen","codigo_proyecto","proeycto_id_mayor","proeycto_numero_mayor","datasourceCategories","datasourceProyects","centroDeCostos","getcustomerAll","getAllProjects","getEnabledCategories","cliente_id","insertProjects","insertCategories","updateProjects","datasourceProyectos","proyectoIdMaximo","codigoProyecto","arrayProjectCategories","getProjectAll","find","categoria_id","codigo_categoria","ultimoCaracter","pattern","inputChar","String","fromCharCode","charCode","slice","i","Number","getCategoryAll","datasourceCustomers","selectcustommer","addClient","reloadClient","_keyUp","fechaInicial","_requisitionservice","nombreArchivo","QuotationInfo","cotizacion_Id","extencionArchivo","UploadDataQuotation","files","reader","FileReader","readAsBinaryString","name","onload","binarystr","dataUploadFile","file","dataShowUploadFile","onFileChange","uploadFile","requisicion_id","requisicion_Numero","cotizacion_Numero","loadfile","buscar","requisicionId","quotationId","datasourcePorjects","datasourceRequisitionDetail","datasourceCotizacionesDet","arraytemp","seleccionar","getProyectos","getCategories","getrequisitionAll","arrayRequisicion_interna","codigoRequisicion_interna","datasourceRequisition","requisicioninterna_id","getRequisitionDetail","cantidadOrdenar","requisicionDet_id","uom","descripcionOrdenar","arrayRequisicioneDetalle","requisicionDetalle_id","requisicioninternaDetalle_id","um","insertQuotationHeader","iterator","end","start","part","dataSourceShow","paginator","filtro","trim","toLowerCase","requisicion_interna","getRequisitionAll","getRequisitionById","Requisition_Id","proyecto","insertQuotation","insertQuotationDet","datasourceRequsition","requisitionIdMaximo","requisicioninternadetalle_id","insertQuotationDetail","proyectoSelected","categorySelected","RequisitionSelected","fechaControl","setValue","UploadDataExcel","wb","type","wsname","SheetNames","ws","Sheets","dataExcel","validate","arrayErrores","arrayExcel","errorCantidad","errorUoM","errorDescripcion","errorSKU","DescripcionAnt","Descripcion","a","b","DESCRIPCION","toUpperCase","contador","SKU","CANTIDAD_REQUERIDA","UNIDAD","unidad_de_medida","requisition_Id","MEDIDA","COLOR","OTRAS_ESPECIFICACIONES","deleteUploadFile","proyectoCategoria_id","arrayProyectoCategoria","getrequisition","fo","cargo","no_pym","insertRequisition","updateRequisition","codigo_requisicion","arrayRequisition","arrayCodigoCategoria","cantidadRequisition","insertRequisitionDet","arrayRequsitionDetail","arrayRequsitionToTable","existencia_almacen","cantidad_comprar","cotizado","insertRequisitionDetail","proveedorid","insertSupplier","insertsupply","updatesupply","MatAutocompleteModule","MatButtonModule","MatBottomSheetModule","MatButtonToggleModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatDialogModule","MatExpansionModule","MatGridListModule","MatIconModule","MatListModule","MatMenuModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatBadgeModule","MatSidenavModule","MatSlideToggleModule","MatSliderModule","MatSnackBarModule","MatStepperModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatNativeDateModule","CdkTableModule","A11yModule","BidiModule","CdkAccordionModule","ObserversModule","OverlayModule","PlatformModule","PortalModule","router","getItem","EXCEL_TYPE","EXCEL_EXTENSION","ExcelServiceService","json","excelFileName","worksheet","workbook","excelBuffer","bookType","saveAsExcelFile","buffer","fileName","Blob","getTime","changeDetectorRef","media","menuItems","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","removeListener","nombreusuario","correo","contrasegna","perfilid","perfil","UserC","fraccionamiento_id","nombre_perfil","nombre_completo","apellido_paterno","apellido_materno","foto","nombre_estado","service","authService","cryptService","toastr","msg","userinterface","loginform","loginservice","_excelService","projectData","filterChange","EventEmitter","getProjects","proyectoId","dataSourceShowToExcel","nombre_cliente","exportAsExcelFile","filtrar","descargarProyectos","nuevoProyecto","handlePage","_purchaseOrderService","categoria","requisicion","Fecha_Requisicion","window","location","reload","updateODCStatus","putPOCancel","statusToDb","usuario","updatePOStatus","descargarExcel","nuevaOrdenDeCompra","_quotationService","evetn","nuevaCotizacion","_requisitionService","nuevaRequisicion","Categoria_Id","Requisicion_Id","Estatus","requisicion_Codigo","headers","HttpHeaders","set","append","purchaseOrderservice","http","environment","post","put","AESEncryptService","secretKey","AuthService","url","auth","resetPasswordReq","changePasswordReq","categoryservice","customerservice","DataService","decodeJWT","userid","fullname","email","branchofficeid","branchoffice","profileid","profile","employid","employcategory","companyid","country","uname","pwd","projectCategoryservice","projectservice","quotationservice","requisitionservice","supplyservice","UserService","employeeObj","params","JSON","stringify","resourceid","userObj","AccordionDirective","navlinks","setTimeout","checkOpenLinks","selectedLink","link","selected","index","indexOf","splice","routeUrl","currentUrl","split","closeOtherLinks","events","pipe","NavigationEnd","AccordionAnchorDirective","navlink","toggle","AccordionLinkDirective","nav","_selected","addLink","removeGroup","MENUITEMS","state","icon","MenuItems","document","isSpinnerVisible","backgroundColor","NavigationStart","NavigationCancel","NavigationError","DOCUMENT","production","urlapi","apiContextDrivers","enableProdMode","platformBrowser","bootstrapModule","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<router-outlet><app-spinner></app-spinner></router-outlet>","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ToastrModule } from 'ngx-toastr';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { AppRoutingModule } from './app.routing';\nimport { AppComponent } from './app.component';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FullComponent } from './layouts/full/full.component';\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DemoMaterialModule } from './demo-material-module';\n// import { LoginComponent } from './pages/login/login.component';  \n\nimport { SharedModule } from './shared/shared.module';\nimport { SpinnerComponent } from './shared/spinner.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\n\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { CategoriesComponent } from './components/categories/categories/categories.component';\nimport { CategoriesListComponent } from './pages/categories/categories-list/categories-list.component';\nimport { ProjectCaptureDetailComponent } from '../app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { ProjectCaptureComponent } from '../app/pages/projects/project-capture/project-capture.component';\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { RequisitionListComponent } from './pages/requisition/requisition-list/requisition-list.component';\nimport { RequisitionDetailComponent } from './components/requisitions/requisition-detail/requisition-detail.component';\nimport { QuotationListComponent } from './pages/quotation/quotation-list/quotation-list.component';\nimport { PoListComponent } from './pages/purchaseOrder/po-list/po-list.component';\nimport { StorageInvoiceListComponent } from './pages/storageInvoice/storage-invoice-list/storage-invoice-list.component';\nimport { QuotationDetailComponent } from './components/quotations/quotation-detail/quotation-detail.component';\nimport { QuotationDetailFilesComponent } from './components/quotations/quotation-detail-files/quotation-detail-files.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { WarehouseReviewComponent } from './pages/warehouse-review/warehouse-review.component';\nimport { PoDetailComponent } from './components/po-detail/po-detail.component';\nimport { AuthSigninComponent } from './components/auth-signin/auth-signin.component';\n\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { CustomerDetailComponent } from './components/customer-detail/customer-detail.component';\nimport { SupplierDetailComponent } from './components/supplier-detail/supplier-detail.component';\n\n// import { Notification } from './components/notification/notification.component/notification.component.component';\n// import { NotificationComponent } from './components/notification/notification/notification.component' \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FullComponent,\n    AppHeaderComponent,\n    SpinnerComponent,\n    AppSidebarComponent,\n    CategoriesComponent,\n    // LoginComponent,\n    CategoriesListComponent,\n    ProjectCaptureDetailComponent,\n    ProjectCaptureComponent,\n    RequisitionListComponent,\n    RequisitionDetailComponent,\n    QuotationListComponent,\n    PoListComponent,\n    StorageInvoiceListComponent,\n    QuotationDetailComponent,\n    QuotationDetailFilesComponent,\n    AuthComponent,\n    WarehouseReviewComponent,\n    PoDetailComponent,\n    AuthSigninComponent,\n    CustomerDetailComponent,\n    SupplierDetailComponent\n    // ,\n    // Notification.ComponentComponent,\n    // NotificationComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    DemoMaterialModule,\n    FormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    SharedModule,\n    MatTableModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    ToastrModule.forRoot({\n      timeOut: 5000,\n      positionClass: 'toast-bottom-center',\n      preventDuplicates: true,\n    })\n    // RouterModule.forRoot(AppRoutingModule, {useHash: true}) // AppRoutes\n  ],\n  exports:[ MatTableModule ],\n  providers: [\n    {\n      provide: LocationStrategy,\n      useClass: PathLocationStrategy\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FullComponent } from './layouts/full/full.component';\nimport { AuthComponent } from  '../../src/app/components/auth/auth.component';\nimport { AuthGuard } from './guards/auth.guards';\nimport { LoginComponent } from './pages/login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: '/auth/login',\n        pathMatch: 'full'\n      },\n      {\n        path: 'auth',\n          loadChildren: () => import('./pages/authentication.module').then(module => module.AuthenticationModule)\n          // loadChildren: () => import('./pages/login/login.module').then(module => module.LoginModule)\n      }\n    ]\n  },\n  {\n    path: '',\n    component: FullComponent,\n    children: [\n      {\n        path: 'dashboard',\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\n      },\n      {\n        path: 'project',\n        loadChildren: () => import('./pages/projects/project-capture/project.module').then(m => m.ProjectModule)\n      },\n      {\n        path: 'categories',\n        loadChildren: () => import('./pages/categories/categories-list/categories.module').then(m => m.CategoriesModule)\n      },\n      {\n        path: 'requisition',\n        loadChildren: () => import('./pages/requisition/requisition-list/requisition.module').then(m => m.RequisitionModule)\n      },\n      {\n        path: 'quotation',\n        loadChildren: () => import('./pages/quotation/quotation-list/quotation.module').then(m => m.QuotationModule)\n      },\n      {\n        path: 'po',\n        loadChildren: () => import('./pages/purchaseOrder/po-list/po.module').then(m => m.PoModule)\n      },\n      {\n        path: 'storage',\n        loadChildren: () => import('./pages/storageInvoice/storage-invoice-list/storage.module').then(m => m.StorageModule)\n      },\n      {\n        path: 'customer',\n        loadChildren: () => import('./pages/catcustomer/customer/customer.module').then(m => m.CustomerModule)\n      },\n      {\n        path: 'supplier',\n        loadChildren: () => import('./pages/supplier/supplier.module').then(m => m.SupplierModule)\n      },\n      {\n          path: 'login',\n          component: LoginComponent,\n      }\n    ],\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\nexports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthC, AuthI } from '../../models/auth.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { AESEncryptService } from '../../services/aesencrypt.service';\nimport { DataService } from '../../services/data.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { PermissionI } from 'src/app/models/permission.model';\n\ndeclare let alertify: any;\n\n@Component({\n  selector: 'app-auth-signin',\n  templateUrl: './auth-signin.component.html',\n  styleUrls: ['./auth-signin.component.css']\n})\nexport class AuthSigninComponent implements OnInit {\n\n  public authmodel: AuthI;\n  public permissionLst: PermissionI;\n  signinForm: FormGroup;\n  public spinerShow: boolean;\n\n  constructor(\n    private authservice: AuthService,\n    private userS: UserService,\n    private fb: FormBuilder,\n    private route: Router,\n    private cryptojs: AESEncryptService,\n    private dataService: DataService,\n  ) {\n    this.spinerShow = false;\n    this.authmodel = new AuthC();\n  }\n\n  ngOnInit() {\n    this.clearForm();\n  }\n\n  signinReq() {\n\n    this.spinerShow = true;\n\n    const pswdEncryp = this.cryptojs.encrypt(this.signinForm.value.password);\n\n    this.signinForm.value.password = pswdEncryp.substring(0, 50);\n\n    this.authservice.loginReq(this.signinForm.value).subscribe(\n      response => {\n        localStorage.setItem('token_access', response.token);\n        // Llama para guardar las variables en localstprage\n        this.dataService.DecodeToken();\n\n        this.spinerShow = false;\n        // Notificacion de nuevo login\n        this.dataService.loginChanged.emit(true);\n        this.route.navigate(['/dashboard/analytics']);\n      },\n      err => {\n        if (err.status === 401) {\n          alertify.warning('Credenciales de acceso inválidas', 'ERROR');\n        }\n\n        if (err.status === 0 || err.status === 500) {\n          alertify.error('No se puede comunicar con el servidor', 'ERROR');\n        }\n        console.error(err.error);\n        this.spinerShow = false;\n      }\n    );\n  }\n\n  clearForm() {\n    this.signinForm = this.fb.group({\n      username : ['', Validators.required],\n      password : ['', Validators.required]\n    });\n  }\n\n}\n","<p>auth-signin works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet name=\"primary\"></router-outlet>\n","<!-- [formGroup]=\"newProject\" -->\n<div fxLayout=\"row\" >\n    <div fxFlex.gt-sm=\"95%\" >\n            <mat-card>\n              <mat-table [dataSource]=\"datasourceProjectCategories\" matSort class=\"mat-elevation-z8\" style=\"vertical-align: middle;\" #tabla1>\n                <ng-container matColumnDef=\"select\">\n                  <th mat-header-cell *matHeaderCellDef>\n                      <div style=\"width: 100%; text-align: left; vertical-align: middle;\">\n                          ACTIVAR\n                  </div>\n                    </th>\n                    <div style=\"width: 50px;\">\n                    <td mat-cell *matCellDef=\"let element; let i = index\">\n                      <mat-checkbox color=\"warn\"\n                                  [checked]=\"element.activo\"\n                                  (click)=\"$event.stopPropagation()\"\n                                  (change)=\"ActivarDesactivar(element.activo, $event)\"\n                                  [(ngModel)]=\"element.activo\"\n                                  >\n                                  <!-- formControlName=\"activo\"  -->\n                                  <!--[checked]=\"selection.isSelected(element.proyecto_id)\"-->\n                                  <!--[(ngModel)]=\"element.activo\" -->\n                      </mat-checkbox>\n                    </td>\n                  </div>\n              </ng-container>\n\n              <!-- Position Column -->\n              <ng-container matColumnDef=\"codigo_proyectocategoria\" >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-column-20\"> <span class=\"order-th\">Número <mat-icon class=\"orage-icon\" aria-hidden=\"false\"></mat-icon></span> </th>\n                <td mat-cell *matCellDef=\"let element\" style=\"width: 500px;\"> {{element.codigo_proyectocategoria}} </td>\n              </ng-container>\n\n              <!-- Position Column -->\n              <ng-container matColumnDef=\"nombre_categoria\" >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-column-20\"> <span class=\"order-th\">Nombre <mat-icon class=\"orage-icon\" aria-hidden=\"false\"></mat-icon></span> </th>\n                <td mat-cell *matCellDef=\"let element\" style=\"width: 500px;\"> {{element.nombre_categoria}} </td>\n              </ng-container>\n\n              <!-- responsable Column -->\n              <ng-container matColumnDef=\"responsable\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Responable </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                  <mat-form-field>\n                    <mat-label>{{element.responsable}}</mat-label>\n                    <input [type]=\"element.responsable\" matInput [(ngModel)]=\"element.responsable\" (keyup)=\"checkEnterKey($event, 'responsable')\">\n                  </mat-form-field>\n                  <!-- <input type=\"text\" class=\"controltable100\" [(ngModel)]=\"element.responsable\" value=\"responsableEdicion\">  -->\n                </td>\n                <!-- formControlName=\"responsable\" -->\n              </ng-container>\n\n              <!-- presupuesto Column -->\n              <ng-container matColumnDef=\"presupuesto\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Presupuesto </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                  <mat-form-field>\n                    <mat-label>{{element.presupuesto | currency}}</mat-label>\n                    <input [type]=\"element.presupuesto\" matInput [(ngModel)]=\"element.presupuesto\" (keyup)=\"checkEnterKey($event, 'presupuesto')\" (blur)=\"onBlurMethod($event)\">\n                  </mat-form-field>\n                  <!-- <input type=\"number\" step=\"any\" class=\"controltable100\" formControlName=\"presupuesto\" value=\"{{element.presupuesto}}\" placeholder=\"{{element.presupuesto}}\">  -->\n                </td>\n                  <!--[(ngModel)]=\"element.presupuesto\" -->\n              </ng-container>\n\n              <!-- fecha incial Column -->\n              <ng-container matColumnDef=\"fecha_inicial\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha incial </th>\n                <td mat-cell *matCellDef=\"let element\"> <div><mat-form-field appearance=\"fill\">\n                  <mat-label>{{element.fecha_inicial | date: 'dd-MM-yyyy'}}</mat-label>\n                  <input matInput [matDatepicker]=\"picker\" (dateChange)=\"checkEnterKey($event, 'fecha')\" class=\"controltable100\" [(ngModel)]=\"element.fecha_inicial\" ><!-- formControlName=\"fecha_inicial\"\" -->\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                  <mat-datepicker [startAt]=\"element.fecha_inicial\" #picker></mat-datepicker>\n                </mat-form-field></div></td>\n              </ng-container>\n\n              <!-- almacen Column -->\n              <ng-container matColumnDef=\"almacen_id\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Almacen </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                  <div>\n                    <mat-select class=\"form-control\"  [(ngModel)]=\"element.almacen_id\" (selectionChange)=\"seleccionaAlmacen($event, 'almacen')\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\" [(ngModel)]=\"element.almacen\" formControlName=\"almacen_id\" -->\n                      <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n                      <mat-option value= \"1\">California</mat-option>\n                      <mat-option value= \"2\">Norte</mat-option>\n                      <mat-option value= \"3\">Centro</mat-option>\n                    </mat-select>\n                  </div>\n                </td>\n              </ng-container>\n\n              <!-- Email Column -->\n              <ng-container matColumnDef=\"actualizar\">\n                <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Actualizar </th>\n                <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"save(element, element.responsable, $event)\">Actualizar</button> </td>\n              </ng-container>\n              \n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n              </mat-table> \n            </mat-card>\n            <table>\n                <tr>\n                  <td style=\"width: 10px;\"></td>\n                  <td style=\"width: 300px;\">Presupuesto del proyecto</td>\n                  <td style=\"width: 300px;\"><p><b>{{presupuestoTotal | currency}}</b></p></td>\n                  <td style=\"width: 100px;\">Presupuesto restante</td>\n                  <td style=\"width: 200px;\"><p><b>{{presupuestoRestante | currency}}</b></p></td>\n                  <td style=\"width: 100px;\"></td>\n                  <td style=\"width: 100px;\"><button mat-raised-button color=\"warn\" (click)=\"salir()\">Cerrar</button></td>\n                  <td style=\"width: 10px;\"></td>\n                </tr>\n              </table>\n    </div>\n</div>","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {MatListModule} from '@angular/material/list';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatTab } from '@angular/material/tabs';\nimport { parse } from 'path';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n  projectInfo : any;\n  projectId : any;\n\n  almacen_id : any = '1';\n  fecha_inicial : any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  proyecto_id : any = 0;\n  responsableEdicion : any = '';\n  presupuestoEdicion : any = '';\n  activoEdicion : boolean = true;\n  almacenEdicion : any = '';\n  fechaEdicion : any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  presupuesto : any = 0;\n  activo : any = true;\n  presupuestoTotal : any;\n  presupuestoRestante : any;\n\n  displayedColumns: string[] = ['select','codigo_proyectocategoria', 'nombre_categoria', 'responsable', 'presupuesto', 'fecha_inicial', 'almacen_id', 'actualizar'];\n  datasourceProjectCategories : MatTableDataSource<projectCategoryModel>\n  // newProject: FormGroup;\n  \n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @ViewChild(MatTable) tabla1: MatTable<any>;\n\n  constructor(public dialogRef: MatDialogRef<projectCategoryModel>\n      , @Inject(MAT_DIALOG_DATA) public data,public snackBar: MatSnackBar\n      , private _projectCategoryservice : projectCategoryservice\n      , private formBuilder: FormBuilder\n      , private _snackBar : MatSnackBar) { \n        this.projectInfo = data.arrayData;\n        this.projectId = data.projectId;\n\n      //   this.newProject = this.formBuilder.group({\n      //     responsable: new FormControl(''),\n      //     presupuesto: new FormControl(''),\n      //     fecha_inicial: new FormControl('', Validators.required),\n      //     almacen_id: new FormControl(''),\n      //     activo: new FormControl('')\n      // });\n      }\n\n  ngOnInit(): void {\n    \n    let arrayPoryectoActual : any = [] \n    arrayPoryectoActual = this.projectInfo.filteredData.filter(e => e.proyecto_id == this.projectId);\n    this.presupuestoTotal = arrayPoryectoActual[0]['presupuesto_proyecto'];\n    this.presupuestoRestante = this.presupuestoTotal;\n\n    this.getproyectosCategorias();\n  }\n\n  getproyectosCategorias(){\n    // Proyectos categorias\n    this._projectCategoryservice.getProjectCateogryById(this.projectId).subscribe(\n      res=> {\n        // console.log('this.datasourceProjectCategories.filteredData[\"responsable\"]', this.datasourceProjectCategories.filteredData[\"responsable\"]);\n        console.log('Proyectos', res);\n        this.datasourceProjectCategories = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        this.datasourceProjectCategories.sort = this.sort;\n        // this.newProject.controls[\"responsable\"].setValue = this.datasourceProjectCategories.filteredData[\"responsable\"];\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n\n  }\n\n  ActivarDesactivar(element : any, event : Event){\n    this.activoEdicion = event[\"checked\"]\n    console.log('Actualiza registro de activar y desactivar', event[\"checked\"])\n  }\n\n  save(element : any, camporesponsable : any, event : Event){\n    let arraySaveData : any;\n    console.log('element', element);\n    console.log('ENTRADA', event);\n\n    arraySaveData = {proyectocategoria_id : element.proyectocategoria_id\n          , codigo_proyectocategoria : element.codigo_proyectocategoria\n          , presupuesto : (this.presupuestoEdicion != '') ? this.presupuestoEdicion : element.presupuesto //this.newProject.controls[\"presupuesto\"].value\n          , responsable : (this.responsableEdicion != '') ? this.responsableEdicion : element.responsable //this.newProject.controls[\"responsable\"].value\n          , fecha_inicial : (this.fechaEdicion != '') ? this.fechaEdicion : moment(element.fecha_inicial, 'YYYY-MM-DD').format('YYYY-MM-DD')\n          , almacen_id : (this.almacenEdicion != '') ? this.almacenEdicion : element.almacen_id.toString()\n          , activo : this.activoEdicion // (this.activoEdicion != false) ? this.activoEdicion : element.activo\n        }\n\n          console.log('datos a actualizar', arraySaveData)\n\n          this.insertProjectCategoryDet(arraySaveData);\n\n          // Limpia variables\n          this.responsableEdicion = '';\n          this.presupuestoEdicion = '';\n          this.fechaEdicion = '';\n\n  }\n\n  checkEnterKey(event: Event, campo : any){\n\n    switch (campo){\n      case 'responsable' : this.responsableEdicion = (event.target as HTMLInputElement).value;\n        break;\n      case 'presupuesto' : this.presupuestoEdicion = (event.target as HTMLInputElement).value;\n        break;\n      case 'fecha' : this.fechaEdicion = moment((event.target as HTMLInputElement).value, 'YYYY-MM-DD').format('YYYY-MM-DD');\n        break;\n      default : this.responsableEdicion = '';\n        break;\n    }\n    console.log('filtro', this.responsableEdicion);\n  }\n\n  onBlurMethod(event : Event){\n    let x : any = (event.target as HTMLInputElement).value;\n    let CalculaPresupuesto : any = 0;\n    let presupuestoCategoria : any = 0;\n\n    this.tabla1[\"_data\"].forEach(element => {\n      presupuestoCategoria = parseInt(element.presupuesto);\n      CalculaPresupuesto = CalculaPresupuesto + presupuestoCategoria;\n\n    });\n    this.presupuestoRestante = this.presupuestoTotal - CalculaPresupuesto;\n\n  }\n\n  insertProjectCategoryDet(arrayToDb : any){\n    // Inserta Proyecto Categoria\n    this._projectCategoryservice.updateProjectCatgory(arrayToDb).subscribe(\n      res=> {\n        console.log('ACTUALIZA PROYECO CATEGORIA', arrayToDb);\n        this.openSnackBar('El registro se actualizó con éxito', '');\n      },\n      error => console.log(\"error al insertar proyectos categorias\",error)\n    )\n    \n  }\n\n  seleccionaAlmacen(elementAlmacen : any){\n\n    this.almacenEdicion = elementAlmacen.value;\n    console.log('almacen', this.almacenEdicion);\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n  \n  salir(){\n    this.dialogRef.close();\n  }\n\n}\n","<div fxLayout=\"row\">\n    <h4>Catálogo de clientes</h4>\n  </div>\n  <br>\n  <div mat-dialog-content-example [formGroup]=\"newProject\">\n    <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div><br>Nombre</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n              <input [type]=\"nombre\" matInput class=\"form-control form-control-line control\" formControlName=\"nombre\" [(ngModel)]=\"nombre\" disabled >\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('nombre').valid && newProject.get('nombre').touched\" class=\"help-block\" style=\"color: red;\"> El nombre es requerido</span>\n            </div>\n        </div>\n        <div fxFlex.gt-sm=\"10%\" >\n          <div></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n          <div><br>Dirección</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"direccion\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"direccion\" [(ngModel)]=\"direccion\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('direccion').valid && newProject.get('direccion').touched\" class=\"help-block\" style=\"color: red;\"> La dirección es requerida</span>\n          </div>\n        </div>\n      </div>\n\n      <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div><br>Ciudad</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n              <input [type]=\"ciudad\" matInput class=\"form-control form-control-line control\" formControlName=\"ciudad\" [(ngModel)]=\"ciudad\" disabled >\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('ciudad').valid && newProject.get('ciudad').touched\" class=\"help-block\" style=\"color: red;\"> La ciudad es requerida</span>\n            </div>\n        </div>\n        <div fxFlex.gt-sm=\"10%\" >\n          <div></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n          <div><br>Estado</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"estado\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"estado\" [(ngModel)]=\"estado\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('estado').valid && newProject.get('estado').touched\" class=\"help-block\" style=\"color: red;\"> El Estado es requerido</span>\n          </div>\n        </div>\n      </div>\n\n      <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div><br>Responsable</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n              <input [type]=\"responsable\" matInput class=\"form-control form-control-line control\" formControlName=\"responsable\" [(ngModel)]=\"responsable\" >\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('responsable').valid && newProject.get('responsable').touched\" class=\"help-block\" style=\"color: red;\"> El responsable es requerido</span>\n            </div>\n        </div>\n        <div fxFlex.gt-sm=\"10%\" >\n          <div></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n          <div><br>Teléfono</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"telefono\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"telefono\" [(ngModel)]=\"telefono\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('telefono').valid && newProject.get('telefono').touched\" class=\"help-block\" style=\"color: red;\"> El telefono es requerido</span>\n          </div>\n        </div>\n      </div>\n\n      <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div><br>RFC</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n                <input [type]=\"rfc\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"rfc\" [(ngModel)]=\"rfc\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('rfc').valid && newProject.get('rfc').touched\" class=\"help-block\" style=\"color: red;\"> El RFC es requerido</span>\n            </div>\n        </div>\n        <div fxFlex.gt-sm=\"10%\" >\n          <div></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n          <div><br>RFC</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n          <div>\n\n          </div>\n        </div>\n      </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { customerModel } from 'src/app/models/customer.model';\nimport { customerservice } from '../../services/customer.service';\n\n@Component({\n  selector: 'app-customer-detail',\n  templateUrl: './customer-detail.component.html',\n  styleUrls: ['./customer-detail.component.css']\n})\nexport class CustomerDetailComponent implements OnInit {\n\n// =========================\n// DECLARACIONES\n// =========================\nnombre : string;\ndireccion : string;\nciudad : string;\nrfc : string;\nresponsable : string;\ntelefono : string;\nestado : string;\n\npublic newProject: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<customerModel>\n    , private _customerservice : customerservice\n    , private formBuilder: FormBuilder\n\n  ) {\n\n    this.newProject = this.formBuilder.group({\n      nombre :  new FormControl('', [Validators.required]),\n      direccion: new FormControl('', [Validators.required]),\n      ciudad: new FormControl('', [Validators.required]),\n      rfc: new FormControl('', [Validators.required]),\n      responsable: new FormControl(''),\n      telefono: new FormControl('', [Validators.required]),\n      estado: new FormControl('', [Validators.required]),\n    });\n   }\n\n// =========================\n// PROCEDIMIENTOS\n// =========================\n\n  ngOnInit(): void {\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n  save(form, event){\n\n    let arrayToDb : any;\n\n    arrayToDb = ({ \n        id : 0\n        , nombre : form.controls[\"nombre\"].value\n        , direccion : form.controls[\"direccion\"].value\n        , rfc : form.controls[\"rfc\"].value \n        , ciudad : form.controls[\"ciudad\"].value\n        , estado : form.controls[\"estado\"].value\n        , contacto : form.controls[\"responsable\"].value\n        , vigencia : '2050-01-01'\n        , estatus : 1\n      });\n\n    this.insertCustommer(arrayToDb);\n  }\n\n// =========================\n// UTILERIAS\n// =========================\n\n\n// =========================\n// SERVICIOS\n// =========================\n\ninsertCustommer(arrayToDb : any){\n  \n  console.log('aqui esta log', arrayToDb)\n  // Inserta clientes\n  this._customerservice.insertcustomer(arrayToDb).subscribe(\n    res=> {\n      console.log('CLIENTES', res);\n    },\n    error => console.log(\"error al insertar clientes\",error)\n  )\n\n}\n\nupdateCustommer(arrayToDb : any){\n\n// Actualiza clientes\nthis._customerservice.updatecustomer(arrayToDb).subscribe(\n  res=> {\n    console.log('CLIENTES', res);\n  },\n  error => console.log(\"error al actualizar proyectos categorias\",error)\n)\n\n}\n\n\n}\n","<div fxLayout=\"row\">\n    <h4>Nueva Orden de Compra</h4>\n  </div>\n  <br>\n  <div mat-dialog-content-example [formGroup]=\"newProject\">\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>Cotización</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div><br>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"cotizacion_id\" (selectionChange)=\"cotizacionSelected(newProject, $event)\" > <!-- [(ngModel)]=\"cotizacion_id\"-->\n              <mat-option *ngFor=\"let op of datasourceCotizaciones\" [value]=\"op.cotizacion_id\" >\n                {{op.codigo}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('cotizacion_id').valid && newProject.get('cotizacion_id').touched\" class=\"help-block\" style=\"color: red;\"> seleccione una cotización</span>\n        </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><br>Detalle</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n            <div><br>\n              <mat-form-field>\n                <input [type]=\"codigo_requisicioninterna\" matInput class=\"form-control form-control-line control\" formControlName=\"codigo_requisicioninterna\"> <!--[(ngModel)]=\"codigo_requisicioninterna\"-->\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('codigo_requisicioninterna').valid && newProject.get('codigo_requisicioninterna').touched\" class=\"help-block\" style=\"color: red;\"> seleccione una requisición</span>\n          </div>\n      </div>\n    </div>\n  \n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>Orden de compra</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"odc_Numero\" matInput class=\"form-control form-control-line control\" formControlName=\"odc_Numero\"> <!-- [(ngModel)]=\"odc_Numero\"-->\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('odc_Numero').valid && newProject.get('odc_Numero').touched\" class=\"help-block\" style=\"color: red;\"> seleccione un número de órden de compra</span>\n          </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><br>Proveedor</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"proveedor_id\" ><!--[(ngModel)]=\"proveedor_id\"-->\n                <mat-option *ngFor=\"let op of datasourcesupplier\" [value]=\"op.proveedorid\" (selectionChange)=\"selectsupplier($event)\">\n                  {{op.nombre}}\n                </mat-option>\n              </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('proveedor_id').valid && newProject.get('proveedor_id').touched\" class=\"help-block\" style=\"color: red;\"> seleccione un proveedor</span>\n        </div>\n      </div>\n    </div>\n    \n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>IVA</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"iva\" (selectionChange)=\"ivaSelected(newProject, $event)\" > <!--[(ngModel)]=\"iva\"-->\n              <mat-option value= \"16\" selected=\"selected\">16%</mat-option>\n              <mat-option value= \"10\">10%</mat-option>\n              <mat-option value= \"0\">0</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('iva').valid && newProject.get('iva').touched\" class=\"help-block\" style=\"color: red;\"> seleccione un iva</span>\n        </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <button mat-raised-button color=\"accent\" (click)=\"addSupplier(newProject, $event)\"> + </button>\n              <button mat-raised-button color=\"accent\" (click)=\"reloadSupplier(newProject, $event)\"> o </button>\n          </div>\n      </div>\n    </div>\n\n\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>Moneda</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"moneda\" > <!--[(ngModel)]=\"moneda\"-->\n              <mat-option value= \"MXN\" selected=\"selected\">MXN</mat-option>\n              <mat-option value= \"USD\">USD</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('moneda').valid && newProject.get('moneda').touched\" class=\"help-block\" style=\"color: red;\"> seleccione una moneda</span>\n        </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n            <div></div>\n      </div>\n    </div>\n\n\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n        Subtotal: {{subtotal | currency}}\n      </div>\n      <div fxFlex.gt-sm=\"20%\">\n        IVA: {{ivaSubtotal | currency}}\n      </div>\n      <div fxFlex.gt-sm=\"20%\">\n          Total: {{total | currency}}\n      </div>\n  </div>\n\n    <br>\n    <!--Tabla de captura-->\n    <div fxLayout=\"row\" class=\"division\">\n        \n    </div>\n\n  </div>\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div *ngIf=\"ordendecompra_id\"><button mat-raised-button color=\"accent\" (click)=\"downloadAsPDF()\">PDF</button></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div *ngIf=\"ordendecompra_id\"><button mat-raised-button color=\"accent\" (click)=\"Authoriza(newProject, $event)\">Autorizar</button></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n        <!-- <div><button mat-raised-button color=\"warn\" (click)=\"htmlToPDF()($event)\">ToPDF</button></div> -->\n      </div>\n    </div>\n     <!-- INICIA CUERPO DE LA PÁGINA-->\n     <div class=\"col-12 col-md-12 p-0\">\n      <div class=\"card\">\n        <div class=\"card-body card-body-table\" id=\"AllTable\" #AllTable>\n          <mat-table [dataSource]=\"datasourceCotizacionesDetalle\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\" #tabla1>\n\n            <ng-container matColumnDef=\"select\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <div style=\"width: 100%; text-align: left; vertical-align: middle;\">\n                        ACTIVAR\n                </div>\n                  </th>\n                  <div style=\"width: 50px;\">\n                  <td mat-cell *matCellDef=\"let element; let i = index\">\n                    <mat-checkbox color=\"warn\"\n                                [checked]=\"element.activo\"\n                                (click)=\"$event.stopPropagation()\"\n                                (change)=\"ActivarDesactivar(element.activo, $event)\"\n                                [(ngModel)]=\"element.activo\"\n                                >\n                    </mat-checkbox>\n                  </td>\n                </div>\n            </ng-container>\n              \n            <!-- ID Column -->\n            <ng-container matColumnDef=\"SKU\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>SKU</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.SKU}} </td>\n            </ng-container>\n\n            <!-- ID Column -->\n            <ng-container matColumnDef=\"cantidad\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> <span>Cantidad</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.cantidad}} </td>\n            </ng-container>\n            \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"unidad_de_medida\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Unidad de Medida </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.um}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"descripcion\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Descripción </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.descripcion}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"medida\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Medida </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.medida}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"color\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Color </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.color}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"otras_Especificaciones\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Otras especificaciones </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.otras_especificaciones}} </td>\n            </ng-container>\n\n            <!-- cantidad_Ordenar Column -->\n            <ng-container matColumnDef=\"cantidad_Ordenar\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Cantidad seleccionada </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                    <input type='cantidad_Ordenar' [(ngModel)]=\"element.cantidad\" (keyup)=\"checkEnterKey($event, 'presupuesto')\" (blur)=\"onBlurMethod($event)\">\n                </td>\n              </ng-container>\n\n            <!-- precio column -->\n            <ng-container matColumnDef=\"precio_unitario\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Precio Unitario</th>\n              <td mat-cell *matCellDef=\"let element\"> \n                  <input type='precio_unitario' [(ngModel)]=\"element.precio_unitario\" (keyup)=\"checkEnterKey($event, 'precio_unitario')\" (blur)=\"onBlurMethod($event)\"> \n              </td>\n            </ng-container>\n\n            <!-- descuento column -->\n            <ng-container matColumnDef=\"descuento\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Descuento </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                  <input type='descuento' [(ngModel)]=\"element.descuento\" (keyup)=\"checkEnterKey($event, 'descuento')\" (blur)=\"onBlurMethod($event)\">\n              </td>\n            </ng-container>\n            \n            <!-- descuento column -->\n            <!-- <ng-container matColumnDef=\"importe\" hidden>\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Importe </th>\n              <td mat-cell *matCellDef=\"let element\"> {{importe | currency}}\n              </td>\n            </ng-container> -->\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </mat-table>\n    \n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator> -->\n      </div>\n\n      <!-- REPORTE DE ORDEN DE COMPRA -->\n\n      <div class=\"container\" hidden>\n        <div id=\"pdfTable\" #pdfTable>\n          <!-- <h4>COMERCIAL CONTINENTAL SA DE CV</h4> -->\n\n          <table width=\"100%\">\n            <tr>\n              <td width=\"20%\">LOGO</td>\n              <td width=\"60%\">COMERCIAL SA DE CV</td>\n              <td width=\"20%\">Orden de compra</td>\n            </tr>\n          </table>\n\n          <table  id=\"contentToConvert\" width=\"100%\" border=\"0\">\n            <tr>\n              <td style=\"width: 300px;\">LOGO</td><!--LOGO-->\n              <td style=\"width: 1000px;\">COMERCIAL DE MEXICO</td><!--LOGO-->\n              <td style=\"width: 300px;\">ORDEN DE COMPRA</td><!--ORDEN DE COMPRA-->\n            </tr>\n            <tr>\n              <td style=\"width: 300px;\">LOGO</td><!--LOGO-->\n              <td style=\"width: 1000px;\">COMERCIAL DE MEXICO</td><!--LOGO-->\n              <td style=\"width: 300px;\">ORDEN DE COMPRA</td><!--ORDEN DE COMPRA-->\n            </tr>\n            <tr>\n              <td style=\"width: 300px;\">LOGO</td><!--LOGO-->\n              <td style=\"width: 1000px;\">COMERCIAL DE MEXICO</td><!--LOGO-->\n              <td style=\"width: 300px;\">ORDEN DE COMPRA</td><!--ORDEN DE COMPRA-->\n            </tr>\n          </table>\n\n\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th>Firstname</th>\n                <th>Lastname</th>\n                <th>Website</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Hardik</td>\n                <td>Savani</td>\n                <td>itsolutionstuff.com</td>\n              </tr>\n              <tr>\n                <td>Vimal</td>\n                <td>Kashiyani</td>\n                <td>hdtuto.com</td>\n              </tr>\n              <tr>\n                <td>Harshad</td>\n                <td>Pathak</td>\n                <td>nicesnippets.com</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  ","import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport * as XLSX from 'xlsx';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { quotationservice  } from 'src/app/services/quotation/quotation.service';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { dateInputsHaveChanged } from '@angular/material/datepicker/datepicker-input-base';\nimport { timeStamp } from 'console';\nimport { quotationDetailModel } from 'src/app/models/quotation-detail.model';\nimport { purchaseOrderservice } from 'src/app/services/PurchaseOrder.service';\nimport { supplyservice } from '../../services/supplier.service';\nimport { SupplierDetailComponent } from '../supplier-detail/supplier-detail.component';\nimport { I } from '@angular/cdk/keycodes';\nimport { ThrowStmt } from '@angular/compiler';\n\nimport jsPDF from 'jspdf';\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\npdfMake.vfs = pdfFonts.pdfMake.vfs;\nimport htmlToPdfmake from 'html-to-pdfmake';\n\n\n@Component({\n  selector: 'app-po-detail',\n  templateUrl: './po-detail.component.html',\n  styleUrls: ['./po-detail.component.css']\n})\nexport class PoDetailComponent implements OnInit {\n  title = 'htmltopdf';\n  \n  @ViewChild('pdfTable') pdfTable: ElementRef;\n  // @ViewChild('AllTable') pdfTable: ElementRef;\n  // ===================\n  // DECLARACIONES\n  // ===================\n\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @ViewChild(MatTable) tabla1: MatTable<any>;\n  \n  cotizacion_id : any = '';\n  codigo_requisicioninterna : any = '';\n  odc_Numero : any = '';\n  proveedor_id : any = '';\n  activoEdicion : boolean = true;\n  displayedColumns = ['select', 'SKU', 'cantidad', 'unidad_de_medida', 'descripcion', 'medida', 'color', 'otras_Especificaciones', 'cantidad_Ordenar', 'precio_unitario', 'descuento']; // , 'importe'\n\n  projectInfo : any;\n  cotizacionId : any = 0;\n  newProject: FormGroup;\n  datasourceCotizaciones : any;\n  datasourceCotizacionesDetalle : any;\n  datasourcePoveedores : any[] = [];\n  datasourcesupplier : any;\n  datasourcePo_Detail : any;\n  podatasource : MatTableDataSource<any>;\n  po_count : number = 0;\n  ordendecompra_id : number;\n  iva:number = 16;\n  subtotal:number = 0;\n  ivaSubtotal:number = 0;\n  total:number = 0;\n  precio_unitario : number = 0;\n  importe : number = 0;\n\n  constructor(\n    public dialogRef: MatDialogRef<quotationDetailModel>\n    , private _quotationservice : quotationservice\n    , private _supplyservice : supplyservice\n    , @Inject(MAT_DIALOG_DATA) public data\n    , public snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n    , private _snackBar : MatSnackBar\n    , private _purchaseOrderservice : purchaseOrderservice\n    , public dialog: MatDialog\n  ) { \n    this.projectInfo = data.arrayData;\n\n    this.newProject = this.formBuilder.group({\n      cotizacion_id : new FormControl('', [Validators.required]),\n      codigo_requisicioninterna: new FormControl('', [Validators.required]),\n      odc_Numero: new FormControl('', [Validators.required]),\n      proveedor_id: new FormControl('', [Validators.required]),\n      iva: new FormControl('', [Validators.required]),\n      subtotal: new FormControl('', [Validators.required]),\n      ivaSubtotal: new FormControl('', [Validators.required]),\n      total: new FormControl('', [Validators.required]),\n      precio_unitario : new FormControl('', [Validators.required]),\n      moneda : new FormControl('', [Validators.required]),\n  });\n\n  }\n\n  // =====================\n  // PROCEDIMIENTOS\n  // =====================\n\n  ngOnInit(): void {\n    this.getsupplierAll();\n    this.getProveedores();\n    this.getCotizacionesAll();\n\n    if(this.projectInfo != undefined){\n      console.log('project info', this.projectInfo);\n      console.log('podata', this.projectInfo.iva.toString());\n      this.ordendecompra_id = this.projectInfo.proveedor_nombre\n      this.subtotal = this.projectInfo.sub_total;\n      this.ivaSubtotal = this.projectInfo.iva_moneda;\n      this.total = this.projectInfo.total;\n\n      // this.getcotizacionesDetail(this.projectInfo.cotizacion_id);\n      this.getPO_Detail(this.projectInfo.ordendecompra_id);\n\n      this.newProject.patchValue({\n        cotizacion_id : this.projectInfo.cotizacion_id,\n        codigo_requisicioninterna : this.projectInfo.codigo_requisicioninterna,\n        odc_Numero : this.projectInfo.ordendecompra_codigo,\n        proveedor_id : this.projectInfo.proveedor_id,\n        iva : this.projectInfo.iva.toString(),\n        moneda : this.projectInfo.tipo_moneda.toString(),\n        // subtotal : this.projectInfo.sub_total,\n        // ivaSubtotal : '10',\n        // total : '10010',\n        // precio_unitario : '100'\n      })\n      \n    }\n  }\n\n  cotizacionSelected(form, event){\n    console.log('pagina', form.controls['cotizacion_id'].value);\n    this.getcotizacionesDetail(form.controls['cotizacion_id'].value);\n\n  }\n\n  ivaSelected(form, event){\n    console.log('iva', form.controls['iva'].value);\n    this.onBlurMethod();\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n  validaCamposRequeridos() : boolean{\n    let valido : boolean = true;\n    valido = (this.newProject.get('cotizacion_id').status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"codigo_requisicioninterna\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"odc_Numero\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"proveedor_id\").status == 'INVALID') ? false : valido;\n\n    return valido;\n  }\n\n  save(form, event){\n\n    if(this.validaCamposRequeridos() == false){\n      this.openSnackBar('debe capturar los campos requeridos', 'success');\n      return;\n    }\n\n    this.insertPOHdr(this.tabla1[\"_data\"]);\n  }\n\n  Authoriza(form, event){\n      console.log('autoriza po', form)\n  }\n\n  ActivarDesactivar(element : any, event : Event){\n    this.activoEdicion = event[\"checked\"]\n    console.log('Actualiza registro de activar y desactivar', event[\"checked\"])\n    this.onBlurMethod(); \n  }\n\n  checkEnterKey(){\n\n  }\n\n  addSupplier(form, event){\n    // Catálogo de clientes\n    const dialogConfig = new MatDialogConfig();\n  \n    dialogConfig.width = '1400px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n  \n    const dialogRef = this.dialog.open(SupplierDetailComponent, dialogConfig);\n  \n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  reloadSupplier(form, event){\n    // Carga clientes\n    this.getsupplierAll();\n  }\n\n  selectsupplier(event){\n    this.proveedor_id = event.value;\n  }\n\n  onBlurMethod(){\n    if (this.tabla1[\"_data\"][0][\"activo\"] != undefined && this.tabla1[\"_data\"][0][\"precio_unitario\"] != undefined){ // && this.tabla1[\"_data\"][0][\"activo\"] == true \n      \n      this.importe = 100\n      this.subtotal = 0;\n      this.ivaSubtotal = 0;\n      this.total = 0;\n\n      this.tabla1[\"_data\"].forEach(element => {\n      \n        if (element.activo != undefined && element.activo == true && element.precio_unitario != undefined){\n          this.subtotal = this.subtotal + element.cantidad * (element.precio_unitario - element.descuento);\n        }\n            \n      });\n\n      this.ivaSubtotal = this.ivaSubtotal + (this.subtotal * (this.iva/100));\n      this.total = this.subtotal + this.ivaSubtotal;\n    }\n  }\n\n  // =====================\n  // UTILERIAS\n  // =====================\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  public downloadAsPDF() {\n    const doc = new jsPDF();\n   \n    const pdfTable = this.pdfTable.nativeElement;\n   \n    var html = htmlToPdfmake(pdfTable.innerHTML);\n    // var html = htmlToPdfmake(AllTable.innerHTML);\n     \n    const documentDefinition = { content: html };\n    pdfMake.createPdf(documentDefinition).open(); \n     \n  }\n\n  // =====================\n  // CONSILTA DE SERVICIOS\n  // =====================\n\n  getProveedores(){\n\n    let arrayProvider : any [];\n\n    arrayProvider = [];\n    arrayProvider.push({proveedor_id : 1, proveedor_nombre : 'CABLES MONTERREY SA DE CV'},\n                    {proveedor_id : 2, proveedor_nombre : 'VENTA DE CABLEADO SA'}\n                    )\n\n    this.datasourcePoveedores = arrayProvider;\n\n    console.log(this.datasourcePoveedores);\n  }\n\n  getPO_Hdr(codigo_cotizacion : string){\n    // ordenes de compra Todas\n    let arrayPO_Hdr : any[];\n    this._purchaseOrderservice.getPOAll().subscribe(\n      res=> {\n        console.log('PurchaseOrder', res);\n        this.podatasource = new MatTableDataSource(res);\n\n        arrayPO_Hdr = res.filter(e => e.codigo_cotizacion == codigo_cotizacion)\n        this.po_count = arrayPO_Hdr.length + 1;\n        this.odc_Numero = codigo_cotizacion + '-' + this.po_count.toString();\n        \n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n\n  getCotizacionesAll(){\n    this._quotationservice.getQuotationAll().subscribe(\n      res=> {\n        this.datasourceCotizaciones = res;\n        console.log('COTIZACIONES TODAS', res);\n  \n      },\n      error => console.log(\"error consulta proyectos\",error)\n    )\n  }\n\n  getcotizacionesDetail(cotizacion_id : any){\n    this._quotationservice.getQuotationDetail(cotizacion_id).subscribe(\n      res=> {\n        this.datasourceCotizacionesDetalle = res;\n        console.log('COTIZACIONES TODAS', res);\n\n        this.getPO_Hdr(res[0][\"codigo_cotizacion\"]);\n  \n      },\n      error => console.log(\"error consulta proyectos\",error)\n    )\n  }\n\n  insertPOHdr(table : any){\n    \n    let arrayTodb : any;\n    let arrayDetail : any[] = [];\n    let conteo : number = 0;\n\n    table.forEach(element => {\n\n      //Hdr\n      if(conteo == 0){\n        arrayTodb = {codigo : this.odc_Numero\n                  , cotizacion_id : element.cotizacion_id\n                  , proveedor_id : this.newProject.controls[\"proveedor_id\"].value // this.proveedor_id\n                  , fecha : moment(new Date, 'YYYY-M-DD')\n                  , iva : this.iva\n                  , iva_moneda : this.ivaSubtotal\n                  , tipo_moneda : 'mxp'\n                  , sub_total : this.subtotal\n                  , total : this.total\n                }\n      }\n\n      //Detalle\n      if(element.activo == true)\n      {\n        console.log('tabla', element.precio_unitario)\n        console.log('pu', element.precio_unitario)\n\n        arrayDetail.push( {ordendecompradetalle_id : 0\n                            , ordendecompra_id : this.ordendecompra_id\n                            , cotizaciondetalle_id : element.cotizaciondetalle_id\n                            , sku : element.sku\n                            , medida : element.medida\n                            , color : element.color\n                            , otras_especificaciones : element.otras_especificaciones\n                            , cantidad : element.cantidad\n                            , unidad_medida : element.unidad_medida\n                            , costo : element.costo\n                            , precio_unitario : element.precio_unitario\n                            , importe_total : element.cantidad * (element.precio_unitario - element.descuento)\n                            , descuento : element.descuento\n                            , descripcion : element.descripcion });\n      }\n      conteo++;\n    });\n\n    console.log('ARRAY tO db', arrayTodb);\n\n    this._purchaseOrderservice.insertPO_Hdr(arrayTodb).subscribe(\n      res=> {\n        console.log('Se inserto con éxito', res);\n  \n        // INSERTA REQUISICIONES DET\n        this.insertPODet(res, arrayDetail);\n      },\n      error => console.log(\"error alta de proyectos\",error)\n    )\n  }\n\n  insertPODet(po_id : any, arrayDetail : any){\n\n    let arrayTodbDetail : any;\n\n    console.log('detalledet_para insertar', arrayDetail);\n    console.log('po_id', po_id);\n\n    arrayDetail.forEach(element => {\n\n      arrayTodbDetail = {ordendecompradetalle_id : 0\n                        , ordendecompra_id : po_id\n                        , cotizaciondetalle_id : element.cotizaciondetalle_id\n                        , sku : element.sku\n                        , medida : element.medida\n                        , color : element.color\n                        , otras_especificaciones : element.otras_especificaciones\n                        , cantidad : element.cantidad\n                        , unidad_medida : element.unidad_medida\n                        , costo : element.costo\n                        , precio_unitario : element.precio_unitario \n                        , importe_total : element.cantidad * (element.precio_unitario - element.descuento)\n                        , descuento : element.descuento\n                        , descripcion : element.descripcion }\n    \n                        console.log('detalle', arrayTodbDetail);\n\n    this._purchaseOrderservice.insertPODetail(arrayTodbDetail).subscribe(\n      res=> {\n        console.log('Se inserto con éxito', res);\n  \n      },\n      error => console.log(\"error alta de proyectos\",error)\n    )\n    });\n  }\n\n  getsupplierAll(){\n    // Selecciona todos los proveedores\n    this._supplyservice.getsupplyAll().subscribe(\n      res=> {\n        this.datasourcesupplier = res;\n        console.log('PROVEEDORES', this.datasourcesupplier);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n  getPO_Detail(po_id : any){\n    // Selecciona ordenes de compra\n    this._purchaseOrderservice.getPODetail(po_id).subscribe(\n      res=> {\n        this.datasourceCotizacionesDetalle = res;\n        console.log('ORDENES DE COMPRA DET', this.datasourceCotizacionesDetalle);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n}\n"," <div fxLayout=\"row\">\n  <h4>Nuevo Proyecto</h4>\n</div>\n<br>\n<div mat-dialog-content-example [formGroup]=\"newProject\">\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Código</div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n        <div>\n          <mat-form-field>\n          <!-- <input type=\"text\" class=\"form-control form-control-line control\" formControlName=\"codigo_proyecto\" [(ngModel)]=\"codigo_proyecto\" disabled > -->\n          <input [type]=\"codigo_proyecto\" matInput class=\"form-control form-control-line control\" formControlName=\"codigo_proyecto\" [(ngModel)]=\"codigo_proyecto\" disabled >\n        </mat-form-field>\n        <span *ngIf=\"!newProject.get('codigo_proyecto').valid && newProject.get('codigo_proyecto').touched\" class=\"help-block\" style=\"color: red;\"> Capture un código</span>\n        </div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Nombre</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div>\n        <mat-form-field>\n          <!--[(ngModel)]=\"nombretxt\" -->\n          <!-- <input type=\"text\" class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"nombre_proyecto\" [(ngModel)]=\"nombre_proyecto\"> -->\n          <input [type]=\"nombre_proyecto\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"nombre_proyecto\" [(ngModel)]=\"nombre_proyecto\">\n        </mat-form-field>\n        <span *ngIf=\"!newProject.get('nombre_proyecto').valid && newProject.get('nombre_proyecto').touched\" class=\"help-block\" style=\"color: red;\"> Debe capturar un nombre</span>\n      </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Cliente</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"cliente\" [(ngModel)]=\"cliente\" (selectionChange)=\"selectcustommer($event)\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\"-->\n              <mat-option *ngFor=\"let op of datasourceCustomers\" [value]=\"op.clienteid\">\n                {{op.nombre}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('cliente').valid && newProject.get('cliente').touched\" class=\"help-block\" style=\"color: red;\"> Seleccione un cliente</span>\n        </div>\n        <button mat-raised-button color=\"accent\" (click)=\"addClient(newProject, $event)\"> + </button>\n        <button mat-raised-button color=\"accent\" (click)=\"reloadClient(newProject, $event)\"> o </button>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Presupuesto</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div>\n        <mat-form-field>\n          <input [type]=\"presupuesto_proyecto\" matInput class=\"form-control form-control-line control\" formControlName=\"presupuesto_proyecto\" [(ngModel)]=\"presupuesto_proyecto\" step=\"any\" (keyup)=\"_keyUp($event)\" > <!--required=\"required\" min=\"0\" max=\"999999999\"  pattern=\"^\\$\\d{1,3}(,\\d{3})*(\\.\\d+)?$\"-->\n        </mat-form-field>\n        <span *ngIf=\"!newProject.get('presupuesto_proyecto').valid && newProject.get('presupuesto_proyecto').touched\" class=\"help-block\" style=\"color: red;\"> capture  un presupuesto</span>\n      </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Fecha Inicial</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div><mat-form-field appearance=\"fill\">\n          <mat-label>Choose a date</mat-label>\n          <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha_inicial_proyecto\" (dateChange)=\"fechaInicial($event)\" [(ngModel)]=\"fecha_inicial_proyecto\" class=\"control\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n        <span *ngIf=\"!newProject.get('fecha_inicial_proyecto').valid && newProject.get('fecha_inicial_proyecto').touched\" class=\"help-block\" style=\"color: red;\"> Seleccione una fecha inicial</span>\n      </div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Fecha Final</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div><mat-form-field appearance=\"fill\">\n        <mat-label>Choose a date</mat-label>\n        <input matInput [matDatepicker]=\"pickerf\" formControlName=\"fecha_final_proyecto\" [(ngModel)]=\"fecha_final_proyecto\" class=\"control\">\n        <mat-datepicker-toggle matSuffix [for]=\"pickerf\"></mat-datepicker-toggle>\n        <mat-datepicker #pickerf></mat-datepicker>\n      </mat-form-field>\n      <span *ngIf=\"!newProject.get('fecha_final_proyecto').valid && newProject.get('fecha_final_proyecto').touched\" class=\"help-block\" style=\"color: red;\"> Seleccione una fecha final</span>\n    </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Responsable</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\">\n        <div>\n          <mat-form-field>\n            <input [type]=\"responsable_proyecto\" matInput class=\"form-control form-control-line control\" placeholder=\"Responsable\" formControlName=\"responsable_proyecto\" [(ngModel)]=\"responsable_proyecto\">\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('responsable_proyecto').valid && newProject.get('responsable_proyecto').touched\" class=\"help-block\" style=\"color: red;\"> Capture un responsable</span>\n        </div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Centro de costos</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\">\n      <div>\n        <mat-form-field>\n          <input [type]=\"centro_de_costo_proyecto\" matInput class=\"form-control form-control-line control\" placeholder=\"centroDeCostos\" formControlName=\"centroDeCostos\" [(ngModel)]=\"centro_de_costo_proyecto\">\n        </mat-form-field>\n        <span *ngIf=\"!newProject.get('centroDeCostos').valid && newProject.get('centroDeCostos').touched\" class=\"help-block\" style=\"color: red;\"> Capture un centro de costos</span>\n      </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Almacén</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control\"  formControlName=\"almacen\" [(ngModel)]=\"almacen\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\"-->\n              <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n              <mat-option value= \"1\">California</mat-option>\n              <mat-option value= \"2\">Norte</mat-option>\n              <mat-option value= \"3\">Centro</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('almacen').valid && newProject.get('almacen').touched\" class=\"help-block\" style=\"color: red;\"> Asigne un almacén</span>\n        </div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n  </div>\n</div>\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n    </div>\n  </div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport { from } from 'rxjs';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryModel } from '../../../models/category.model';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { ProjectCaptureComponent } from 'src/app/pages/projects/project-capture/project-capture.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { coerceStringArray } from '@angular/cdk/coercion';\nimport { CustomerDetailComponent } from '../../customer-detail/customer-detail.component';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { customerservice } from '../../../services/customer.service';\nimport { Console } from 'console';\n\n@Component({\n  selector: 'app-project-capture-detail',\n  templateUrl: './project-capture-detail.component.html',\n  styleUrls: ['./project-capture-detail.component.css']\n})\nexport class ProjectCaptureDetailComponent implements OnInit {\n\t\n// =========================\n// DECLARACIONES\n// =========================\n\n  fecha_inicial_proyecto:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  fecha_final_proyecto:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  nombre_proyecto : any = ''  \n  cliente : any = '1';\n  presupuesto_proyecto : any = 0;\n  responsable_proyecto : any = '';\n  centro_de_costo_proyecto : any = '1';\n  almacen : any = '1';\n  codigo_proyecto : any = '';\n  proeycto_id_mayor : number = 0;\n  proeycto_numero_mayor : number = 0;\n\n  numerotxt : any;\n  nombretxt : any;\n  clientecbo : any;  \n  presupuestotxt : any;\n  responsabletxt : any;\n  fechaInicialtxt : any;\n  fechaFinaltxt : any;\n  centroDeCostoscbo : any;\n  almacencbo : any;\n  projectInfo : any;\n  projectId : any;\n  public newProject: FormGroup;\n  datasourceCategories : any[] = [];\n  datasourceProyects : any[] = [];\n  datasourceCustomers : any;\n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , private _customerservice : customerservice\n    , @Inject(MAT_DIALOG_DATA) public data,public _snackBar: MatSnackBar\n    , public dialog: MatDialog\n    , private formBuilder: FormBuilder\n  ) { \n    this.projectInfo = data.arrayData;\n    this.projectId = data.projectId;\n\n    this.newProject = this.formBuilder.group({\n      codigo_proyecto :  new FormControl(this.codigo_proyecto, [Validators.required, Validators.minLength(4), Validators.maxLength(7)]),\n      // proyecto_id: new FormControl(''),\n      nombre_proyecto: new FormControl('', [Validators.required, Validators.minLength(1), Validators.maxLength(50)]),\n      cliente: new FormControl(this.cliente, [Validators.required]),\n      // presupuesto_proyecto: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,3}$')]],\n      presupuesto_proyecto: new FormControl(this.presupuesto_proyecto, [Validators.required, Validators.pattern('^[0-9]+([.][0-9]{1,2})?$')]),\n      // presupuesto_proyecto: new FormControl('', Validators.required),\n      fecha_inicial_proyecto: new FormControl(''),\n      fecha_final_proyecto: new FormControl(''),\n      responsable_proyecto: new FormControl('', [Validators.required]),\n      centroDeCostos: new FormControl('', [Validators.required]),\n      almacen: new FormControl('')  \n    });\n  }\n\n// =========================\n// PROCEDIMIENTOS\n// =========================\n\n  ngOnInit(): void {\n\n    this.getcustomerAll();\n    this.getAllProjects();\n    this.getEnabledCategories();\n\n    if(this.projectId != 0){\n        this.newProject.patchValue({\n          proyecto_id : this.projectInfo[\"proyecto_id\"],\n          codigo_proyecto : this.projectInfo[\"codigo_proyecto\"],\n          nombre_proyecto : this.projectInfo[\"nombre_proyecto\"] ,\n          cliente : this.projectInfo[\"cliente_id\"].toString(),\n          presupuesto_proyecto : this.projectInfo[\"presupuesto_proyecto\"] ,\n          fecha_inicial_proyecto : this.projectInfo[\"fecha_inicial_proyecto\"],\n          fecha_final_proyecto : this.projectInfo[\"fecha_final_proyecto\"] ,\n          responsable_proyecto : this.projectInfo[\"responsable_proyecto\"],\n          centroDeCostos : this.projectInfo[\"centro_de_costo_proyecto\"].toString() ,\n          almacen : this.projectInfo[\"almacen_id\"].toString()\n      })\n      this.nombre_proyecto = this.projectInfo[\"nombre_proyecto\"];\n      this.cliente = this.projectInfo[\"cliente_id\"].toString() ;\n      this.presupuesto_proyecto = this.projectInfo[\"presupuesto_proyecto\"];\n      this.fecha_inicial_proyecto = this.projectInfo[\"fecha_inicial_proyecto\"];\n      this.fecha_final_proyecto = this.projectInfo[\"fecha_final_proyecto\"];\n      this.responsable_proyecto = this.projectInfo[\"responsable_proyecto\"];\n      this.centro_de_costo_proyecto = this.projectInfo[\"centro_de_costo_proyecto\"].toString();\n      this.almacen = this.projectInfo[\"almacen_id\"].toString();\n      this.codigo_proyecto = '';\n    }\n\n  }\n\n  validaCamposRequeridos() : boolean{\n    let valido : boolean = true;\n    valido = (this.newProject.get('codigo_proyecto').status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"nombre_proyecto\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"cliente\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"presupuesto_proyecto\").status == 'INVALID' || this.newProject.get(\"presupuesto_proyecto\").value <= 0) ? false : valido;\n    valido = (this.newProject.get(\"fecha_inicial_proyecto\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"fecha_final_proyecto\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"responsable_proyecto\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"centroDeCostos\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"almacen\").status == 'INVALID') ? false : valido;\n\n    return valido;\n\n  }\n\n  save(form, event){\n\n    let arrayTodb : any;\n\n    if(this.validaCamposRequeridos() == false){\n      this.openSnackBar('debe capturar los campos requeridos', 'success');\n      return;\n    }\n\n    if(this.projectId == 0){\n\n      arrayTodb = { codigo_proyecto : this.codigo_proyecto,\n                  nombre_proyecto : this.nombre_proyecto,\n                  cliente_id : this.cliente,\n                  presupuesto_proyecto : this.presupuesto_proyecto,\n                  fecha_inicial_proyecto : moment(this.fecha_inicial_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n                  fecha_final_proyecto : moment(this.fecha_final_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n                  responsable_proyecto : this.responsable_proyecto,\n                  centro_de_costo_proyecto : '', //this.centro_de_costo_proyecto,\n                  almacen_id : this.almacen};\n\n      // Actualiza registro NUEVO\n      this._projectService.insertProjects(arrayTodb).subscribe(\n        res=> {\n          console.log('Se inserto con éxito', res);\n          this.openSnackBar('Se genero el proyecto exitosamente', 'success');\n          \n          // Inserta categorias\n          this.insertCategories();\n        },\n        error => console.log(\"error alta de proyectos\",error)\n      )\n    // Inserta categorias\n    // this.insertCategories();\n    // this.dialogRef.close();\n    }\n    else{\n      arrayTodb = {proyecto_id : this.projectId,\n        nombre_proyecto : this.nombre_proyecto,\n        cliente_id : this.cliente,\n        presupuesto_proyecto : this.presupuesto_proyecto,\n        fecha_inicial_proyecto : moment(this.fecha_inicial_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n        fecha_final_proyecto : moment(this.fecha_final_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n        responsable_proyecto : this.responsable_proyecto,\n        centro_de_costo_proyecto : this.centro_de_costo_proyecto,\n        almacen_id : this.almacen,\n        codigo_proyecto : this.codigo_proyecto};\n\n        // Actualiza registro EDICION\n        this._projectService.updateProjects(arrayTodb).subscribe(\n        res=> {\n        console.log('Se edito con éxito', res);\n        },\n        error => console.log(\"error consulta regiones\",error)\n        )\n    }\n    this.dialogRef.close();\n  }\n\ninsertCategories(){\n  // Obtiene Proyecto Registrado\n  let datasourceProyectos : MatTableDataSource<projectModel>\n  let proyectoIdMaximo : any = \"0\";\n  let codigoProyecto : any = \"0\";\n  let arrayProjectCategories : any;\n  this._projectService.getProjectAll().subscribe(\n    res=> {\n      datasourceProyectos = new MatTableDataSource(res);\n\n      proyectoIdMaximo = (datasourceProyectos.filteredData[datasourceProyectos.filteredData.length -1][\"proyecto_id\"]);\n      codigoProyecto = datasourceProyectos.filteredData.find(e => e.proyecto_id == proyectoIdMaximo);\n\n      this.datasourceCategories.forEach(element => {\n        arrayProjectCategories = {proyecto_id : proyectoIdMaximo\n            , categoria_id : element.categoria_id\n            , presupuesto : 0\n            , responsable : ''\n            , fecha_inicial : moment(new Date, 'YYYY-MM-DD').format('YYYY-MM-DD')\n            , almacen_id : 1\n            , codigo_proyectocategoria : codigoProyecto[\"codigo_proyecto\"] + '-' + element.codigo_categoria\n        }\n\n        // Inserta Proyecto Categoria\n        this._projectCategoryservice.insertProjects(arrayProjectCategories).subscribe(\n          res=> {\n            console.log('CATEGORIAS', this.datasourceCategories);\n          },\n          error => console.log(\"error al insertar proyectos categorias\",error)\n        )\n        \n        arrayProjectCategories = null;\n\n      });\n      \n    },\n    error => console.log(\"error consulta todos los proyectos\",error)\n  )\n\n}\n\nfechaInicial(event){\n  console.log('fecha', this.fecha_inicial_proyecto);\n}\n\ncancel(event){\n  this.dialogRef.close();\n}\n\naddClient(form, event){\n  // Catálogo de clientes\n  const dialogConfig = new MatDialogConfig();\n\n  dialogConfig.width = '1400px';\n  dialogConfig.height = '700px';\n  dialogConfig.disableClose = true;\n\n  const dialogRef = this.dialog.open(CustomerDetailComponent, dialogConfig);\n\n  dialogRef.afterClosed().subscribe(result => {\n    // window.location.reload();\n  });\n}\n\nreloadClient(form, event){\n  // Carga clientes\n  this.getcustomerAll();\n}\n\n\nselectcustommer(event){\n  this.cliente = event.value;\n}\n\n  // =========================\n  // UTILERIAS\n  // =========================\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  _keyUp(event: any) {\n    let ultimoCaracter : any;\n    let valido : boolean = false;\n\n    console.log('presione : ', (event.target as HTMLInputElement).value);\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n\n    if(this.presupuesto_proyecto.length > 0){\n      ultimoCaracter = this.presupuesto_proyecto.slice(-1);\n\n      for(let i = 0; i < 10; i++)\n      {\n        if(ultimoCaracter == i){\n          valido = true;\n        }\n      }\n\n      if(ultimoCaracter == '.'){\n        valido = true;\n      }\n\n      if(valido == false)\n      {\n        this.presupuesto_proyecto = this.presupuesto_proyecto.substring(0,this.presupuesto_proyecto.length-1)\n      }\n\n    }\n  }\n\n  // =========================\n  // SERVICIOS\n  // =========================\n\n  getAllProjects(){\n    // Actualiza registro NUEVO\n    this._projectService.getProjectAll().subscribe(\n      res=> {\n        this.datasourceProyects = res;\n        if(this.projectId == 0){\n          this.codigo_proyecto = Number(this.datasourceProyects[this.datasourceProyects.length - 1][\"codigo_proyecto\"]) + 1;\n          console.log('PROEYCTOS TODOS', this.proeycto_numero_mayor);\n        }else{\n          this.codigo_proyecto = this.projectInfo[\"codigo_proyecto\"];\n        }\n\n      },\n      error => console.log(\"error consulta proyectos\",error)\n    )\n  }\n\n  getEnabledCategories(){\n    // Selecciona todas las categorías\n    this._categoryService.getCategoryAll().subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('CATEGORIAS', this.datasourceCategories);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n  getcustomerAll(){\n    // Selecciona todos los clientes\n    this._customerservice.getcustomerAll().subscribe(\n      res=> {\n        this.datasourceCustomers = res;\n        console.log('CLIENTES', this.datasourceCustomers);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n}\n","<div fxLayout=\"row\">\n    <h4>Capturar cotizaciones</h4>\n  </div>\n  <br>\n  <div mat-dialog-content-example [formGroup]=\"newProject\">\n    <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"30%\">\n            <div><br>Cotización</div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n            <div><br></div>\n          </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n            <mat-form-field>\n                <input [type]=\"cotizacionId\" matInput class=\"form-control form-control-line control\" formControlName=\"cotizacion_Id\" [(ngModel)]=\"cotizacionId\" disabled>\n            </mat-form-field>\n            </div>\n          </div>\n    </div>\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"30%\">\n          <div><br>Proveedor</div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n          <div><br></div>\n        </div>\n      <div fxFlex.gt-sm=\"25%\" >\n          <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"proveedor_id\" [(ngModel)]=\"proveedor_id\" >\n              <mat-option *ngFor=\"let op of datasourcePoveedores\" [value]=\"op.proveedor_id\" >\n                {{op.proveedor_nombre}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          </div>\n        </div>\n  </div>\n\n    <!-- CARGA DE ARCHIVOS -->\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div class=\"input-group mb-3\">\n                          <input type=\"file\" name=\"loadFile\" id=\"loadFile\" class=\"form-control form-control-line\" placeholder=\"SELECCIONA ARCHIVO\" style=\"display: none;\" (change)=\"onFileChange($event)\" onclick=\"this.value=null;\"> <!--[(ngModel)]=\"buscar\" -->\n                          <label for=\"loadFile\" style=\"margin: 0; text-align: left; width: 400px;\" class=\"btn btn-outline-dark\"><b>{{nombreArchivo}}</b></label><br><!--{{nombreArchivo}}  formControlName=\"loadFile\"--> \n                      </div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\">\n          <div><button mat-raised-button color=\"primary\" (click)=\"uploadFile(newProject, $event)\">Subir Archivo</button></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\">\n        <div><button mat-raised-button color=\"warn\" (click)=\"cancel(newProject, $event)\">Cancelar</button></div>\n      </div>\n  </div>\n\n  <!-- BOTONES -->\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div class=\"input-group mb-3\">\n          <!-- <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Generar ODC</button></div> -->\n        </div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\">\n      <!-- <div><button mat-raised-button color=\"warn\" (click)=\"cancel(newProject, $event)\">Cancelar</button></div> -->\n    </div>\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n</div>\n\n  </div>\n    <!-- INICIA CUERPO DE LA PÁGINA-->\n    <!-- INICIA CUERPO DE LA PÁGINA-->\n    <div class=\"col-12 col-md-12 p-0\">\n      <div class=\"card\">\n        <div class=\"card-body card-body-table\">\n          <mat-table [dataSource]=\"dataShowUploadFile\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n              \n            <!-- ID Column -->\n            <ng-container matColumnDef=\"SKU\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>SKU</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.SKU}} </td>\n            </ng-container>\n\n            <!-- ID Column -->\n            <ng-container matColumnDef=\"cantidad\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> <span>Cantidad</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.file}} </td>\n            </ng-container>\n            \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </mat-table>\n    \n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator> -->\n      </div>\n\n\n\n  ","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {MAT_SNACK_BAR_DATA} from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport * as XLSX from 'xlsx';\nimport { from } from 'rxjs';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryModel } from '../../../models/category.model';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { ProjectCaptureComponent } from 'src/app/pages/projects/project-capture/project-capture.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from '../../../services/requisition/requisition.service';\nimport { requisitionModelDetail } from 'src/app/models/requisition.model.detail';\nimport { AppConstants } from '../../../shared/app.constants';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { filter } from 'rxjs-compat/operator/filter';\nimport { quotationDetailModel } from 'src/app/models/quotation-detail.model';\nimport { quotationDetailFileModel } from 'src/app/models/quotation-detail-file.model';\nimport { providerModel } from 'src/app/models/provider.model';\n\n@Component({\n  selector: 'app-quotation-detail-files',\n  templateUrl: './quotation-detail-files.component.html',\n  styleUrls: ['./quotation-detail-files.component.css']\n})\nexport class QuotationDetailFilesComponent implements OnInit {\n\n  // =========================\n  // DECLARACIONES\n  // =========================\n\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n\n  QuotationInfo : any;\n  newProject: FormGroup;\n  displayedColumns = ['SKU', 'file'];\n\n  // NgModels\n  proveedor_id : any = 0;\n  UploadDataQuotation : MatTableDataSource<quotationDetailFileModel>;\n  datasourcePoveedores : any[] = [];\n  public nombreArchivo : any = 'selecciona archivo';\n  dataExcel: any[];\n  dataShowUploadFile : MatTableDataSource<quotationDetailFileModel>;\n  \n  // NGModels\n  cotizacionId : any = 0;\n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , @Inject(MAT_DIALOG_DATA) public data\n    , public snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n    , private _snackBar : MatSnackBar\n    , private _requisitionservice : requisitionservice\n    // , private notificationService: NotificationService,\n  ) { \n    this.QuotationInfo = data.arrayData;\n    this.cotizacionId = data.cotizacionId;\n\n    this.newProject = this.formBuilder.group({\n      cotizacion_Id : new FormControl(''),\n      proveedor_id : new FormControl('')\n  });\n  }\n\n  ngOnInit(): void {\n    this.cotizacionId = this.QuotationInfo[\"cotizacion_id\"];\n    console.log('cotizacion aqui', this.QuotationInfo[\"cotizacion_id\"]);\n    this.getProveedores();\n  }\n\n  onFileChange(event){\n    /* wire up file reader */\n    const target: DataTransfer = <DataTransfer>(event.target);\n    let extencionArchivo : string = '';\n\n    this.UploadDataQuotation = null;\n\n    if (target.files.length !== 1) {\n      throw new Error('No se pueden seleccionar multiples archivos');\n    }\n\n    this.nombreArchivo = (target.files.length > 0) ? target.files[0][\"name\"].substring(1,30) : \" (archivo nuevo) \";\n    const reader: FileReader = new FileReader();\n    reader.readAsBinaryString(target.files[0]);\n    extencionArchivo = target.files[0].name.substring(target.files[0].name.length - 5,target.files[0].name.length)\n    \n      console.log('AQUI ESTAN LAS EXTENCIONES DE EXCEL')\n      reader.onload = (e: any) => {\n        /* create workbook */\n  \n        const binarystr: string = e.target.result;\n \n      };\n  }\n\n  // PROCEDIMIENTO\n  validate(data : any)\n  {\n    // Valida que todos los datos esten completos\n    return data\n  }\n\n  deleteUploadFile(event: any){\n    this.nombreArchivo = \" (archivo nuevo) \";\n    this.UploadDataQuotation = null;\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  save(form, event){\n\n  }\n\n  uploadFile(form, event){\n\n    let dataUploadFile : any[] = [];\n\n    dataUploadFile.push({proveedor_id : this.proveedor_id, file : this.nombreArchivo });\n\n    this.dataShowUploadFile = new MatTableDataSource(dataUploadFile);\n\n    this.openSnackBar('Se subió el archivo correctamente  ' + this.nombreArchivo, '');\n  }\n\n  cancel(form, event){\n    this.dialogRef.close();\n  }\n\n  // =====================\n  // CONSILTA DE SERVICIOS\n  // =====================\n\n  getProveedores(){\n\n    let arrayProvider : any [];\n\n    arrayProvider = [];\n    arrayProvider.push({proveedor_id : 1, proveedor_nombre : 'CABLES MONTERREY SA DE CV'},\n                    {proveedor_id : 2, proveedor_nombre : 'VENTA DE CABLEADO SA'}\n                    )\n\n    this.datasourcePoveedores = arrayProvider;\n\n    console.log(this.datasourcePoveedores);\n  }\n}\n","<div fxLayout=\"row\">\n  <h4>Nueva Cotización</h4>\n</div>\n<br>\n<div mat-dialog-content-example [formGroup]=\"newProject\">\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <!-- <div><br>Proyecto</div> -->\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div>\n        <mat-form-field>\n          <mat-select class=\"form-control control\" formControlName=\"proyecto_id\" [(ngModel)]=\"proyecto_id\" (selectionChange)=\"proyectoSelected()\" >\n            <mat-option *ngFor=\"let op of datasourcePorjects\" [value]=\"op.proyecto_id\" >\n              {{op.codigo_proyecto}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <span *ngIf=\"!newProject.get('proyecto_id').valid && newProject.get('proyecto_id').touched\" class=\"help-block\" style=\"color: red;\"> seleccione un proyecto</span>\n      </div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Proyecto-Categoria</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"categoria_id\" [(ngModel)]=\"categoria_id\" (selectionChange)=\"categorySelected()\" >\n              <mat-option *ngFor=\"let opx of datasourceCategories\" [value]=\"opx.proyectocategoria_id\">\n                {{opx.codigo_proyectocategoria}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('categoria_id').valid && newProject.get('categoria_id').touched\" class=\"help-block\" style=\"color: red;\"> seleccione una categotía</span>\n        </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Requisición</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div>\n      <mat-form-field>\n        <mat-select class=\"form-control control\" formControlName=\"requisicion_Numero\" [(ngModel)]=\"requisicion_Numero\" (selectionChange)=\"RequisitionSelected()\" >\n          <mat-option *ngFor=\"let op of datasourceRequisition\" [value]=\"op.requisicioninterna_id\">\n            {{op.codigo}}\n          </mat-option>\n        </mat-select>\n        </mat-form-field>\n        <span *ngIf=\"!newProject.get('requisicion_Numero').valid && newProject.get('requisicion_Numero').touched\" class=\"help-block\" style=\"color: red;\"> seleccione una requisición</span>\n      </div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div>Fecha</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div><mat-form-field appearance=\"fill\">\n          <mat-label>Choose a date</mat-label>\n          <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" (dateChange)=\"fechaControl($event)\" class=\"control\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field></div>\n    </div>\n  </div>\n  <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>Cotización</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"cotizacion_Numero\" matInput class=\"form-control form-control-line control\" formControlName=\"cotizacion_Numero\" [(ngModel)]=\"cotizacion_Numero\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('cotizacion_Numero').valid && newProject.get('cotizacion_Numero').touched\" class=\"help-block\" style=\"color: red;\"> capture una cotización</span>\n          </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <!-- <div><button mat-raised-button color=\"accent\" (click)=\"find(newProject, $event)\">Buscar</button></div> -->\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n      </div>\n  </div>\n  <br>\n  <!--Tabla de captura-->\n  <div fxLayout=\"row\" class=\"division\">      \n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Generar Cotización</button></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n    </div>\n  </div>\n  \n   <!-- INICIA CUERPO DE LA PÁGINA-->\n   <div class=\"col-12 col-md-12 p-0\">\n    <div class=\"card\">\n      <div class=\"card-body card-body-table\">\n        <mat-table [dataSource]=\"datasourceRequisitionDetail\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\" #tabla1>\n\n          <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                  <div style=\"width: 100%; text-align: left; vertical-align: middle;\">\n                      SELECCIONAR\n              </div>\n                </th>\n                <div style=\"width: 50px;\">\n                <td mat-cell *matCellDef=\"let element; let i = index\">\n                  <mat-checkbox color=\"warn\"\n                              formControlName=\"seleccionar\" \n                              (click)=\"$event.stopPropagation()\"\n                              (change)=\"SeleccionarRegistro(element.cantidad, element.requisicioninternadetalle_id, element.um, element.descripcion, $event)\"\n                              [checked]=\"element.activo\"\n                              [(ngModel)]=\"element.activo\"\n                              >\n                              <!--[checked]=\"selection.isSelected(element.proyecto_id)\"-->\n                              <!--[(ngModel)]=\"element.activo\" -->\n                  </mat-checkbox>\n                </td>\n              </div>\n          </ng-container>\n\n          <!-- SKU Column -->\n          <ng-container matColumnDef=\"sku\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>sku</span> </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.sku}} </td>\n          </ng-container>\n\n          <!-- descripción Column -->\n          <ng-container matColumnDef=\"descripcion\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Descripción </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.descripcion}} </td>\n          </ng-container>\n\n          <!-- descripción Column -->\n          <ng-container matColumnDef=\"medida\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Medida </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.medida}} </td>\n          </ng-container>\n\n          <!-- descripción Column -->\n          <ng-container matColumnDef=\"color\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Color </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.color}} </td>\n          </ng-container>\n\n          <!-- Name Column -->\n          <ng-container matColumnDef=\"um\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Unidad de Medida </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.unidad_de_medida}} </td>\n          </ng-container>\n\n          <!-- ID Column -->\n          <ng-container matColumnDef=\"cantidad\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Cantidad</span> </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.cantidad}} </td>\n          </ng-container>\n\n          <!-- ID Column -->\n          <ng-container matColumnDef=\"cantidad_comprar\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Cantidad a comprar</span> </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.cantidad_comprar}} </td>\n          </ng-container>\n          \n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </mat-table>\n  \n      </div>\n      <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator> -->\n    </div>\n    </div>\n  </div>\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {MAT_SNACK_BAR_DATA} from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport * as XLSX from 'xlsx';\nimport { from } from 'rxjs';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryModel } from '../../../models/category.model';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { ProjectCaptureComponent } from 'src/app/pages/projects/project-capture/project-capture.component';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from '../../../services/requisition/requisition.service';\nimport { quotationListModel } from '../../../models/quotation-list.model'\nimport { quotationservice } from '../../../services/quotation/quotation.service';\nimport { requisitionModelDetail } from 'src/app/models/requisition.model.detail';\nimport { AppConstants } from '../../../shared/app.constants';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { filter } from 'rxjs-compat/operator/filter';\nimport { RequisitionDetailComponent } from '../../requisitions/requisition-detail/requisition-detail.component';\nimport { umask } from 'process';\nimport { MatTab } from '@angular/material/tabs';\n\n@Component({\n  selector: 'app-quotation-detail',\n  templateUrl: './quotation-detail.component.html',\n  styleUrls: ['./quotation-detail.component.css']\n})\nexport class QuotationDetailComponent implements OnInit {\n  // ====================\n  // DECLARACIONES\n  // ====================\n\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @ViewChild(MatTable) tabla1: MatTable<any>;\n  \n  \n  fecha:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  requisicion_id : any = '';\n  categoria_id : any = '';\n  proyecto_id : any = 0;\n  requisicion_Numero : any = '';\n  cotizacion_Numero : any = '';\n  loadfile : any  = '';\n  buscar : any = '';\n  public nombreArchivo : any = 'selecciona archivo';\n  dataSourceShow : MatTableDataSource<requisitionModel>;\n  dataExcel: any[];\n  dataSourceDetail : MatTableDataSource<RequisitionDetailComponent>\n  seleccionaRegistro : any;\n  displayedColumns = ['select', 'sku', 'descripcion', 'medida', 'color', 'um', 'cantidad', 'cantidad_comprar' ];\n\n  projectInfo : any;\n  requisicionId : any = 0;\n  quotationId : any = 0;\n  newProject: FormGroup;\n  datasourceCategories : any[] = [];\n  datasourcePorjects : any[] = [];\n  datasourceRequisition : any;\n  datasourceRequisitionDetail : any = []; // MatTableDataSource<requisitionModelDetail>;\n  datasourceCotizaciones : any;\n  datasourceCotizacionesDet : any[] = [];\n  arraytemp : any = [];\n  \n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , @Inject(MAT_DIALOG_DATA) public data,public snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n    , private _snackBar : MatSnackBar\n    , private _requisitionservice : requisitionservice\n    , private _quotationservice : quotationservice\n    // , private notificationService: NotificationService,\n  ) { \n    this.projectInfo = data.arrayData;\n    this.requisicionId = data.requisicionId;\n    this.quotationId = data.cotizacionId;\n\n    this.newProject = this.formBuilder.group({\n      proyecto_id : new FormControl('', [Validators.required]),\n      categoria_id: new FormControl('', [Validators.required]),\n      requisicion_id: new FormControl('', [Validators.required]),\n      fecha: new FormControl('', [Validators.required]),\n      requisicion_Numero : new FormControl('', [Validators.required]),\n      cotizacion_Numero : new FormControl('', [Validators.required]),\n      seleccionar : new FormControl('')\n  });\n  }\n\n  ngOnInit(): void {\n\n    this.getProyectos();\n    if(this.requisicionId != 0){\n        this.newProject.patchValue({\n          proyecto_id : this.projectInfo[\"proyecto_id\"],\n          requisicion_id : '', // this.projectInfo[\"requisicion_id\"] ,\n          requisicion_Numero : this.projectInfo[\"codigo\"] ,\n          categoria_id : '', // this.projectInfo[\"categoria_id\"],\n          fecha : '', // this.projectInfo[\"fecha\"]\n          loadfile : ''\n          \n      })\n      this.requisicion_Numero = this.projectInfo[\"codigo\"];\n      this.proyecto_id = this.projectInfo[\"proyecto_id\"];\n      this.requisicion_id = '' //this.projectInfo[\"requisicion_id\"];\n      this.categoria_id = this.projectInfo[\"categoria_id\"];\n      this.fecha = '', //this.projectInfo[\"fecha\"];\n      this.loadfile = ''\n    }\n\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  proyectoSelected(){\n    console.log('Selecciona categorias', this.proyecto_id);\n    this.getCategories(this.proyecto_id);\n  }\n\n  categorySelected(){\n    this.getrequisitionAll();\n  }\n\n  RequisitionSelected(){\n    \n    let arrayRequisicion_interna : any;\n    let codigoRequisicion_interna : any;\n\n    this.requisicionId = this.newProject.controls[\"requisicion_Numero\"].value;\n    arrayRequisicion_interna = this.datasourceRequisition.filter(e => e.requisicioninterna_id == this.requisicionId);\n    \n    this.getCotizacionesAll(arrayRequisicion_interna[0][\"codigo\"])\n    \n    // Busca cotizaciones y arma nuevo numero de cotización\n    this.getRequisitionDetail(this.requisicionId)\n  }\n\n  SeleccionarRegistro(cantidadOrdenar : any, requisicionDet_id : any, uom : any, descripcionOrdenar : any, event : Event){\n\n    let arrayRequisicioneDetalle : any[] = [];\n\n    if(event[\"checked\"] == true && this.datasourceCotizacionesDet.filter(e => e.requisicionDetalle_id == requisicionDet_id).length == 0){\n        this.datasourceCotizacionesDet.push({requisicioninternaDetalle_id : requisicionDet_id, cantidad : cantidadOrdenar, um: uom, descripcion: descripcionOrdenar})\n    }\n\n    if(event[\"checked\"] == false && this.datasourceCotizacionesDet.filter(e => e.requisicionDetalle_id == requisicionDet_id).length != 0){\n      arrayRequisicioneDetalle = this.datasourceCotizacionesDet.filter(e => e.requisicionDetalle_id != requisicionDet_id)\n      this.datasourceCotizacionesDet = [];\n      this.datasourceCotizacionesDet = arrayRequisicioneDetalle;\n    }\n  }\n\n  validaCamposRequeridos() : boolean{\n    let valido : boolean = true;\n    valido = (this.newProject.get('proyecto_id').status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"categoria_id\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"requisicion_Numero\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"cotizacion_Numero\").status == 'INVALID') ? false : valido;\n\n    return valido;\n  }\n\n  save(form, event){\n\n    let arrayTodb : any;\n\n    if(this.validaCamposRequeridos() == false){\n      this.openSnackBar('debe capturar los campos requeridos', 'success');\n      return;\n    }\n\n    if(this.quotationId == 0){\n      arrayTodb = { \n        // proyecto_id : this.proyecto_id,\n                  requisicioninterna_id : this.requisicionId,\n                  codigo : this.newProject.controls[\"cotizacion_Numero\"].value,\n                  fecha : moment(this.fecha, 'YYYY-MM-DD').format('YYYY-MM-DD')\n                };\n\n      // INSERTA REQUISICION HDR\n      this.insertQuotationHeader(arrayTodb);\n    }\n    else{\n      arrayTodb = {\n        // proyecto_id : this.proyecto_id,\n        categoria_id : this.categoria_id,\n        requisicioninterna_id : this.requisicionId,\n        fecha : moment(this.fecha, 'YYYY-MM-DD').format('YYYY-MM-DD')\n      };\n\n        // Actualiza registro EDICION\n        // this._projectService.updateProjects(arrayTodb).subscribe(\n        // res=> {\n        // console.log('Se edito con éxito', res);\n        // },\n        // error => console.log(\"error consulta regiones\",error)\n        // )\n        // this.dialogRef.close();\n    }\n  }\n\n\n\n  fechaControl(event){\n    console.log('fecha', this.fecha);\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n\n// =============================\n// UTILERIAS\n// =============================\n\nfind(form, event){\n  // Buscar requisiciones\n  console.log('requisiciones', this.requisicion_Numero)\n  // this._requisitionservice.getRequisitionById(this.cotizacion_Numero).subscribe(\n  //   res=> {\n  //     this.datasourceCategories = res;\n  //     console.log('PROYECTOS - CATEGORIAS', res);\n  //   },\n  //   error => console.log(\"error consulta cateogorias\",error)\n  // )\n\n}\n\npublic handlePage(e: any) {\n  this.currentPage = e.pageIndex;\n  this.pageSize = e.pageSize;\n  this.iterator();\n}\n\nprivate iterator() {\n  const end = (this.currentPage + 1) * this.pageSize;\n  const start = this.currentPage * this.pageSize;\n  const part = this.array.slice(0, this.totalSize);\n  this.dataSourceShow = new MatTableDataSource(part);\n  this.dataSourceShow.sort = this.sort;\n  this.dataSourceShow.paginator = this.paginator;\n}\n\nfiltrar(event: Event) {\n  const filtro = (event.target as HTMLInputElement).value;\n  this.dataSourceShow.filter = filtro.trim().toLowerCase();\n  console.log('filtro', filtro);\n}\n\n// =============================\n// CONSUME SERVICIOS\n// =============================\n\ngetProyectos(){\n  // Obtiene proyectos\n  this._projectService.getProjectAll().subscribe(\n    res=> {\n      this.datasourcePorjects = res;\n      console.log('PROYECTOS', res);\n    },\n    error => console.log(\"error consulta proyectos\",error)\n  )\n}\n\ngetCotizacionesAll(requisicion_interna : any){\n  this._quotationservice.getQuotationAll().subscribe(\n    res=> {\n      this.datasourceCotizaciones = res;\n      console.log('COTIZACIONES TODAS', res);\n      this.cotizacion_Numero = this.cotizacion_Numero = requisicion_interna + '-' + (this.datasourceCotizaciones.filter(e => e.codigo_requisicioninterna == requisicion_interna).length + 1);\n\n    },\n    error => console.log(\"error consulta proyectos\",error)\n  )\n}\n\ngetrequisitionAll(){\n  // Obtiene todas las requisiciones \n  this._requisitionservice.getRequisitionAll().subscribe(\n    res=> {\n      // this.datasourceRequisition = [];\n      this.datasourceRequisition = res;\n        this.datasourceRequisition = this.datasourceRequisition.filter(e => e.proyectocategoria_id == this.newProject.controls[\"categoria_id\"].value)\n\n        // // Consulta detalle de requisición\n        // this.getRequisitionDetail();\n    },\n    error => console.log(\"error consulta requisiciones\",error)\n  )\n\n}\n\ngetrequisition(){\n  // Obtiene las requisiciones \n  this._requisitionservice.getRequisitionById(this.newProject.controls[\"categoria_id\"].value).subscribe(\n    res=> {\n      this.datasourceRequisition = [];\n      this.datasourceRequisition.push(res);\n        console.log('REQUISICIONES', this.datasourceRequisition);\n\n    //     // Consulta detalle de requisición\n    //     this.getRequisitionDetail();\n    },\n    error => console.log(\"error consulta requisiciones\",error)\n  )\n}\n\ngetRequisitionDetail(Requisition_Id : any){\n  // Obtiene requisiciones \n  this._requisitionservice.getRequisitionDetail(Requisition_Id).subscribe(\n    res=> {\n      this.datasourceRequisitionDetail = (res);\n\n        console.log('REQUISICIONES DETALLE', this.datasourceRequisitionDetail);\n    },\n    error => console.log(\"error consulta requisiciones\",error)\n  )\n}\n\ngetCategories(proyecto : any){\n  // Obtiene categorias \n    this._projectCategoryservice.getProjectCateogryById(proyecto).subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('PROYECTOS - CATEGORIAS', res);\n      },\n      error => console.log(\"error consulta cateogorias\",error)\n    )\n\n  // this._projectCategoryservice.getProjectCateogryAll().subscribe(\n  //   res=> {\n  //     this.datasourceCategories = res;\n  //     console.log('PROYECTOS - CATEGORIAS', res);\n  //   },\n  //   error => console.log(\"error consulta cateogorias\",error)\n  // )\n}\n\ninsertQuotationHeader(arrayTodb : any){\n  this._quotationservice.insertQuotation(arrayTodb).subscribe(\n    res=> {\n      console.log('Se inserto con éxito', res);\n\n      // INSERTA REQUISICIONES DET\n      this.insertQuotationDet(res);\n    },\n    error => console.log(\"error alta de proyectos\",error)\n  )\n}\n\ninsertQuotationDet(cotizacionId : any){\n\n  console.log('para guardar', this.datasourceCotizacionesDet);\n\n  // Obtiene Requisicion Registrada\n  let datasourceRequsition : MatTableDataSource<requisitionModel>\n  let requisitionIdMaximo : any = \"0\";\n  let arrayToDb : any;\n\n  this.tabla1[\"_data\"].forEach(element => {\n    console.log('elemento', element);\n    if(element.activo == true){\n      arrayToDb = { cotizaciondetalle_id: 0\n        , codigo_cotizacion : ''\n        , requisicioninternadetalle_id : element.requisicioninternadetalle_id\n        , cotizacion_id : cotizacionId\n        , sku : element.sku\n        , medida : element.medida\n        , color : element.color\n        , otras_especificaciones : element.otras_especificaciones\n        , cantidad : element.cantidad\n        , unidad_medida : element.unidad_medida\n        , descripcion : element.descripcion\n        , descuento : 0\n        , costo : 0\n      }\n    \n    // Inserta Proyecto Categoria\n    this._quotationservice.insertQuotationDetail(arrayToDb).subscribe(\n      res=> {\n        console.log('INSERTA COTIZACION DETALLE', arrayToDb);\n        this.openSnackBar('Se genero el la cotización exitosamente', 'success');\n      },\n      error => console.log(\"error al insertar proyectos categorias\",error)\n    )\n  }\n\n    arrayToDb = null;\n\n  });\n\n    // this.datasourceCotizacionesDet.forEach(element => {\n        // arrayToDb = { cotizaciondetalle_id: 0\n        //     , codigo_cotizacion : ''\n        //     , requisicioninternaDetalle_id : element.requisicioninternaDetalle_id\n        //     , cotizacion_id : cotizacionId\n        //     , sku : element.sku\n        //     , medida : ''\n        //     , color : ''\n        //     , otras_especificaciones : ''\n        //     , almacen_id : 1\n        //     , cantidad : element.cantidad\n        //     , unidad_medida : element.um\n        //     , descripcion : element.descripcion\n        //     , descuento : 0\n        //     , costo : 0\n        // }\n\n        // Inserta Proyecto Categoria\n      //   this._quotationservice.insertQuotationDetail(arrayToDb).subscribe(\n      //     res=> {\n      //       console.log('INSERTA COTIZACION DETALLE', arrayToDb);\n      //       this.openSnackBar('Se genero el la cotización exitosamente', 'success');\n      //     },\n      //     error => console.log(\"error al insertar proyectos categorias\",error)\n      //   )\n        \n      //   arrayToDb = null;\n\n      // });\n}\n\n\n}\n","<div fxLayout=\"row\">\n    <h4>Nueva Requisición</h4>\n  </div>\n  <br>\n  <div mat-dialog-content-example [formGroup]=\"newProject\">\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>Proyecto</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <!-- [(ngModel)]=\"proyecto_id\" (selectionChange)=\"emitFilters($event, 'Enviado')\"  -->\n            <mat-select class=\"form-control control\" formControlName=\"proyecto_id\" [(ngModel)]=\"proyecto_id\" (selectionChange)=\"proyectoSelected()\" >\n              <mat-option *ngFor=\"let op of datasourcePorjects\" [value]=\"op.proyecto_id\" >\n                {{op.codigo_proyecto}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('proyecto_id').valid && newProject.get('proyecto_id').touched\" class=\"help-block\" style=\"color: red;\"> seleccione un proyecto</span>\n        </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><br>Proyecto-Categoría</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n                <mat-select class=\"form-control control\" formControlName=\"categoria_id\" [(ngModel)]=\"categoria_id\" (selectionChange)=\"categorySelected()\"><!-- (selectionChange)=\"emitFilters($event, 'Enviado')\"-->\n                  <mat-option *ngFor=\"let opx of datasourceCategories\" [value]=\"opx.proyectocategoria_id\">\n                    {{opx.codigo_proyectocategoria}}\n                  </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('categoria_id').valid && newProject.get('categoria_id').touched\" class=\"help-block\" style=\"color: red;\"> seleccione una categoría</span>\n          </div>\n      </div>\n    </div>\n  \n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>Requisición</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"requisicion_Numero\" matInput class=\"form-control form-control-line control\" formControlName=\"requisicion_Numero\" [(ngModel)]=\"requisicion_Numero\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('requisicion_Numero').valid && newProject.get('requisicion_Numero').touched\" class=\"help-block\" style=\"color: red;\"> capture un número de Requisición</span>\n          </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><br>Fecha</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>{{fecha | date: 'dd-MM-yyyy'}}</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" (dateChange)=\"fechaInicial($event)\" class=\"control\" [(ngModel)]=\"fecha\"> <!--[(ngModel)]=\"fecha\" -->\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker [startAt]=\"fecha\" #picker></mat-datepicker>\n          </mat-form-field></div>\n      </div>\n    </div>\n    <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div class=\"input-group mb-3\">\n                            <input type=\"file\" name=\"loadFile\" id=\"loadFile\" class=\"form-control form-control-line\" placeholder=\"SELECCIONA ARCHIVO\" style=\"display: none;\" (change)=\"onFileChange($event)\" onclick=\"this.value=null;\"> <!--[(ngModel)]=\"buscar\" -->\n                            <label for=\"loadFile\" style=\"margin: 0; text-align: left; width: 400px;\" class=\"btn btn-outline-dark\"><b>{{nombreArchivo}}</b></label><br><!--{{nombreArchivo}}  formControlName=\"loadFile\"--> \n                        </div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\">\n            <!-- <div><button mat-raised-button color=\"primary\" (click)=\"save(newProject, $event)\">Subir Archivo</button></div> -->\n        </div>\n        <div fxFlex.gt-sm=\"20%\">\n            <div></div>\n        </div>\n    </div>\n\n    <br>\n    <!--Tabla de captura-->\n    <div fxLayout=\"row\" class=\"division\">\n        \n    </div>\n\n  </div>\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n          <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div>\n          <ng-container *ngIf='requisicionId == 0' >\n            <button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button>\n          </ng-container>\n          </div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div>\n          <ng-container><button *ngIf='requisicionId == 0' mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></ng-container>\n          <ng-container><button *ngIf='requisicionId != 0' mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Regresar</button></ng-container>\n        </div>\n      </div>\n    </div>\n     <!-- INICIA CUERPO DE LA PÁGINA-->\n     <div class=\"col-12 col-md-12 p-0\">\n      <div class=\"card\">\n        <div class=\"card-body card-body-table\">\n          <mat-table [dataSource]=\"UploadDataExcel\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n              \n            <!-- ID Column -->\n            <ng-container matColumnDef=\"SKU\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>SKU</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.SKU}} </td>\n            </ng-container>\n\n            <!-- ID Column -->\n            <ng-container matColumnDef=\"cantidad\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> <span>Cantidad</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.cantidad}} </td>\n            </ng-container>\n            \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"unidad_de_medida\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Unidad de Medida </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.um}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"descripcion\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Descripción </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.descripcion}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"medida\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Medida </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.medida}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"color\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Color </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.color}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"otras_Especificaciones\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Otras especificaciones </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.otras_especificaciones}} </td>\n            </ng-container>\n            \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </mat-table>\n    \n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator> -->\n      </div>\n    </div>\n  ","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport * as XLSX from 'xlsx';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from '../../../services/requisition/requisition.service';\nimport { requisitionModelDetail } from 'src/app/models/requisition.model.detail';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { dateInputsHaveChanged } from '@angular/material/datepicker/datepicker-input-base';\nimport { skipUntil } from 'rxjs-compat/operator/skipUntil';\n// import { NotificationService } from '../../../services/common/notification.service';\n\n@Component({\n  selector: 'app-requisition-detail',\n  templateUrl: './requisition-detail.component.html',\n  styleUrls: ['./requisition-detail.component.css']\n})\nexport class RequisitionDetailComponent implements OnInit {\n  // ===================\n  // DECLARACIONES\n  // ===================\n\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  \n  fecha:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  requisicion_id : any = '';\n  categoria_id : any = '';\n  proyecto_id : any = 0;\n  requisicion_Numero : any = ''\n  loadfile : any  = '';\n  buscar : any = '';\n  public nombreArchivo : any = 'selecciona archivo';\n  UploadDataExcel : MatTableDataSource<requisitionModelDetail>;\n  dataExcel: any[];\n  // displayedColumns = ['SKU', 'cantidad', 'unidad_de_medida', 'descripcion'];\n  displayedColumns = ['SKU', 'cantidad', 'unidad_de_medida', 'descripcion', 'medida', 'color', 'otras_Especificaciones'];\n\n  projectInfo : any;\n  requisicionId : any = 0;\n  newProject: FormGroup;\n  datasourceCategories : any[] = [];\n  datasourcePorjects : any[] = [];\n  datasourceRequisition : any;\n\n  fo : string\n  cargo : string\n  no_pym : string\n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , @Inject(MAT_DIALOG_DATA) public data\n    , public snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n    , private _snackBar : MatSnackBar\n    , private _requisitionservice : requisitionservice\n    // , private notificationService: NotificationService,\n  ) { \n    this.projectInfo = data.arrayData;\n    this.requisicionId = data.requisicionId;\n\n    this.newProject = this.formBuilder.group({\n      proyecto_id : new FormControl('', [Validators.required]),\n      categoria_id: new FormControl('', [Validators.required]),\n      requisicion_id: new FormControl('', [Validators.required]),\n      fecha: new FormControl('', [Validators.required]),\n      requisicion_Numero : new FormControl('', [Validators.required])\n      // loadFile: new FormControl(''),\n  });\n  }\n\n// ===============\n// PROCEDIMIENTOS\n// ===============\n\n  ngOnInit(): void {\n\n    this.getProyectos();\n    this.getEnabledCategories();\n    \n    console.log('this.projectInfo[\"codigo\"]', this.requisicionId);\n    this.newProject.controls[\"categoria_id\"].setValue(this.projectInfo[\"codigo_proyectocategoria\"]);\n    \n    if(this.requisicionId != 0){\n        this.newProject.patchValue({\n          proyecto_id : this.projectInfo[\"proyecto_id\"],\n          requisicion_id : '', // this.projectInfo[\"requisicion_id\"] ,\n          requisicion_Numero : this.projectInfo[\"codigo\"] ,\n          categoria_id : '', // this.projectInfo[\"categoria_id\"],\n          fecha : moment(new Date), //this.projectInfo[\"fecha\"], // this.projectInfo[\"fecha\"]\n          loadfile : ''\n      })\n      this.requisicion_Numero = this.projectInfo[\"codigo\"];\n      // this.projectInfo.controls[\"proyecto_id\"].setValue(77);\n      this.proyecto_id = this.projectInfo[\"proyecto_id\"];\n      this.requisicion_id = '' //this.projectInfo[\"requisicion_id\"];\n      this.categoria_id = this.projectInfo[\"proyectocategoria_id\"];\n      // this.projectInfo.controls[\"categoria_id\"].setValue('161');\n      this.fecha = '', //this.projectInfo[\"fecha\"];\n      this.loadfile = ''\n\n      this.getRequisitionDetail(this.requisicionId);\n    }\n\n  }\n\n  onFileChange(event){\n    /* wire up file reader */\n    const target: DataTransfer = <DataTransfer>(event.target);\n    let extencionArchivo : string = '';\n\n    this.UploadDataExcel = null;\n\n    if (target.files.length !== 1) {\n      throw new Error('No se pueden seleccionar multiples archivos');\n    }\n\n    this.nombreArchivo = (target.files.length > 0) ? target.files[0][\"name\"].substring(1,30) : \" (archivo nuevo) \";\n    const reader: FileReader = new FileReader();\n    reader.readAsBinaryString(target.files[0]);\n    extencionArchivo = target.files[0].name.substring(target.files[0].name.length - 5,target.files[0].name.length)\n    if(extencionArchivo == '.xlsx' || extencionArchivo.substring(extencionArchivo.length - 4, extencionArchivo.length) == 'xls'){\n      console.log('AQUI ESTAN LAS EXTENCIONES DE EXCEL')\n      reader.onload = (e: any) => {\n        /* create workbook */\n  \n        const binarystr: string = e.target.result;\n        const wb: XLSX.WorkBook = XLSX.read(binarystr, { type: 'binary' });\n  \n        /* selected the first sheet */\n        const wsname: string = wb.SheetNames[0];\n        const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n        /* save data */\n        const data = XLSX.utils.sheet_to_json(ws);\n        this.dataExcel = this.validate(data);\n        this.dataExcel = data;\n\n        let arrayErrores = [];\n        let arrayExcel = [];\n        let valido : boolean = true;\n\n        // Validadores de campos\n        let errorCantidad : boolean = false;\n        let errorUoM : boolean = false;\n        let errorDescripcion : boolean = false;\n        let errorSKU : boolean = false;\n        let DescripcionAnt : string = '';\n        let Descripcion : string = '';\n\n        // Ordena los descuentos por cr + produto + plataforma\n        this.dataExcel.sort(function (a, b) {\n          if (a.DESCRIPCION > b.DESCRIPCION) {\n            return 1;\n          }\n          if (a.DESCRIPCION < b.DESCRIPCION) {\n            return -1;\n          }\n          // a must be equal to b\n          return 0;\n        });\n\n        DescripcionAnt = this.dataExcel[0][\"DESCRIPCION\"].toUpperCase();\n\n        // Validamos que los crs del excel vs las existentes en el ctálogo\n      let contador : number = 0;\n      this.dataExcel.forEach(element => {\n        // Reinicia valores\n        valido = true;\n        errorDescripcion = false;\n\n        Descripcion = element.DESCRIPCION.toUpperCase()\n\n        if(element.SKU == '') {valido = false; errorSKU = true}\n        if(element.CANTIDAD_REQUERIDA == '') {valido = false; errorCantidad = true;}\n        if(element.UNIDAD.toUpperCase() == '') {valido = false; errorUoM = true;}\n        if(element.DESCRIPCION.toUpperCase() == '') {valido = false; errorDescripcion = true;}\n\n        contador++;\n        DescripcionAnt = Descripcion;\n\n        if(valido == false){\n          arrayErrores.push({ cantidad : element.CANTIDAD_REQUERIDA, \n            unidad_de_medida : element.UNIDAD, \n            descripcion : element.DESCRIPCION.toUpperCase()\n           })\n        }else{\n          arrayExcel.push({ \n            requisition_Id : 0,\n            SKU : element.SKU,\n            cantidad : element.CANTIDAD_REQUERIDA, \n            um : element.UNIDAD,\n            descripcion : element.DESCRIPCION,\n            medida : element.MEDIDA,\n            color : element.COLOR,\n            otras_especificaciones : element.OTRAS_ESPECIFICACIONES\n           })\n        }\n      });\n\n      if(arrayErrores.length > 0){\n        this.openSnackBar('Los registros contienen datos incorrectos', '');\n\n        // this.notificationService.openNotification(AppConstants.defaultNotificationWarningTitle, 'Los registros contienen estaciónes, productos o plataformas no validos', 'warn');\n        this.dataExcel = null;\n        // this.openErrorDialog(arrayErroresEstacion);\n        return;\n      }\n\n      this.UploadDataExcel = new MatTableDataSource(arrayExcel);\n      console.log('datos del excel', this.UploadDataExcel);\n\n      };\n    }\n    else{\n      this.openSnackBar('Los registros contienen datos incorrectos', '');\n      // this.notificationService.openNotification(AppConstants.defaultNotificationWarningTitle, 'No es un archivo de excel válido', 'warn');\n      this.deleteUploadFile(event);\n    }\n  }\n\n  validate(data : any)\n  {\n    // Valida que todos los datos esten completos\n    return data\n  }\n\n  deleteUploadFile(event: any){\n    this.nombreArchivo = \" (archivo nuevo) \";\n    this.UploadDataExcel = null;\n  }\n\n  proyectoSelected(){\n    console.log('Selecciona categorias', this.proyecto_id);\n    this.getCategories(this.proyecto_id);\n  }\n\n  categorySelected(){\n    // Obtenemos requisiciones existentes y generamos nuevo numero para la requisición\n    let proyectoCategoria_id : any = this.newProject.controls[\"categoria_id\"].value\n    let codigo_categoria : any = 0;\n    let arrayProyectoCategoria : any;\n\n    arrayProyectoCategoria = this.datasourceCategories.filter(e => e.proyectocategoria_id == proyectoCategoria_id);\n    codigo_categoria = arrayProyectoCategoria[0][\"codigo_proyectocategoria\"]\n    this.getrequisition(codigo_categoria);\n  }\n\n  validaCamposRequeridos() : boolean{\n    let valido : boolean = true;\n    valido = (this.newProject.get('proyecto_id').status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"categoria_id\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"requisicion_Numero\").status == 'INVALID') ? false : valido;\n\n    return valido;\n  }\n\n  save(form, event){\n\n    let arrayTodb : any;\n\n    if(this.validaCamposRequeridos() == false){\n      this.openSnackBar('debe capturar los campos requeridos', 'success');\n      return;\n    }\n\n    if(this.requisicionId == 0){\n      arrayTodb = { proyecto_id : this.proyecto_id,\n                  proyectocategoria_id : this.categoria_id,\n                  codigo : this.requisicion_Numero,\n                  fecha : moment(this.fecha, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n                  fo : this.fo,\n                  cargo : this.cargo,\n                  no_pym : this.no_pym\n                };\n\n      // INSERTA REQUISICION HDR\n      this.insertRequisition(arrayTodb)\n    }\n    else{\n      arrayTodb = {proyecto_id : this.proyecto_id,\n        proyectocategoria_id : this.categoria_id,\n        requisicion_id : this.requisicion_id,\n        fecha : moment(this.fecha, 'YYYY-MM-DD').format('YYYY-MM-DD')\n      };\n\n        // Actualiza registro EDICION\n        this.updateRequisition(arrayTodb);\n    }\n  }\n\n  fechaInicial(event){\n    console.log('fecha', this.fecha);\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n  // ====================\n  // UTILERIAS\n  // ====================\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.UploadDataExcel = new MatTableDataSource(part);\n    this.UploadDataExcel.sort = this.sort;\n    this.UploadDataExcel.paginator = this.paginator;\n  }\n\n  filtrar(event: Event) {\n    const filtro = (event.target as HTMLInputElement).value;\n    this.UploadDataExcel.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n  // ====================\n  // LLAMADAS A SERVICIOS\n  // ====================\n\n  getEnabledCategories(){\n    // Actualiza registro NUEVO\n    this._projectCategoryservice.getProjectCateogryById(1).subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('CATEGORIAS', res);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n  getProyectos(){\n    // Obtiene proyectos\n    this._projectService.getProjectAll().subscribe(\n      res=> {\n        this.datasourcePorjects = res;\n        console.log('PROYECTOS', res);\n      },\n      error => console.log(\"error consulta proyectos\",error)\n    )\n  }\n\n  getrequisition(codigo_categoria : any){\n\n    let categoria_id : any = this.newProject.controls[\"categoria_id\"].value\n    let codigo_requisicion : any = 0;\n    let arrayRequisition : any;\n    let arrayCodigoCategoria : any;\n    \n    // Proyectos registrados\n    this._requisitionservice.getRequisitionAll().subscribe(\n      res=> {\n        this.datasourceRequisition = new MatTableDataSource(res);\n\n        if(this.datasourceRequisition.filteredData.length == 0){\n          codigo_requisicion = codigo_categoria + '-1'; \n        }else{\n          // Obtener requisicion en la que se mas alta y determinar cual sigue\n          arrayRequisition = this.datasourceRequisition.filteredData.filter(e => e.proyectocategoria_id == categoria_id);\n          if(arrayRequisition.length > 0){\n            let cantidadRequisition = arrayRequisition.length\n            codigo_requisicion = codigo_categoria + '-' + (cantidadRequisition + 1)\n          }else{\n            // obtener codigo_categoria\n            arrayCodigoCategoria = 1;\n            codigo_requisicion = codigo_categoria + '-1'; \n          }\n\n        }\n\n        // this.newProject.controls[\"requisicion_Numero\"].setValue = codigo_categoria + codigo_requisicion;\n        this.requisicion_Numero = codigo_requisicion;\n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n\n  getCategories(proyecto : any){\n    // Obtiene categorias \n    this._projectCategoryservice.getProjectCateogryById(proyecto).subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('PROYECTOS - CATEGORIAS', res);\n      },\n      error => console.log(\"error consulta cateogorias\",error)\n    )\n  }\n\n  insertRequisition(arrayTodb : any){\n    this._requisitionservice.insertRequisition(arrayTodb).subscribe(\n      res=> {\n        console.log('Se inserto con éxito', res);\n\n        // INSERTA REQUISICIONES DET\n        this.insertRequisitionDet(res);\n      },\n      error => console.log(\"error alta de proyectos\",error)\n    )\n  }\n\n  getRequisitionDetail(arrayTodb){\n\n    let arrayRequsitionDetail : any;\n    let arrayRequsitionToTable : any[] = []; //MatTableDataSource<requisitionModelDetail>;\n\n    this._requisitionservice.getRequisitionDetail(arrayTodb).subscribe(\n      res=> {\n        arrayRequsitionDetail = res;\n\n        arrayRequsitionDetail.forEach(element => {\n          arrayRequsitionToTable.push({requisition_Id: 0, SKU : element.sku, cantidad : element.cantidad, um : element.unidad_medida, descripcion : element.descripcion, medida : element.medida})\n        });\n\n        this.UploadDataExcel = new MatTableDataSource(arrayRequsitionToTable);\n        console.log('Se obtiene detalle de requisición', res);\n      },\n      error => console.log(\"error alta de proyectos\",error)\n    )\n  }\n\n  updateRequisition(arrayTodb : any){\n    console.log('ACTUALIZA REQUISICION');\n        // this._projectService.updateProjects(arrayTodb).subscribe(\n        // res=> {\n        // console.log('Se edito con éxito', res);\n        // },\n        // error => console.log(\"error consulta regiones\",error)\n        // )\n        // this.dialogRef.close();\n  }\n\n  insertRequisitionDet(requisicionId : any){\n    // Obtiene Requisicion Registrada\n    let datasourceRequsition : MatTableDataSource<requisitionModel>\n    let requisitionIdMaximo : any = \"0\";\n    let arrayToDb : any;\n\n      this.UploadDataExcel.filteredData.forEach(element => {\n        arrayToDb = {requisicioninternadetalle_id : 0\n            , requisicioninterna_id : requisicionId\n            , cantidad : element.cantidad\n            , sku : element.SKU\n            , codigo_requisicioninterna : ''\n            , unidad_medida : element.um\n            , descripcion : element.descripcion\n            , existencia_almacen : 0\n            , cantidad_comprar : element.cantidad\n            , medida : (element.medida != undefined) ? element.medida : ''\n            , color : (element.color != undefined) ? element.color : ''\n            , otras_especificaciones : (element.otras_especificaciones != undefined) ? element.otras_especificaciones : ''\n            , estado : true\n            , cotizado : false\n        }\n\n        console.log('DETALLE DETALLE DETALLE', arrayToDb);\n\n        // Inserta Proyecto Categoria\n        this._requisitionservice.insertRequisitionDetail(arrayToDb).subscribe(\n          res=> {\n            console.log('REQUISICIONES DETALLE', res);\n            this.openSnackBar('Se genero el la requisición exitosamente', 'success');\n            // this.dialogRef.close();\n          },\n          error => console.log(\"error al insertar proyectos categorias\",error)\n        )\n        \n        arrayToDb = null;\n\n      });\n  }\n\n}\n","<div fxLayout=\"row\">\n    <h4>Catálogo de proveedores</h4>\n  </div>\n  <br>\n  <div mat-dialog-content-example [formGroup]=\"newProject\">\n    <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div><br>Nombre</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n              <input [type]=\"nombre\" matInput class=\"form-control form-control-line control\" formControlName=\"nombre\" [(ngModel)]=\"nombre\" disabled >\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('nombre').valid && newProject.get('nombre').touched\" class=\"help-block\" style=\"color: red;\"> El nombre es requerido</span>\n            </div>\n        </div>\n        <div fxFlex.gt-sm=\"10%\" >\n          <div></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n          <div><br>Dirección</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"direccion\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"direccion\" [(ngModel)]=\"direccion\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('direccion').valid && newProject.get('direccion').touched\" class=\"help-block\" style=\"color: red;\"> La dirección es requerida</span>\n          </div>\n        </div>\n      </div>\n\n      <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div><br>RFC</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n              <input [type]=\"rfc\" matInput class=\"form-control form-control-line control\" formControlName=\"rfc\" [(ngModel)]=\"rfc\" disabled >\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('rfc').valid && newProject.get('rfc').touched\" class=\"help-block\" style=\"color: red;\"> El RFC es requerido</span>\n            </div>\n        </div>\n        <div fxFlex.gt-sm=\"10%\" >\n          <div></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n          <div><br>Contacto</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"contacto\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"contacto\" [(ngModel)]=\"contacto\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('contacto').valid && newProject.get('contacto').touched\" class=\"help-block\" style=\"color: red;\"> El contacto es requerido</span>\n          </div>\n        </div>\n      </div>\n\n      <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div><br>Ciudad</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n              <input [type]=\"ciudad\" matInput class=\"form-control form-control-line control\" formControlName=\"ciudad\" [(ngModel)]=\"ciudad\" disabled >\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('ciudad').valid && newProject.get('ciudad').touched\" class=\"help-block\" style=\"color: red;\"> La ciudad es requerida</span>\n            </div>\n        </div>\n        <div fxFlex.gt-sm=\"10%\" >\n          <div></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n          <div><br>Estado</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"estado\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"estado\" [(ngModel)]=\"estado\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('estado').valid && newProject.get('estado').touched\" class=\"help-block\" style=\"color: red;\"> El estado es requerido</span>\n          </div>\n        </div>\n      </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { supplierModel } from 'src/app/models/supplier.model';\nimport { supplyservice } from '../../services/supplier.service';\n\n@Component({\n  selector: 'app-supplier-detail',\n  templateUrl: './supplier-detail.component.html',\n  styleUrls: ['./supplier-detail.component.css']\n})\nexport class SupplierDetailComponent implements OnInit {\n\n// =========================\n// DECLARACIONES\n// =========================\nnombre : string;\ndireccion : string;\nrfc : string;\ncontacto : string;\nciudad : string;\nestado : string;\n\npublic newProject: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<supplierModel>\n    , private _supplyservice : supplyservice\n    , private formBuilder: FormBuilder\n\n  ) {\n\n    this.newProject = this.formBuilder.group({\n      nombre :  new FormControl('', [Validators.required]),\n      direccion: new FormControl('', [Validators.required]),\n      rfc: new FormControl('', [Validators.required]),\n      contacto: new FormControl('', [Validators.required]),\n      ciudad: new FormControl('', [Validators.required]),\n      estado: new FormControl('', [Validators.required]),\n    });\n   }\n\n// =========================\n// PROCEDIMIENTOS\n// =========================\n\n  ngOnInit(): void {\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n  save(form, event){\n\n    let arrayToDb : any;\n\n    arrayToDb = ({ \n      proveedorid : 0\n        , nombre : form.controls[\"nombre\"].value\n        , direccion : form.controls[\"direccion\"].value\n        , rfc : form.controls[\"rfc\"].value \n        , ciudad : form.controls[\"ciudad\"].value\n        , estado : form.controls[\"estado\"].value\n        , contacto : form.controls[\"contacto\"].value\n        // , vigencia : '2050-01-01'\n      });\n\n    this.insertSupplier(arrayToDb);\n    \n  }\n\n// =========================\n// UTILERIAS\n// =========================\n\n\n// =========================\n// SERVICIOS\n// =========================\n\ninsertSupplier(arrayToDb : any){\n\n  // Inserta Proveedores\n  this._supplyservice.insertsupply(arrayToDb).subscribe(\n    res=> {\n      console.log('PROVEEDORES', res);\n    },\n    error => console.log(\"error al insertar proveedores\",error)\n  )\n\n}\n\nupdateSupplier(arrayToDb : any){\n\n  // Inserta Proveedores\n  this._supplyservice.updatesupply(arrayToDb).subscribe(\n    res=> {\n      console.log('PROVEEDORES', res);\n    },\n    error => console.log(\"error al actualizar proveedores\",error)\n  )\n\n}\n\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { PortalModule } from '@angular/cdk/portal';\n\n/**\n * NgModule that includes all Material modules that are required to serve the demo-app.\n */\n@NgModule({\n    exports: [\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatBottomSheetModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatTableModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatBadgeModule,\n        MatSidenavModule,\n        MatSlideToggleModule,\n        MatSliderModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatNativeDateModule,\n        CdkTableModule,\n        A11yModule,\n        BidiModule,\n        CdkAccordionModule,\n        ObserversModule,\n        OverlayModule,\n        PlatformModule,\n        PortalModule\n    ]\n})\nexport class DemoMaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router\n  ) {\n\n  }\n\n  canActivate() {\n    if (localStorage.getItem('token_access') != null) {\n      return true;\n    } else {\n      this.router.navigate(['/auth/signin']);\n      return false;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { WorkBook, WorkSheet } from 'xlsx';\n\n\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheethml.sheet;charset=UTF-8';\nconst EXCEL_EXTENSION = '.xlsx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExcelServiceService {\n\n  constructor() { }\n\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\n\n    const worksheet: WorkSheet = XLSX.utils.json_to_sheet(json);\n\n    const workbook: WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n\n    this.saveAsExcelFile(excelBuffer, excelFileName);\n\n  }\n\n  saveAsExcelFile(buffer: any, fileName: string): void {\n    const data: Blob = new Blob([buffer], { type: EXCEL_TYPE });\n\n    FileSaver.saveAs(data, `${fileName}_export_${new Date().getTime()}${EXCEL_EXTENSION}`);\n  }\n\n}\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport {ChangeDetectorRef, Component,OnDestroy,AfterViewInit} from '@angular/core';\nimport { MenuItems } from '../../shared/menu-items/menu-items';\n\n\n/** @title Responsive sidenav */\n@Component({\n  selector: 'app-full-layout',\n  templateUrl: 'full.component.html',\n  styleUrls: []\n})\nexport class FullComponent implements OnDestroy, AfterViewInit {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public menuItems: MenuItems\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n  ngAfterViewInit() {}\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<div class=\"main-container\"> \n    <!-- ============================================================== -->\n    <!-- Topbar - style you can find in header.scss -->\n    <!-- ============================================================== -->\n    <mat-toolbar color=\"primary\" class=\"topbar telative\">\n        <!-- ============================================================== -->\n        <!-- Logo - style you can find in header.scss -->\n        <!-- ============================================================== -->\n        <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" href=\"index.html\">\n                <!-- Logo icon --><b>\n                    <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\n                    <!-- Dark Logo icon -->\n                    <img src=\"assets/images/logo-icon.png\" alt=\"homepage\" class=\"dark-logo\">\n                    <!-- Light Logo icon -->\n                    <img src=\"assets/images/logo-light-icon.png\" alt=\"homepage\" class=\"light-logo\">\n                    <!-- <img src=\"assets/images/logo-comercial20.jpeg\" alt=\"homepage\" class=\"light-logo\"> -->\n                </b>\n                <!--End Logo icon -->\n                <!-- Logo text -->\n                <span fxShow=\"false\" fxShow.gt-xs>\n                 <!-- dark Logo text -->\n                 <img src=\"assets/images/logo-text.png\" alt=\"homepage\" class=\"dark-logo\">\n                 <!-- Light Logo text -->    \n                 <img src=\"assets/images/logo-light-text.png\" class=\"light-logo\" alt=\"homepage\">\n                </span> </a>\n        </div>\n        <!-- ============================================================== -->\n        <!-- sidebar toggle -->\n        <!-- ============================================================== -->\n        \n        <button mat-icon-button (click)=\"snav.toggle()\" value=\"sidebarclosed\">\n            <mat-icon>menu</mat-icon>\n        </button>\n        <span fxFlex></span>\n        <!-- ============================================================== -->\n        <!-- app header component - style you can find in header.scss / header.component.ts-->\n        <!-- ============================================================== -->\n        <app-header></app-header>\n    </mat-toolbar>\n    <!-- ============================================================== -->\n    <!-- End Topbar - style you can find in pages.scss -->\n    <!-- ============================================================== -->\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\">\n        <!-- ============================================================== -->\n        <!-- Sidebar - style you can find in sidebar.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav #snav id=\"snav\" class=\"dark-sidebar pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\" fixedTopGap=\"0\" [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\"  >\n            \n                <app-sidebar></app-sidebar>\n               \n            \n        </mat-sidenav>\n        <!-- ============================================================== -->\n        <!-- Sidebar - style you can find in sidebar.scss -->\n        <!-- ============================================================== -->\n        \n        <!-- ============================================================== -->\n        <!-- Page container - style you can find in pages.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav-content class=\"page-wrapper\">\n                 \n                <div class=\"page-content\">\n                   \n                        <router-outlet><app-spinner></app-spinner></router-outlet>\n                    \n                </div>    \n               \n        </mat-sidenav-content>\n        <!-- ============================================================== -->\n        <!-- Page container - style you can find in pages.scss -->\n        <!-- ============================================================== -->\n    </mat-sidenav-container>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: []\n})\nexport class AppHeaderComponent {}\n","        \n<!-- ============================================================== -->\n<!-- Profile - style you can find in header.scss -->\n<!-- ============================================================== -->\n<!-- <a href=\"https://wrappixel.com/templates/materialpro-angular-dashboard/\" class=\" m-r-20 hidden-sm-up\" mat-raised-button color=\"warn\">Upgrade To Pro</a> -->\n<!-- <button [matMenuTriggerFor]=\"profile\" mat-icon-button class=\"m-r-5\"> <img src=\"assets/images/users/1.jpg\" alt=\"user\" class=\"profile-pic\"> </button> -->\n<mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\n    <button mat-menu-item>\n        <mat-icon>settings</mat-icon> Settings </button>\n    <button mat-menu-item>\n        <mat-icon>account_box</mat-icon> Profile </button>\n    <button mat-menu-item>\n        <mat-icon>notifications_off</mat-icon> Disable notifications </button>\n    <button mat-menu-item>\n        <mat-icon>exit_to_app</mat-icon> Sign Out </button>\n</mat-menu>\n\n","<!-- ============================================================== -->\n<!-- sidebar -->\n<!-- ============================================================== -->\n <div class=\"user-profile\" style=\"background: url(assets/images/background/user-info.jpg) no-repeat;\">\n    <!-- User profile image -->\n    <div class=\"profile-img\"> <img src=\"assets/images/users/profile.png\" alt=\"user\"> </div>\n    <!-- User profile text-->\n    <!-- ============================================================== -->\n    <!-- Profile - style you can find in header.scss -->\n    <!-- ============================================================== -->\n    <div class=\"profile-text\"><a [matMenuTriggerFor]=\"sdprofile\" class=\"\"> Markarn Doe <i class=\"ti-angle-down font-12 m-l-5\"></i></a></div>\n    <mat-menu #sdprofile=\"matMenu\" class=\"mymegamenu\">\n        <button mat-menu-item>\n            <mat-icon>settings</mat-icon> Settings </button>\n        <button mat-menu-item>\n            <mat-icon>account_box</mat-icon> Profile </button>\n        <button mat-menu-item>\n            <mat-icon>notifications_off</mat-icon> Disable notifications </button>\n        <button mat-menu-item>\n            <mat-icon>exit_to_app</mat-icon> Sign Out </button>\n    </mat-menu>\n    \n</div>\n<mat-nav-list appAccordion>\n    <mat-list-item appAccordionLink *ngFor=\"let menuitem of menuItems.getMenuitem()\" routerLinkActive=\"selected\" group=\"{{menuitem.state}}\">\n        <a class=\"\" appAccordionToggle [routerLink]=\"['/', menuitem.state]\" *ngIf=\"menuitem.type === 'link'\">\n            <mat-icon>{{ menuitem.icon }}</mat-icon> \n            <span>{{ menuitem.name }}</span> \n            <span fxFlex></span> \n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span> \n        </a>\n\n        \n    </mat-list-item>\n\n</mat-nav-list>","import { ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: []\n})\nexport class AppSidebarComponent implements OnDestroy {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public menuItems: MenuItems\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n}\n","export interface AuthI {\n    id: number;\n    nombreusuario: string;\n    correo: string;\n    contrasegna: string;\n    perfilid: number;\n    perfil: string;\n    token: string;\n  }\n  \n  export class AuthC implements AuthI {\n  \n    id: number = null;\n    nombreusuario = '';\n    correo = '';\n    contrasegna = '';\n    perfilid = null;\n    perfil = '';\n    token = '';\n  }","export interface UserI {\n    id: number;\n    perfil: number;\n    fraccionamiento_id: number;\n    nombre_perfil: string;\n    nombre_completo: string;\n    nombre: string;\n    apellido_paterno: string;\n    apellido_materno: string;\n    foto: string;\n    correo: string;\n    telefono: string;\n    contrasegna: string;\n    token: string;\n    estado: number;\n    nombre_estado: string;\n  }\n  \n  export class UserC implements UserI {\n    id: number = null;\n    perfil: number = null;\n    fraccionamiento_id: number = null;\n    nombre_perfil: string = '';\n    nombre_completo: string = '';\n    nombre: string = '';\n    apellido_paterno: string = '';\n    apellido_materno: string = '';\n    foto: string = '';\n    correo: string = '';\n    telefono: string = '';\n    contrasegna: string = '';\n    token: string = '';\n    estado: number = null;\n    nombre_estado: string = '';\n  }\n  \n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories-list',\n  templateUrl: './categories-list.component.html',\n  styleUrls: ['./categories-list.component.css']\n})\nexport class CategoriesListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>categories-list works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { loginservice } from '../../services/login/login.service';\nimport { UserI, UserC } from '../../models/users'; // './../../../../models/user';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AESEncryptService } from 'src/app/services/aesencrypt.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  providers: [loginservice]\n})\nexport class LoginComponent implements OnInit {\n  msg = '';\n  public userinterface: UserI;\n  public spinerShow: boolean; \n  loginform: FormGroup;\n\n  constructor(private service: loginservice,\n    private routes: Router,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private route: Router,\n    private cryptService: AESEncryptService,\n    private toastr: ToastrService\n    ) { \n      this.spinerShow = false;\n      this.userinterface = new UserC();\n    }\n\n  ngOnInit() {\n    this.clearForm();\n  }\n\n  loginReq() {\n\n    this.spinerShow = true;\n\n    const pswdEncryp = this.cryptService.encrypt(this.loginform.value.contrasegna);\n\n    this.loginform.value.contrasegna = pswdEncryp;\n\n    this.authService.loginReq(this.loginform.value).subscribe(\n      response => {\n        \n        localStorage.setItem('token_access', response.token);\n        \n        this.spinerShow = false;\n\n        this.route.navigate(['/dashboard']);\n      },\n      err => {\n        if (err.status === 401) {\n          this.toastr.error('Credenciales de acceso inválidas', 'ERROR');\n        }\n\n        if (err.status === 0 || err.status === 500) {\n          this.toastr.error('No se puede comunicar con el servidor', 'ERROR');\n        }\n        console.error(err);\n        this.spinerShow = false;\n      }\n    );\n  }\n\n  clearForm() {\n    this.loginform = this.formBuilder.group({\n      nombreusuario : ['', Validators.required],\n      contrasegna : ['', Validators.required]\n    });\n  }\n}\n","<div class=\"login-register\" style=\"background-image:url(assets/images/background/login-register.jpg);\">\n    <div class=\"login-register-box\">\n        <!-- <div class=\"bg-info text-white m-b-10 text-center p-t-10 p-b-10 alert-box\">\n            <span class=\"m-r-10\">Username : admin</span> |\n            <span class=\"m-l-10\">Password : admin123</span>\n        </div> -->\n        <mat-card class=\"m-t-10\">\n        <mat-card-content>\n        <form id=\"loginform\" [formGroup]=\"loginform\" (ngSubmit)=\"loginReq()\">\n            <div class=\"text-center\">\n                <img alt=\"homepage\" src=\"assets/images/logo-comercial20.jpeg\">\n                <!-- <h4 class=\"m-t-0\">Login to App</h4> -->\n            </div>\n            <div *ngIf=\"msg\" class=\"bg-danger p-10 text-white\">{{ msg }}</div>\n            <div fxLayout=\"row wrap\">\n                <!-- col full-->\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n                    <mat-form-field>\n                    <input matInput placeholder=\"Usuario\" formControlName=\"nombreusuario\" required=\"\" #u1>\n                    </mat-form-field>\n                </div>\n                <!-- col full-->\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n                    <mat-form-field>\n                    <input matInput type=\"password\" placeholder=\"Clave\" formControlName=\"contrasegna\" required=\"\" #p2>\n                    </mat-form-field>\n                </div>\n                <!-- col half-->\n                <!-- <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\">\n                    <mat-checkbox color=\"warn\">Remember me</mat-checkbox>\n                </div> -->\n                <!-- col half-->\n                <!-- <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" class=\"text-right\">\n                    <a [routerLink]=\"['/authentication/forgot']\" class=\"link\">Forgot pwd?</a>\n                </div> -->\n                <!-- col full-->\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n                    <!-- <button mat-raised-button color=\"primary\" class=\"btn-block btn-lg m-t-20 m-b-20\" (click)=\"check(u1.value, p2.value)\" type=\"button\">Acceder</button> -->\n                    <button mat-raised-button color=\"primary\" class=\"btn-block btn-lg m-t-20 m-b-20\" (click)=\"loginReq()\" type=\"button\">Acceder</button>\n                </div>\n                <!-- col full-->\n                <!-- <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" class=\"text-center\">\n                    <span>Don't have an account?\n                        <a [routerLink]=\"['/authentication/register']\" class=\"text-info link\">Register</a>\n                    </span>\n                </div> -->\n            </div>\n        </form>\n        </mat-card-content>\n        </mat-card>\n    </div>\n</div>","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Proyectos</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarProyectos()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevoProyecto($event)\">Nuevo Proyecto</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n          <div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"codigo_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_proyecto}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"nombre_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Nombre </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.nombre_proyecto}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"fecha_inicial_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha Inicial </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha_inicial_proyecto | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"fecha_final_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha Final </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha_final_proyecto | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"nombre_cliente\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Cliente </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.nombre_cliente}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"responsable_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Responable </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.responsable_proyecto}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"presupuesto_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Presupuesto </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.presupuesto_proyecto}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"proyect_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\" hidden> proyecto_id  </th>\n                  <td mat-cell *matCellDef=\"let element\" hidden> {{element.proyecto_id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editProyecto(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n        </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component, OnInit, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport * as moment from 'moment';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { projectModel } from '../../../models/project.model';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-project-capture',\n  templateUrl: './project-capture.component.html',\n  styleUrls: ['./project-capture.component.css'],\n})\nexport class ProjectCaptureComponent implements OnInit {\n\n// ====================\n// DECLARACIONES\n// ====================\n\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n\n  displayedColumns = ['codigo_proyecto', 'nombre_proyecto', 'fecha_inicial_proyecto', 'fecha_final_proyecto', 'nombre_cliente', 'responsable_proyecto', 'presupuesto_proyecto', 'proyect_id', 'editar', 'categorias'];\n\n  projectData : any[] = [];\n  dataSourceShow : MatTableDataSource<projectModel>; //<any> = new MatTableDataSource\n  buscar:any;\n\n  @Output() filterChange = new EventEmitter();\n\n  constructor(public dialog: MatDialog\n          , MatTableModule : MatTableModule\n          , private _projectService : projectservice\n          , private _excelService : ExcelServiceService) { \n    // this.displayedColumns = ['proyecto']\n  }\n\n// ====================\n// PROCEDIMIENTOS\n// ====================\n  ngOnInit(): void {\n    this.getProjects();\n  }\n\n  getProjects(){\n\n    // Proyectos registrados\n    this._projectService.getProjectAll().subscribe(\n      res=> {\n        console.log('Proyectos', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n\n  }\n\n  onOpenDialogAddProject() {\n    \n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      //title: 'NUEVO PROYECTO',\n     \n    }\n    dialogConfig.width = '450px';\n    dialogConfig.height = '350px';\n    dialogConfig.disableClose = true;\n\n  }\n\n  editProyecto(element : any, event){\n    console.log('Edita', element);\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'EDITAR PROYECTO',\n      arrayData : element,\n      projectId : element.proyecto_id\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(ProjectCaptureDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  addCategorias(proyectoId : any, event){\n    console.log('Alta de categoras', proyectoId);\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'CATEGORIAS',\n      arrayData : this.dataSourceShow,\n      projectId: proyectoId\n     \n    }\n    dialogConfig.width = '1400px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(CategoriesComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  nuevoProyecto(event){\n    console.log('Alta de categoras');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'NUEVO PROYECTO',\n      arrayData : null,\n      projectId: 0\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(ProjectCaptureDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  descargarProyectos(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , nombre_proyecto : element.nombre_proyecto\n                              , fecha_inicial_proyecto : moment(element.fecha_inicial_proyecto, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , fecha_final_proyecto : moment(element.fecha_final_proyecto, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , nombre_cliente : element.nombre_cliente\n                              , responsable_proyecto : element.responsable_proyecto\n                              , presupuesto_proyecto : element.presupuesto_proyecto\n      })\n    });\n\n    \n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Proyectos');  \n  }\n\n// ====================\n// UTILERIAS\n// ====================\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n  filtrar(event: Event) {\n    const filtro = (event.target as HTMLInputElement).value;\n    this.dataSourceShow.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Ordenes de compra</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaOrdenDeCompra($event)\">Nueva Orde de Compra</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n        <div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- Orden de compra Id -->\n                <ng-container matColumnDef=\"ordendecompra_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\" hidden> <span>Id</span> </th>\n                  <td mat-cell *matCellDef=\"let element\" hidden> {{element.ordendecompra_id}} </td>\n                </ng-container>\n\n                <!-- Codigo orden de compra -->\n                <ng-container matColumnDef=\"ordendecompra_codigo\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Orden de compra</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.ordendecompra_codigo}} </td>\n                </ng-container>\n                \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"cotizacion_codigo\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Cotización</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.cotizacion_codigo}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"proveedor_nombre\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Proveedor </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.proveedor_nombre}} </td>\n                </ng-container>\n                \n                \n                <!-- <ng-container matColumnDef=\"Requisicion_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Requisicion_Id}} </td>\n                </ng-container> -->\n\n                <ng-container matColumnDef=\"ordendecompra_fecha\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.ordendecompra_fecha | date: ' dd-MM-yyyy'}} </td>\n                </ng-container> \n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Estatus}} </td>\n                </ng-container>\n\n                <!-- Editar -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Cancelar -->\n                <ng-container matColumnDef=\"cancelar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Cancelar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"cancelaODC(element, $event)\">Cancelar</button> </td>\n                </ng-container>\n\n                <!-- Autorizar -->\n                <ng-container matColumnDef=\"autorizar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Autorizar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"aproveODC(element, $event)\">Autorizar</button> </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\nimport { getMatFormFieldPlaceholderConflictError } from '@angular/material/form-field';\nimport { poModel } from 'src/app/models/po.model';\nimport { purchaseOrderservice } from 'src/app/services/PurchaseOrder.service';\nimport { PoDetailComponent } from 'src/app/components/po-detail/po-detail.component';\n\n@Component({\n  selector: 'app-po-list',\n  templateUrl: './po-list.component.html',\n  styleUrls: ['./po-list.component.css']\n})\nexport class PoListComponent implements OnInit {\n  // =====================\n  // DECLARACIONES\n  // =====================\n\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<poModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['ordendecompra_id', 'ordendecompra_codigo', 'cotizacion_codigo', 'proveedor_nombre', 'ordendecompra_fecha', 'Estatus', 'editar', 'cancelar', 'autorizar'];\n  \n  buscar:any;\n\n  constructor(public dialog: MatDialog\n          , private _excelService : ExcelServiceService\n          , private _purchaseOrderService : purchaseOrderservice) { }\n\n\n  // =====================\n  // PROCEDIMIENTOS\n  // =====================\n\n  ngOnInit(): void {\n\n    this.getPO_Hdr();\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , categoria : element.codigo_proyectocategoria\n                              , requisicion : element.requisicioninterna_id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaOrdenDeCompra(event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'ORDEN DE COMPRA',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '1500px';\n    dialogConfig.height = '9000px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(PoDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editRequisicion(element, event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    console.log('autoriza registro', element);\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : element,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(PoDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  aproveODC(element, event){\n    console.log('Aprueba orden de compra');\n\n    const dialogConfig = new MatDialogConfig();\n\n    console.log('aprueba odc', element)\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'ORDEN DE COMPRA',\n      arrayData : element,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '1500px';\n    dialogConfig.height = '9000px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(PoDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  cancelaODC(element, event : Event){\n    this.updateODCStatus(element, 4);\n  }\n\n  // =====================\n  // UTILERIAS\n  // =====================\n\n\n  filtrar(event: Event) {\n    const filtro = (event.target as HTMLInputElement).value;\n    this.dataSourceShow.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n  // =====================\n  // CONSILTA DE SERVICIOS\n  // =====================\n\n  getPO_Hdr(){\n    // Proyectos registrados\n    this._purchaseOrderService.getPOAll().subscribe(\n      res=> {\n        console.log('PurchaseOrder', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n\n  cancelODCToDB(element){\n    this._purchaseOrderService.putPOCancel(element.ordendecompra_id).subscribe(\n      res=> {\n        console.log('Se inserto con éxito', res);\n        \n      },\n      error => console.log(\"error alta de proyectos\",error)\n    )\n  }\n\n  updateODCStatus(element, statusToDb){\n    let arrayToDb : any;\n\n    arrayToDb = ({ordendecompra_id : element.ordendecompra_id, estatus : statusToDb, usuario : 1})\n\nconsole.log('cancelado', element)\n\n    this._purchaseOrderService.updatePOStatus(arrayToDb).subscribe(\n      res=> {\n        console.log('Se inserto con éxito', res);\n        \n      },\n      error => console.log(\"error alta de proyectos\",error)\n    )\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Cotizaciones</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaCotizacion($event)\">Nueva Cotización</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"codigo_requisicioninterna\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Requisición</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_requisicioninterna}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"codigo\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Cotización </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo}} </td>\n                </ng-container>\n                \n                <!-- Fecha Column -->\n                <ng-container matColumnDef=\"fecha\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Estado Column -->\n                <ng-container matColumnDef=\"estado\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estado </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.estado}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editCotizacion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { quotationListModel } from 'src/app/models/quotation-list.model';\nimport { quotationservice } from 'src/app/services/quotation/quotation.service';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { QuotationDetailComponent } from 'src/app/components/quotations/quotation-detail/quotation-detail.component';\nimport { QuotationDetailFilesComponent } from 'src/app/components/quotations/quotation-detail-files/quotation-detail-files.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\nimport { element } from 'protractor';\n\n@Component({\n  selector: 'app-quotation-list',\n  templateUrl: './quotation-list.component.html',\n  styleUrls: ['./quotation-list.component.css']\n})\nexport class QuotationListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<quotationListModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['codigo_requisicioninterna', 'codigo', 'fecha', 'estado', 'editar'];\n  \n  constructor(public dialog: MatDialog\n    , private _excelService : ExcelServiceService\n    , private _quotationService : quotationservice) { }\n\n  ngOnInit(): void {\n\n    this.getQuotationAll();\n\n    // let arrayData : any;\n\n    // arrayData = [{codigo_requisicioninterna : 1, codigo : 1, fecha : '2020-01-01', estado : 'ACTIVO', requisicioninterna_id : 1, cotizacion_id : 1}]\n    // this.dataSourceShow = new MatTableDataSource(arrayData);\n\n  }\n\n  getQuotationAll(){\n    // Proyectos registrados\n    this._quotationService.getQuotationAll().subscribe(\n      res=> {\n        console.log('Cotizaciones', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n  \n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({cotizacion_id : element.cotizacion_id\n                              , requisicioninterna_id : element.requisicioninterna_id\n                              , codigo_requisicioninterna : element.codigo_requisicioninterna\n                              , codigo : element.codigo\n                              , fecha : moment(element.fecha, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estado : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaCotizacion(evetn){\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'COTIZACIONES',\n      arrayData : null,\n      requisicionId: 0,\n      cotizacionId : 0\n     \n    }\n    dialogConfig.width = '1300px';\n    dialogConfig.height = '900px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(QuotationDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editCotizacion(element : any, event){\n    console.log('Edita cotizaciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'COTIZACIONES',\n      arrayData : element,\n      requisicionId: 0,\n      cotizacionId : 0\n     \n    }\n    dialogConfig.width = '1200px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(QuotationDetailFilesComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event : Event){\n    const filtro = (event.target as HTMLInputElement).value;\n    this.dataSourceShow.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Requisiciones</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <!-- <ng-container matColumnDef=\"codigo_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_proyecto}} </td>\n                </ng-container> -->\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"codigo_proyectocategoria\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Proyecto-Categoría </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_proyectocategoria}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"codigo\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"fecha\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha de Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"estado\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\">\n                    <ng-container *ngIf=\"element.estado == true\">ACTIVO</ng-container>\n                  <ng-container *ngIf=\"element.estado == false\">INACTIVO</ng-container>\n                  </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Consultar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Consultar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <!-- <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container> -->\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport * as moment from 'moment';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n\n@Component({\n  selector: 'app-requisition-list',\n  templateUrl: './requisition-list.component.html',\n  styleUrls: ['./requisition-list.component.css']\n})\nexport class RequisitionListComponent implements OnInit {\n// =================\n// DECLARACIONES\n// =================\n\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  // displayedColumns = ['proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_Requisicion', 'Estatus', 'editar'];\n  displayedColumns = ['codigo_proyectocategoria', 'codigo', 'fecha', 'estado', 'editar'];\n  \n  constructor(public dialog: MatDialog\n          , private _excelService : ExcelServiceService\n          , private _requisitionService : requisitionservice) { }\n\n\n  // =================\n  // PROCEDIMIENTOS\n  // =================\n\n  ngOnInit(): void {\n\n    this.getrequisition();\n      \n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({\n                              // proyecto_id : element.proyecto_id\n                              categoria : element.codigo_proyectocategoria\n                              , requisicion : element.requisicioninterna_id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaRequisicion(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 0\n     \n    }\n    dialogConfig.width = '1300px';\n    dialogConfig.height = '900px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editRequisicion(element){\n    console.log('Editar de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : element,\n      requisicionId: element.requisicioninterna_id\n     \n    }\n    dialogConfig.width = '1200px';\n    dialogConfig.height = '900px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event : Event){\n    const filtro = (event.target as HTMLInputElement).value;\n    this.dataSourceShow.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n  // =================\n  // UTILERIAS\n  // =================\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n  // =================\n  // SERVICIOS\n  // =================\n\n  getrequisition(){\n    // Proyectos registrados\n    this._requisitionService.getRequisitionAll().subscribe(\n      res=> {\n        console.log('Requisiciones', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Almacén</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"proyecto_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.proyecto_id}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"Categoria_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Categoria </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Categoria_Id}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Requisicion_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Requisicion_Id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Fecha_Requisicion\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha de Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Fecha_Requisicion | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Estatus}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <!-- <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container> -->\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-storage-invoice-list',\n  templateUrl: './storage-invoice-list.component.html',\n  styleUrls: ['./storage-invoice-list.component.css']\n})\nexport class StorageInvoiceListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_Requisicion', 'Estatus', 'editar'];\n  \n  constructor(public dialog: MatDialog\n    , private _excelService : ExcelServiceService) { }\n\n  ngOnInit(): void {\n    let arrayData : any;\n\n    arrayData = [{proyecto_id : 1, Categoria_Id : 1, Requisicion_Id : 1, Fecha_Requisicion : '2020-01-01', Estatus : 'ACTIVO'}]\n    this.dataSourceShow = new MatTableDataSource(arrayData);\n\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , categoria : element.codigo_proyectocategoria\n                              , requisicion : element.requisicioninterna_id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaRequisicion(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editRequisicion(event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Revisión en Almacén</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <!-- <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div> -->\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"requisicion_Codigo\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Requisición</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.requisicion_Codigo}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"descripcion\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Descripción </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.descripcion}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.estado}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator> -->\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { warehouseModel } from 'src/app/models/warehouse.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-warehouse-review',\n  templateUrl: './warehouse-review.component.html',\n  styleUrls: ['./warehouse-review.component.css']\n})\nexport class WarehouseReviewComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<warehouseModel>\n\n@ViewChild(MatSort,{static:true}) sort: MatSort;\n@ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n@Output() filterChange = new EventEmitter();\n\ndisplayedColumns = ['requisicion_Codigo', 'descripcion', 'Estatus', 'editar'];\n\n  constructor(public dialog: MatDialog\n    , private _excelService : ExcelServiceService) { }\n\n  ngOnInit(): void {\n    let arrayData : any;\n\n    arrayData = [{requisicion_Codigo : 1, descripcion : 'Descripción', estado : 'ACTIVO'}]\n    this.dataSourceShow = new MatTableDataSource(arrayData);\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({requisicion_Codigo : element.requisicion_Codigo\n                              , descripcion : element.descripcion\n                              , estatus : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { poModel } from 'src/app/models/po.model';\nimport { environment } from 'src/environments/environment';\n\nconst headers : HttpHeaders = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    \n@Injectable({\n    providedIn: 'root'\n})\n\nexport class purchaseOrderservice {\n\n  constructor(protected http: HttpClient) { }\n\n    getPOAll() {\n        return this.http.get<poModel[]>(environment.urlapi + environment.apiContextDrivers + 'PurchaseOrder/lista', {headers});\n    }\n\n    getPOById(id : any) {\n        return this.http.get<poModel[]>(environment.urlapi + environment.apiContextDrivers + 'PurchaseOrder/' + id, {headers});\n    }\n\n    getPODetail(id : any) {\n        return this.http.get<poModel[]>(environment.urlapi + environment.apiContextDrivers + 'PurchaseOrder/detalle/' + id, {headers});\n    }\n\n    insertPO_Hdr(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'PurchaseOrder/registrar',arrayToDb, {headers});\n    }\n\n    insertPODetail(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'PurchaseOrder/registrar/detalle',arrayToDb, {headers});\n    }\n\n    putPOCancel(id : any) {\n        return this.http.put(environment.urlapi + environment.apiContextDrivers + 'PurchaseOrder/cancelar/' + id, '', {headers});\n    }\n\n    updatePOStatus(arrayToDb : any) {\n        return this.http.post(environment.urlapi + environment.apiContextDrivers + 'PurchaseOrder/estado', arrayToDb, {headers});\n    }\n\n\n}","import { Injectable } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable({\n\n  providedIn: 'root'\n\n})\n\nexport class AESEncryptService {\n\n  secretKey = 'C64GF-QGX43-2PMM3-KFGKM-Q66PR';\n\n  constructor() { }\n\n  encrypt(value: string): string{\n\n    return CryptoJS.HmacSHA256(value, this.secretKey.trim()).toString();\n\n  }\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { GlobalUrl } from 'src/app/services/webapiurl';\nimport { AuthI } from '../models/auth.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public auth: AuthI;\n  public url: string;\n\n  constructor(private http: HttpClient) {\n    // this.url = GlobalUrl.url_webapi;\n    this.url = environment.urlapi + environment.apiContextDrivers\n  }\n\n  loginReq(auth: any): Observable<any> {\n    return this.http.post(this.url + 'auth/login', auth);\n  }\n\n  resetPasswordReq(resetPasswordReq: any): Observable<any> {\n    return this.http.post(this.url + 'auth/resetpasswordrequest', resetPasswordReq);\n  }\n\n  changePasswordReq(changePasswordReq: any): Observable<any> {\n    return this.http.post(this.url + 'auth/changepassword', changePasswordReq);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { observable, Observable, of } from 'rxjs';\nimport { categoryModel } from 'src/app/models/category.model';\nimport { environment } from 'src/environments/environment';\nimport { from } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\nconst headers : HttpHeaders = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class categoryservice {\n\n  constructor(protected http: HttpClient) { }\n\n    getCategoryAll() {\n        return this.http.get<categoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'Category/lista', {headers});\n    }\n\n    getCategoryById(id : number) {\n        return this.http.get<categoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'Category/' + id, {headers});\n    }\n\n    updateProjects(arrayToDb : any) {\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'Category/actualizar',arrayToDb, {headers});\n    }\n\n    insertProjects(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Category/registrar',arrayToDb, {headers});\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { customerModel } from 'src/app/models/customer.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst headers : HttpHeaders = new HttpHeaders()\r\n    .set('Content-Type', 'application/json')\r\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\r\n    \r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class customerservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getcustomerAll() {\r\n        return this.http.get<customerModel[]>(environment.urlapi + environment.apiContextDrivers + 'Customer/lista', {headers});\r\n    }\r\n\r\n    getcustomerById(id : any) {\r\n        return this.http.get<customerModel[]>(environment.urlapi + environment.apiContextDrivers + 'Customer/' + id, {headers});\r\n    }\r\n\r\n    insertcustomer(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Customer/registrar',arrayToDb, {headers});\r\n    }\r\n\r\n    updatecustomer(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi + environment.apiContextDrivers + 'Customer/actualizar', arrayToDb, {headers});\r\n    }\r\n\r\n    putcustomerStatus(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi + environment.apiContextDrivers + 'Customer/activoinactivo', arrayToDb, {headers});\r\n    }\r\n\r\n}","import { Injectable, EventEmitter } from '@angular/core';\nimport jwt_decode from \"jwt-decode\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DataService {\n\n  public userid: string;\n  public username: string;\n  public fullname: string;\n  public email: string;\n  public branchofficeid: string;\n  public branchoffice: string;\n  public profileid: string;\n  public profile: string;\n  public employid: string;\n  public employcategory: string;\n  public companyid: string;\n  public country: string;\n\n  loginChanged = new EventEmitter<boolean>();\n\n    constructor(\n    ) {\n      this.DecodeToken();\n    }\n\n    public DecodeToken() {\n\n      if (localStorage.getItem('token_access') !== null) {\n        const decodeJWT = jwt_decode(localStorage.getItem('token_access'));\n\n        this.userid = decodeJWT['usuario_id'];\n        this.username = decodeJWT['usuario'];\n        this.fullname = decodeJWT['nombre_completo'];\n        this.email = decodeJWT['correo'];\n        this.branchofficeid = decodeJWT['oficina_principalid'];\n        this.branchoffice = decodeJWT['oficina_principal'];\n        this.profileid = decodeJWT['perfil_usuarioid'];\n        this.profile = decodeJWT['perfil_usuario'];\n        this.employid = decodeJWT['empleado_id'];\n        this.employcategory = decodeJWT['categoria_empleado'];\n        this.companyid = decodeJWT['empresa'];\n        this.country = decodeJWT['pais'];\n\n        localStorage.setItem('perfil_usuario', this.profile);\n      }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class loginservice {\n\n  constructor() { }\n\n  checkusernameandpassword(uname: string, pwd: string) {\n    if (uname === 'admin' && pwd === 'admin123') {\n      localStorage.setItem('username', 'admin');\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { observable, Observable, of } from 'rxjs';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { environment } from 'src/environments/environment';\nimport { from } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\nconst headers : HttpHeaders = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class projectCategoryservice {\n\n  constructor(protected http: HttpClient) { }\n\n    getProjectCateogryAll() {\n        return this.http.get<projectCategoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/lista', {headers});\n    }\n\n    // getProjectCateogryById(proyectoId : any) {\n    //     return this.http.get<projectCategoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/' + proyectoId);\n    // }\n\n    getProjectCateogryById(proyectoId : any) {\n        return this.http.get<projectCategoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/' + proyectoId, {headers});\n    }\n\n    updateProjectCatgory(arrayToDb : any) {\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'ProjectCategory/actualizar',arrayToDb, {headers});\n    }\n\n    insertProjects(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'ProjectCategory/registrar',arrayToDb, {headers});\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { observable, Observable, of } from 'rxjs';\nimport { projectModel } from 'src/app/models/project.model';\nimport { environment } from 'src/environments/environment';\nimport { from } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\nconst headers : HttpHeaders = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class projectservice {\n\n  constructor(protected http: HttpClient) { \n      \n  }\n\n    getProjectAll() {\n        return this.http.get<projectModel[]>(environment.urlapi + environment.apiContextDrivers + 'Project/lista', {headers});\n    }\n\n    updateProjects(arrayToDb : any) {\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'Project/actualizar',arrayToDb, {headers});\n    }\n\n    insertProjects(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Project/registrar',arrayToDb, {headers});\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { observable, Observable, of } from 'rxjs';\nimport { quotationListModel } from 'src/app/models/quotation-list.model';\nimport { environment } from 'src/environments/environment';\nimport { from } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\nconst headers : HttpHeaders = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class quotationservice {\n\n  constructor(protected http: HttpClient) { }\n\n    getQuotationAll() {\n        return this.http.get<quotationListModel[]>(environment.urlapi + environment.apiContextDrivers + 'Quote/lista', {headers});\n    }\n\n    getQuotationById(id : any) {\n        return this.http.get<quotationListModel[]>(environment.urlapi + environment.apiContextDrivers + 'Quote/' + id, {headers});\n    }\n\n    getQuotationDetail(id : any) {\n        return this.http.get<quotationListModel[]>(environment.urlapi + environment.apiContextDrivers + 'Quote/detalle/' + id, {headers});\n    }\n\n    insertQuotation(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Quote/registrar',arrayToDb, {headers});\n    }\n\n    insertQuotationDetail(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Quote/registrar/detalle',arrayToDb, {headers});\n    }\n\n    insertQuotationCancel(id : any) {\n        // return this.http.put(environment.urlapi + environment.apiContextDrivers + 'Quotation/cancelar' + id);\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { observable, Observable, of } from 'rxjs';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionModelDetail } from 'src/app/models/requisition.model.detail';\nimport { environment } from 'src/environments/environment';\nimport { from } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\nconst headers : HttpHeaders = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class requisitionservice {\n\n  constructor(protected http: HttpClient) { }\n\n    getRequisitionAll() {\n        return this.http.get<requisitionModel[]>(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/lista', {headers});\n    }\n\n    getRequisitionById(id : any) {\n        return this.http.get<requisitionModel[]>(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/' + id, {headers});\n    }\n\n    getRequisitionDetail(id : any) {\n        return this.http.get<requisitionModelDetail[]>(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/detalle/' + id, {headers});\n    }\n\n    insertRequisition(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'InternalRequisition/registrar',arrayToDb, {headers});\n    }\n\n    insertRequisitionDetail(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'InternalRequisition/registrar/detalle',arrayToDb, {headers});\n    }\n\n    insertRequisitionCancel(id : any) {\n        // return this.http.put(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/cancelar' + id);\n    }\n\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { supplierModel } from 'src/app/models/supplier.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst headers : HttpHeaders = new HttpHeaders()\r\n    .set('Content-Type', 'application/json')\r\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\r\n    \r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class supplyservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getsupplyAll() {\r\n        return this.http.get<supplierModel[]>(environment.urlapi + environment.apiContextDrivers + 'Provider/lista', {headers});\r\n    }\r\n\r\n    getsupplyById(id : any) {\r\n        return this.http.get<supplierModel[]>(environment.urlapi + environment.apiContextDrivers + 'Provider/' + id, {headers});\r\n    }\r\n\r\n    insertsupply(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Provider/registrar',arrayToDb, {headers});\r\n    }\r\n\r\n    updatesupply(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi + environment.apiContextDrivers + 'Provider/actualizar', arrayToDb, {headers});\r\n    }\r\n\r\n    putsupplyStatus(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi + environment.apiContextDrivers + 'Provider/activoinactivo', arrayToDb, {headers});\r\n    }\r\n\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GlobalUrl } from './webapiurl';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  public url: string;\n\n  constructor(private http: HttpClient) {\n    // this.url = GlobalUrl.url_webapi;\n    this.url = environment.urlapi + environment.apiContextDrivers\n  }\n\n  getAllUser(): Observable<any> {\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.get(this.url + 'empleado/listar/todos/', {headers});\n  }\n\n  getAllUserGP(): Observable<any> {\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.get(this.url + 'empleado/listar/todos/nombres', {headers});\n  }\n\n  getAllEmployee(): Observable<any> {\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.get(this.url + 'empleado/listar/brasil/', {headers});\n  }\n\n  postRegisterEmployee(employeeObj: any): Observable<any> {\n    const params = JSON.stringify(employeeObj);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/registrar/', params, {headers});\n  }\n\n  postUpdateEmployee(employeeObj: any): Observable<any> {\n    const params = JSON.stringify(employeeObj);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/actualizar/' + employeeObj.resourceid, params, {headers});\n  }\n\n  postDeleteEmployee(resourceid: any): Observable<any> {\n    const params = JSON.stringify(resourceid);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/eliminar/' + resourceid, params, {headers});\n  }\n\n  postRegisterUser(userObj: any): Observable<any> {\n    const params = JSON.stringify(userObj);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/registrar/usuario/', params, {headers});\n  }\n\n  postUpdateUser(userObj: any): Observable<any> {\n    const params = JSON.stringify(userObj);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/actualizar/usuario/' + userObj.resourceid, params, {headers});\n  }\n\n  postDeleteUser(userid: any): Observable<any> {\n    const params = JSON.stringify(userid);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/eliminar/usuario/' + userid, params, {headers});\n  }\n\n  getPermission(userid): Observable<any> {\n    const params = JSON.stringify(userid);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/permiso/listar/' + userid, params, {headers});\n  }\n\n  getCountry(userid): Observable<any> {\n    const params = JSON.stringify(userid);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/pais/listar/' + userid, params, {headers});\n  }\n\n  getSubProjectJoinUser(userid): Observable<any> {\n    const params = JSON.stringify(userid);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/buscar_subproyecto/' + userid, params, {headers});\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  AfterViewInit,\n  AfterContentChecked\n} from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\nimport { filter } from 'rxjs/operators';\n\n@Directive({\n  selector: '[appAccordion]'\n})\nexport class AccordionDirective implements AfterContentChecked {\n  protected navlinks: Array<AccordionLinkDirective> = [];\n\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link !== selectedLink) {\n        link.selected = false;\n      }\n    });\n  }\n\n  addLink(link: AccordionLinkDirective): void {\n    this.navlinks.push(link);\n  }\n\n  removeGroup(link: AccordionLinkDirective): void {\n    const index = this.navlinks.indexOf(link);\n    if (index !== -1) {\n      this.navlinks.splice(index, 1);\n    }\n  }\n\n  checkOpenLinks() {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link.group) {\n        const routeUrl = this.router.url;\n        const currentUrl = routeUrl.split('/');\n        if (currentUrl.indexOf(link.group) > 0) {\n          link.selected = true;\n          this.closeOtherLinks(link);\n        }\n      }\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe(e => this.checkOpenLinks());\n  }\n\n  constructor(private router: Router) {\n    setTimeout(() => this.checkOpenLinks());\n  }\n}\n","import { Directive, HostListener, Inject } from '@angular/core';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\n\n@Directive({\n  selector: '[appAccordionToggle]'\n})\nexport class AccordionAnchorDirective {\n  protected navlink: AccordionLinkDirective;\n\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\n    this.navlink = navlink;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(e: any) {\n    this.navlink.toggle();\n  }\n}\n","import {\n  Directive,\n  HostBinding,\n  Inject,\n  Input,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\n\nimport { AccordionDirective } from './accordion.directive';\n\n@Directive({\n  selector: '[appAccordionLink]'\n})\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\n  @Input()\n  public group: any;\n\n  @HostBinding('class.selected')\n  @Input()\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  set selected(value: boolean) {\n    this._selected = value;\n    if (value) {\n      this.nav.closeOtherLinks(this);\n    }\n  }\n\n  protected _selected: boolean=false;\n  protected nav: AccordionDirective;\n\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\n    this.nav = nav;\n  }\n\n  ngOnInit(): any {\n    this.nav.addLink(this);\n  }\n\n  ngOnDestroy(): any {\n    this.nav.removeGroup(this);\n  }\n\n  toggle(): any {\n    this.selected = !this.selected;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface Menu {\n  state: string;\n  name: string;\n  type: string;\n  icon: string;\n}\n\nconst MENUITEMS = [\n  { state: 'dashboard', name: 'Dashboard', type: 'link', icon: 'av_timer' },\n  { state: 'project', name: 'Proyecto', type: 'link', icon: 'view_comfy' },\n  { state: 'requisition', name: 'Requisiciones', type: 'link', icon: 'view_list' },\n  { state: 'quotation', name: 'Cotizaciones', type: 'link', icon: 'web' },\n  { state: 'po', name: 'Orden de compra', type: 'link', icon: 'tab' },\n  { state: 'storage', name: 'Almacén', type: 'link', icon: 'assignment_turned_in' },\n  { state: 'warehouse-review', name: 'Revisión en Almacén', type: 'link', icon: 'assignment_turned_in' },\n  { state: 'customer', name: 'Clientes', type: 'link', icon: 'assignment_turned_in' },\n  { state: 'supplier', name: 'Proveedores', type: 'link', icon: 'assignment_turned_in' },\n  // { state: 'button', type: 'link', name: 'Buttons', icon: 'crop_7_5' },\n  // { state: 'grid', type: 'link', name: 'Grid List', icon: 'view_comfy' },\n  // { state: 'lists', type: 'link', name: 'Lists', icon: 'view_list' },\n  // { state: 'menu', type: 'link', name: 'Menu', icon: 'view_headline' },\n  // { state: 'tabs', type: 'link', name: 'Tabs', icon: 'tab' },\n  // { state: 'stepper', type: 'link', name: 'Stepper', icon: 'web' },\n  // {\n  //   state: 'expansion',\n  //   type: 'link',\n  //   name: 'Expansion Panel',\n  //   icon: 'vertical_align_center'\n  // },\n  // { state: 'chips', type: 'link', name: 'Chips', icon: 'vignette' },\n  // { state: 'toolbar', type: 'link', name: 'Toolbar', icon: 'voicemail' },\n  // {\n  //   state: 'progress-snipper',\n  //   type: 'link',\n  //   name: 'Progress snipper',\n  //   icon: 'border_horizontal'\n  // },\n  // {\n  //   state: 'progress',\n  //   type: 'link',\n  //   name: 'Progress Bar',\n  //   icon: 'blur_circular'\n  // },\n  // {\n  //   state: 'dialog',\n  //   type: 'link',\n  //   name: 'Dialog',\n  //   icon: 'assignment_turned_in'\n  // },\n  // { state: 'tooltip', type: 'link', name: 'Tooltip', icon: 'assistant' },\n  // { state: 'snackbar', type: 'link', name: 'Snackbar', icon: 'adb' },\n  // { state: 'slider', type: 'link', name: 'Slider', icon: 'developer_mode' },\n  // {\n  //   state: 'slide-toggle',\n  //   type: 'link',\n  //   name: 'Slide Toggle',\n  //   icon: 'all_inclusive'\n  // }\n];\n\n@Injectable()\nexport class MenuItems {\n  getMenuitem(): Menu[] {\n    return MENUITEMS;\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MenuItems } from './menu-items/menu-items';\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\n\n\n@NgModule({\n  declarations: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective\n  ],\n  exports: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective\n   ],\n  providers: [ MenuItems ]\n})\nexport class SharedModule { }\n","import { Component, Input, OnDestroy, Inject, ViewEncapsulation } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-spinner',\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\n        <div class=\"spinner\">\n          <div class=\"double-bounce1\"></div>\n          <div class=\"double-bounce2\"></div>\n        </div>\n    </div>`,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SpinnerComponent implements OnDestroy {\n  public isSpinnerVisible = true;\n\n  @Input()\n  public backgroundColor = 'rgba(0, 115, 170, 0.69)';\n\n  constructor(\n    private router: Router,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.router.events.subscribe(\n      event => {\n        if (event instanceof NavigationStart) {\n          this.isSpinnerVisible = true;\n        } else if (\n          event instanceof NavigationEnd ||\n          event instanceof NavigationCancel ||\n          event instanceof NavigationError\n        ) {\n          this.isSpinnerVisible = false;\n        }\n      },\n      () => {\n        this.isSpinnerVisible = false;\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.isSpinnerVisible = false;\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  urlapi : 'https://sap-comercial.azurewebsites.net/',\n  apiContextDrivers : 'api/'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","var map = {\n\t\"./af\": 26431,\n\t\"./af.js\": 26431,\n\t\"./ar\": 81286,\n\t\"./ar-dz\": 1616,\n\t\"./ar-dz.js\": 1616,\n\t\"./ar-kw\": 9759,\n\t\"./ar-kw.js\": 9759,\n\t\"./ar-ly\": 43160,\n\t\"./ar-ly.js\": 43160,\n\t\"./ar-ma\": 62551,\n\t\"./ar-ma.js\": 62551,\n\t\"./ar-sa\": 79989,\n\t\"./ar-sa.js\": 79989,\n\t\"./ar-tn\": 6962,\n\t\"./ar-tn.js\": 6962,\n\t\"./ar.js\": 81286,\n\t\"./az\": 15887,\n\t\"./az.js\": 15887,\n\t\"./be\": 14572,\n\t\"./be.js\": 14572,\n\t\"./bg\": 3276,\n\t\"./bg.js\": 3276,\n\t\"./bm\": 93344,\n\t\"./bm.js\": 93344,\n\t\"./bn\": 58985,\n\t\"./bn-bd\": 83990,\n\t\"./bn-bd.js\": 83990,\n\t\"./bn.js\": 58985,\n\t\"./bo\": 94391,\n\t\"./bo.js\": 94391,\n\t\"./br\": 46728,\n\t\"./br.js\": 46728,\n\t\"./bs\": 5536,\n\t\"./bs.js\": 5536,\n\t\"./ca\": 41043,\n\t\"./ca.js\": 41043,\n\t\"./cs\": 70420,\n\t\"./cs.js\": 70420,\n\t\"./cv\": 33513,\n\t\"./cv.js\": 33513,\n\t\"./cy\": 6771,\n\t\"./cy.js\": 6771,\n\t\"./da\": 47978,\n\t\"./da.js\": 47978,\n\t\"./de\": 46061,\n\t\"./de-at\": 25204,\n\t\"./de-at.js\": 25204,\n\t\"./de-ch\": 2653,\n\t\"./de-ch.js\": 2653,\n\t\"./de.js\": 46061,\n\t\"./dv\": 85,\n\t\"./dv.js\": 85,\n\t\"./el\": 8579,\n\t\"./el.js\": 8579,\n\t\"./en-au\": 25724,\n\t\"./en-au.js\": 25724,\n\t\"./en-ca\": 10525,\n\t\"./en-ca.js\": 10525,\n\t\"./en-gb\": 52847,\n\t\"./en-gb.js\": 52847,\n\t\"./en-ie\": 67216,\n\t\"./en-ie.js\": 67216,\n\t\"./en-il\": 39305,\n\t\"./en-il.js\": 39305,\n\t\"./en-in\": 73364,\n\t\"./en-in.js\": 73364,\n\t\"./en-nz\": 79130,\n\t\"./en-nz.js\": 79130,\n\t\"./en-sg\": 11161,\n\t\"./en-sg.js\": 11161,\n\t\"./eo\": 50802,\n\t\"./eo.js\": 50802,\n\t\"./es\": 40328,\n\t\"./es-do\": 45551,\n\t\"./es-do.js\": 45551,\n\t\"./es-mx\": 75615,\n\t\"./es-mx.js\": 75615,\n\t\"./es-us\": 64790,\n\t\"./es-us.js\": 64790,\n\t\"./es.js\": 40328,\n\t\"./et\": 96389,\n\t\"./et.js\": 96389,\n\t\"./eu\": 52961,\n\t\"./eu.js\": 52961,\n\t\"./fa\": 26151,\n\t\"./fa.js\": 26151,\n\t\"./fi\": 7997,\n\t\"./fi.js\": 7997,\n\t\"./fil\": 58898,\n\t\"./fil.js\": 58898,\n\t\"./fo\": 37779,\n\t\"./fo.js\": 37779,\n\t\"./fr\": 28174,\n\t\"./fr-ca\": 3287,\n\t\"./fr-ca.js\": 3287,\n\t\"./fr-ch\": 38867,\n\t\"./fr-ch.js\": 38867,\n\t\"./fr.js\": 28174,\n\t\"./fy\": 50452,\n\t\"./fy.js\": 50452,\n\t\"./ga\": 45014,\n\t\"./ga.js\": 45014,\n\t\"./gd\": 74127,\n\t\"./gd.js\": 74127,\n\t\"./gl\": 72124,\n\t\"./gl.js\": 72124,\n\t\"./gom-deva\": 6444,\n\t\"./gom-deva.js\": 6444,\n\t\"./gom-latn\": 37953,\n\t\"./gom-latn.js\": 37953,\n\t\"./gu\": 76604,\n\t\"./gu.js\": 76604,\n\t\"./he\": 1222,\n\t\"./he.js\": 1222,\n\t\"./hi\": 74235,\n\t\"./hi.js\": 74235,\n\t\"./hr\": 622,\n\t\"./hr.js\": 622,\n\t\"./hu\": 37735,\n\t\"./hu.js\": 37735,\n\t\"./hy-am\": 90402,\n\t\"./hy-am.js\": 90402,\n\t\"./id\": 59187,\n\t\"./id.js\": 59187,\n\t\"./is\": 30536,\n\t\"./is.js\": 30536,\n\t\"./it\": 35007,\n\t\"./it-ch\": 94667,\n\t\"./it-ch.js\": 94667,\n\t\"./it.js\": 35007,\n\t\"./ja\": 62093,\n\t\"./ja.js\": 62093,\n\t\"./jv\": 80059,\n\t\"./jv.js\": 80059,\n\t\"./ka\": 66870,\n\t\"./ka.js\": 66870,\n\t\"./kk\": 80880,\n\t\"./kk.js\": 80880,\n\t\"./km\": 1083,\n\t\"./km.js\": 1083,\n\t\"./kn\": 68785,\n\t\"./kn.js\": 68785,\n\t\"./ko\": 21721,\n\t\"./ko.js\": 21721,\n\t\"./ku\": 37851,\n\t\"./ku.js\": 37851,\n\t\"./ky\": 1727,\n\t\"./ky.js\": 1727,\n\t\"./lb\": 40346,\n\t\"./lb.js\": 40346,\n\t\"./lo\": 93002,\n\t\"./lo.js\": 93002,\n\t\"./lt\": 64035,\n\t\"./lt.js\": 64035,\n\t\"./lv\": 56927,\n\t\"./lv.js\": 56927,\n\t\"./me\": 5634,\n\t\"./me.js\": 5634,\n\t\"./mi\": 94173,\n\t\"./mi.js\": 94173,\n\t\"./mk\": 86320,\n\t\"./mk.js\": 86320,\n\t\"./ml\": 11705,\n\t\"./ml.js\": 11705,\n\t\"./mn\": 31062,\n\t\"./mn.js\": 31062,\n\t\"./mr\": 92805,\n\t\"./mr.js\": 92805,\n\t\"./ms\": 11341,\n\t\"./ms-my\": 59900,\n\t\"./ms-my.js\": 59900,\n\t\"./ms.js\": 11341,\n\t\"./mt\": 37734,\n\t\"./mt.js\": 37734,\n\t\"./my\": 19034,\n\t\"./my.js\": 19034,\n\t\"./nb\": 9324,\n\t\"./nb.js\": 9324,\n\t\"./ne\": 46495,\n\t\"./ne.js\": 46495,\n\t\"./nl\": 70673,\n\t\"./nl-be\": 76272,\n\t\"./nl-be.js\": 76272,\n\t\"./nl.js\": 70673,\n\t\"./nn\": 72486,\n\t\"./nn.js\": 72486,\n\t\"./oc-lnc\": 46219,\n\t\"./oc-lnc.js\": 46219,\n\t\"./pa-in\": 2829,\n\t\"./pa-in.js\": 2829,\n\t\"./pl\": 78444,\n\t\"./pl.js\": 78444,\n\t\"./pt\": 53170,\n\t\"./pt-br\": 66117,\n\t\"./pt-br.js\": 66117,\n\t\"./pt.js\": 53170,\n\t\"./ro\": 96587,\n\t\"./ro.js\": 96587,\n\t\"./ru\": 39264,\n\t\"./ru.js\": 39264,\n\t\"./sd\": 42135,\n\t\"./sd.js\": 42135,\n\t\"./se\": 95366,\n\t\"./se.js\": 95366,\n\t\"./si\": 93379,\n\t\"./si.js\": 93379,\n\t\"./sk\": 46143,\n\t\"./sk.js\": 46143,\n\t\"./sl\": 196,\n\t\"./sl.js\": 196,\n\t\"./sq\": 21082,\n\t\"./sq.js\": 21082,\n\t\"./sr\": 91621,\n\t\"./sr-cyrl\": 98963,\n\t\"./sr-cyrl.js\": 98963,\n\t\"./sr.js\": 91621,\n\t\"./ss\": 41404,\n\t\"./ss.js\": 41404,\n\t\"./sv\": 55685,\n\t\"./sv.js\": 55685,\n\t\"./sw\": 3872,\n\t\"./sw.js\": 3872,\n\t\"./ta\": 54106,\n\t\"./ta.js\": 54106,\n\t\"./te\": 39204,\n\t\"./te.js\": 39204,\n\t\"./tet\": 83692,\n\t\"./tet.js\": 83692,\n\t\"./tg\": 86361,\n\t\"./tg.js\": 86361,\n\t\"./th\": 31735,\n\t\"./th.js\": 31735,\n\t\"./tk\": 1568,\n\t\"./tk.js\": 1568,\n\t\"./tl-ph\": 96129,\n\t\"./tl-ph.js\": 96129,\n\t\"./tlh\": 13759,\n\t\"./tlh.js\": 13759,\n\t\"./tr\": 81644,\n\t\"./tr.js\": 81644,\n\t\"./tzl\": 90875,\n\t\"./tzl.js\": 90875,\n\t\"./tzm\": 16878,\n\t\"./tzm-latn\": 11041,\n\t\"./tzm-latn.js\": 11041,\n\t\"./tzm.js\": 16878,\n\t\"./ug-cn\": 74357,\n\t\"./ug-cn.js\": 74357,\n\t\"./uk\": 74810,\n\t\"./uk.js\": 74810,\n\t\"./ur\": 86794,\n\t\"./ur.js\": 86794,\n\t\"./uz\": 28966,\n\t\"./uz-latn\": 77959,\n\t\"./uz-latn.js\": 77959,\n\t\"./uz.js\": 28966,\n\t\"./vi\": 35386,\n\t\"./vi.js\": 35386,\n\t\"./x-pseudo\": 23156,\n\t\"./x-pseudo.js\": 23156,\n\t\"./yo\": 68028,\n\t\"./yo.js\": 68028,\n\t\"./zh-cn\": 9330,\n\t\"./zh-cn.js\": 9330,\n\t\"./zh-hk\": 89380,\n\t\"./zh-hk.js\": 89380,\n\t\"./zh-mo\": 60874,\n\t\"./zh-mo.js\": 60874,\n\t\"./zh-tw\": 96508,\n\t\"./zh-tw.js\": 96508\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}