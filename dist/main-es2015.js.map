{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/components/categories/categories/categories.component.ts","./src/app/components/categories/categories/categories.component.html","./src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component.ts","./src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component.html","./src/app/components/requisitions/requisition-detail/requisition-detail.component.ts","./src/app/components/requisitions/requisition-detail/requisition-detail.component.html","./src/app/demo-material-module.ts","./src/app/helpers/excel-service.service.ts","./src/app/layouts/full/full.component.ts","./src/app/layouts/full/full.component.html","./src/app/layouts/full/header/header.component.ts","./src/app/layouts/full/header/header.component.html","./src/app/layouts/full/sidebar/sidebar.component.html","./src/app/layouts/full/sidebar/sidebar.component.ts","./src/app/pages/categories/categories-list/categories-list.component.ts","./src/app/pages/categories/categories-list/categories-list.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/projects/project-capture/project-capture.component.ts","./src/app/pages/projects/project-capture/project-capture.component.html","./src/app/pages/purchaseOrder/po-list/po-list.component.ts","./src/app/pages/purchaseOrder/po-list/po-list.component.html","./src/app/pages/quotation/quotation-list/quotation-list.component.ts","./src/app/pages/quotation/quotation-list/quotation-list.component.html","./src/app/pages/requisition/requisition-list/requisition-list.component.ts","./src/app/pages/requisition/requisition-list/requisition-list.component.html","./src/app/pages/storageInvoice/storage-invoice-list/storage-invoice-list.component.ts","./src/app/pages/storageInvoice/storage-invoice-list/storage-invoice-list.component.html","./src/app/services/category/category.service.ts","./src/app/services/login/login.service.ts","./src/app/services/projectCtegory/projectCateogry.service.ts","./src/app/services/projects/project.service.ts","./src/app/services/requisition/requisition.service.ts","./src/app/shared/accordion/accordion.directive.ts","./src/app/shared/accordion/accordionanchor.directive.ts","./src/app/shared/accordion/accordionlink.directive.ts","./src/app/shared/accordion/index.ts","./src/app/shared/menu-items/menu-items.ts","./src/app/shared/shared.module.ts","./src/app/shared/spinner.component.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/moment/locale|sync|/^/.*$","ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|crypto","ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|fs","ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|stream"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {}\r\n","<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<router-outlet><app-spinner></app-spinner></router-outlet>","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\r\nimport { AppRoutes } from './app.routing';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\r\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DemoMaterialModule } from './demo-material-module';\r\nimport { LoginComponent } from './pages/login/login.component';  \r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { SpinnerComponent } from './shared/spinner.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatFormFieldModule} from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { CategoriesComponent } from './components/categories/categories/categories.component';\r\nimport { CategoriesListComponent } from './pages/categories/categories-list/categories-list.component';\r\nimport { ProjectCaptureDetailComponent } from '../app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\r\nimport { ProjectCaptureComponent } from '../app/pages/projects/project-capture/project-capture.component';\r\nimport { ReactiveFormsModule} from '@angular/forms';\r\nimport { RequisitionListComponent } from './pages/requisition/requisition-list/requisition-list.component';\r\nimport { RequisitionDetailComponent } from './components/requisitions/requisition-detail/requisition-detail.component';\r\nimport { QuotationListComponent } from './pages/quotation/quotation-list/quotation-list.component';\r\nimport { PoListComponent } from './pages/purchaseOrder/po-list/po-list.component';\r\nimport { StorageInvoiceListComponent } from './pages/storageInvoice/storage-invoice-list/storage-invoice-list.component';\r\n// import { Notification } from './components/notification/notification.component/notification.component.component';\r\n// import { NotificationComponent } from './components/notification/notification/notification.component' \r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FullComponent,\r\n    AppHeaderComponent,\r\n    SpinnerComponent,\r\n    AppSidebarComponent,\r\n    CategoriesComponent,\r\n    LoginComponent,\r\n    CategoriesListComponent,\r\n    ProjectCaptureDetailComponent,\r\n    ProjectCaptureComponent,\r\n    RequisitionListComponent,\r\n    RequisitionDetailComponent,\r\n    QuotationListComponent,\r\n    PoListComponent,\r\n    StorageInvoiceListComponent\r\n    // ,\r\n    // Notification.ComponentComponent,\r\n    // NotificationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    DemoMaterialModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot(AppRoutes, {useHash: true})\r\n  ],\r\n  exports:[ MatTableModule ],\r\n  providers: [\r\n    {\r\n      provide: LocationStrategy,\r\n      useClass: PathLocationStrategy\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\n\r\nexport const AppRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FullComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'login',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: '',\r\n        loadChildren:\r\n          () => import('./material-component/material.module').then(m => m.MaterialComponentsModule)\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\r\n      },\r\n      {\r\n        path: 'project',\r\n        loadChildren: () => import('./pages/projects/project-capture/project.module').then(m => m.ProjectModule)\r\n      },\r\n      {\r\n        path: 'categories',\r\n        loadChildren: () => import('./pages/categories/categories-list/categories.module').then(m => m.CategoriesModule)\r\n      },\r\n      {\r\n        path: 'requisition',\r\n        loadChildren: () => import('./pages/requisition/requisition-list/requisition.module').then(m => m.RequisitionModule)\r\n      },\r\n      {\r\n        path: 'quotation',\r\n        loadChildren: () => import('./pages/quotation/quotation-list/quotation.module').then(m => m.QuotationModule)\r\n      },\r\n      {\r\n        path: 'po',\r\n        loadChildren: () => import('./pages/purchaseOrder/po-list/po.module').then(m => m.PoModule)\r\n      },\r\n      {\r\n        path: 'storage',\r\n        loadChildren: () => import('./pages/storageInvoice/storage-invoice-list/storage.module').then(m => m.StorageModule)\r\n      }\r\n    ]\r\n  },\r\n  {\r\n      path: 'login',\r\n      component: LoginComponent,\r\n  }\r\n];\r\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {MatListModule} from '@angular/material/list';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n  projectInfo : any;\n  projectId : any;\n\n  almacen : any = 1;\n  fecha_inicial : any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  proyecto_id : any = 0;\n  responsable : any = '';\n  presupuesto : any = 0;\n  activo : any = false;\n\n  displayedColumns: string[] = ['select','codigo_proyectocategoria', 'nombre_categoria', 'responsable', 'presupuesto', 'fecha_inicial', 'almacen_id', 'actualizar'];\n  datasourceProjectCategories : MatTableDataSource<projectCategoryModel>\n  newProject: FormGroup;\n  \n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n\n  constructor(public dialogRef: MatDialogRef<projectCategoryModel>\n      , @Inject(MAT_DIALOG_DATA) public data,public snackBar: MatSnackBar\n      , private _projectCategoryservice : projectCategoryservice\n      , private formBuilder: FormBuilder) { \n        this.projectInfo = data.arrayData;\n        this.projectId = data.projectId;\n\n        this.newProject = this.formBuilder.group({\n          responsable: new FormControl(''),\n          presupuesto: new FormControl(''),\n          fecha_inicial: new FormControl('', Validators.required),\n          almacen: new FormControl(''),\n          activo: new FormControl('')\n      });\n      }\n\n  ngOnInit(): void {\n    \n    this.getproyectosCategorias();\n  }\n\n  getproyectosCategorias(){\n    // Proyectos categorias\n    this._projectCategoryservice.getProjectCateogryById(this.projectId).subscribe(\n      res=> {\n        // console.log('this.datasourceProjectCategories.filteredData[\"responsable\"]', this.datasourceProjectCategories.filteredData[\"responsable\"]);\n        console.log('Proyectos', res);\n        this.datasourceProjectCategories = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        this.datasourceProjectCategories.sort = this.sort;\n        // this.newProject.controls[\"responsable\"].setValue = this.datasourceProjectCategories.filteredData[\"responsable\"];\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n\n  }\n\n  ActivarDesactivar(element : any){\nconsole.log('Actualiza registro de activar y desactivar', element)\n  }\n\n  save(element : any){\n    let arraySaveData : any;\n\n    arraySaveData = {proyectocategoria_id : element.proyectocategoria_id\n          , codigo_proyectocategoria : element.codigo_proyectocategoria\n          , presupuesto : this.newProject.controls[\"presupuesto\"].value\n          , responsable : this.newProject.controls[\"responsable\"].value\n          , fecha_inicial : moment(element.fecha_inicial, 'YYYY-MM-DD').format('YYYY-MM-DD')\n          , almacen_id : 1 // element.almacen_id\n          , activo : element.activo}\n\n          console.log('datos a actualizar', arraySaveData)\n\n          this.insertProjectCategoryDet(arraySaveData);\n  }\n\n  insertProjectCategoryDet(arrayToDb : any){\n    // Inserta Proyecto Categoria\n    this._projectCategoryservice.updateProjectCatgory(arrayToDb).subscribe(\n      res=> {\n        console.log('ACTUALIZA PROYECO CATEGORIA', arrayToDb);\n      },\n      error => console.log(\"error al insertar proyectos categorias\",error)\n    )\n    \n  }\n\n  fechaInicial(event){\n\n  }\n\n  salir(){\n    this.dialogRef.close();\n  }\n\n}\n","<div fxLayout=\"row\" [formGroup]=\"newProject\">\n    <div fxFlex.gt-sm=\"95%\" >\n            <mat-card>\n              <mat-table [dataSource]=\"datasourceProjectCategories\" matSort class=\"mat-elevation-z8\" style=\"vertical-align: middle;\">\n                <ng-container matColumnDef=\"select\">\n                  <th mat-header-cell *matHeaderCellDef>\n                      <div style=\"width: 100%; text-align: left; vertical-align: middle;\">\n                          ACTIVAR\n                  </div>\n                    </th>\n                    <div style=\"width: 50px;\">\n                    <td mat-cell *matCellDef=\"let element; let i = index\">\n                      <mat-checkbox color=\"warn\"\n                                  formControlName=\"activo\" \n                                  (click)=\"$event.stopPropagation()\"\n                                  (change)=\"ActivarDesactivar(element.activo, $event)\"\n                                  >\n                                  <!--[checked]=\"selection.isSelected(element.proyecto_id)\"-->\n                                  <!--[(ngModel)]=\"element.activo\" -->\n                      </mat-checkbox>\n                    </td>\n                  </div>\n              </ng-container>\n\n              <!-- Position Column -->\n              <ng-container matColumnDef=\"codigo_proyectocategoria\" >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-column-20\"> <span class=\"order-th\">Número <mat-icon class=\"orage-icon\" aria-hidden=\"false\"></mat-icon></span> </th>\n                <td mat-cell *matCellDef=\"let element\" style=\"width: 500px;\"> {{element.codigo_proyectocategoria}} </td>\n              </ng-container>\n\n              <!-- Position Column -->\n              <ng-container matColumnDef=\"nombre_categoria\" >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-column-20\"> <span class=\"order-th\">Nombre <mat-icon class=\"orage-icon\" aria-hidden=\"false\"></mat-icon></span> </th>\n                <td mat-cell *matCellDef=\"let element\" style=\"width: 500px;\"> {{element.nombre_categoria}} </td>\n              </ng-container>\n\n              <!-- responsable Column -->\n              <ng-container matColumnDef=\"responsable\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Responable </th>\n                <td mat-cell *matCellDef=\"let element\"> <input type=\"text\" class=\"controltable100\" formControlName=\"responsable\" value=\"{{element.responsable}}\" placeholder=\"{{element.responsable}}\"> </td><!--[(ngModel)]=\"element.responsable\" -->\n              </ng-container>\n\n              <!-- presupuesto Column -->\n              <ng-container matColumnDef=\"presupuesto\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Presupuesto </th>\n                <td mat-cell *matCellDef=\"let element\"> <input type=\"text\" class=\"controltable100\" formControlName=\"presupuesto\" value=\"{{element.presupuesto}}\" placeholder=\"{{element.presupuesto}}\"> </td><!--[(ngModel)]=\"element.presupuesto\" -->\n              </ng-container>\n\n              <!-- fecha incial Column -->\n              <ng-container matColumnDef=\"fecha_inicial\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha incial </th>\n                <td mat-cell *matCellDef=\"let element\"> <div><mat-form-field appearance=\"fill\">\n                  <mat-label>Selecciona</mat-label>\n                  <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha_inicial\" (dateChange)=\"fechaInicial($event)\" class=\"controltable100\" [(ngModel)]=\"element.fecha_inicial\"><!--[(ngModel)]=\"element.fecha_inicial\" -->\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                  <mat-datepicker #picker></mat-datepicker>\n                </mat-form-field></div></td>\n              </ng-container>\n\n              <!-- almacen Column -->\n              <ng-container matColumnDef=\"almacen_id\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Almacen </th>\n                <td mat-cell *matCellDef=\"let element\"> <div><mat-select class=\"form-control\"  formControlName=\"almacen\" ><!--(selectionChange)=\"emitFilters($event, 'Enviado')\" [(ngModel)]=\"element.almacen\"-->\n                  <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n                  <mat-option value= \"1\">California</mat-option>\n                  <mat-option value= \"2\">Norte</mat-option>\n                  <mat-option value= \"3\">Centro</mat-option>\n                  </mat-select></div> </td>\n              </ng-container>\n\n              <!-- Email Column -->\n              <ng-container matColumnDef=\"actualizar\">\n                <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Actualizar </th>\n                <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"save(element, $event)\">Actualizar</button> </td>\n              </ng-container>\n              \n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n              </mat-table> \n            </mat-card>\n            <table>\n                <tr>\n                  <td style=\"width: 10px;\"></td>\n                  <td style=\"width: 300px;\"></td>\n                  <td style=\"width: 500px;\"></td>\n                  <td style=\"width: 100px;\"></td>\n                  <td style=\"width: 100px;\"><button mat-raised-button color=\"warn\" (click)=\"salir()\">Cerrar</button></td>\n                  <td style=\"width: 100px;\"></td>\n                  <td style=\"width: 10px;\"></td>\n                </tr>\n              </table>\n    </div>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport { from } from 'rxjs';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryModel } from '../../../models/category.model';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { ProjectCaptureComponent } from 'src/app/pages/projects/project-capture/project-capture.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\n\n@Component({\n  selector: 'app-project-capture-detail',\n  templateUrl: './project-capture-detail.component.html',\n  styleUrls: ['./project-capture-detail.component.css']\n})\nexport class ProjectCaptureDetailComponent implements OnInit {\n\t\n  fecha_inicial_proyecto:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  fecha_final_proyecto:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  nombre_proyecto : any = ''  \n  cliente : any = '0';\n  presupuesto_proyecto : any = 0;\n  responsable_proyecto : any = '';\n  centro_de_costo_proyecto : any = '0';\n  almacen : any = '0';\n  codigo_proyecto : any = '';\n  proeycto_id_mayor : number = 0;\n  proeycto_numero_mayor : number = 0;\n\n  numerotxt : any;\n  nombretxt : any;\n  clientecbo : any;  \n  presupuestotxt : any;\n  responsabletxt : any;\n  fechaInicialtxt : any;\n  fechaFinaltxt : any;\n  centroDeCostoscbo : any;\n  almacencbo : any;\n  projectInfo : any;\n  projectId : any;\n  public newProject: FormGroup;\n  datasourceCategories : any[] = [];\n  datasourceProyects : any[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , @Inject(MAT_DIALOG_DATA) public data,public snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n  ) { \n    this.projectInfo = data.arrayData;\n    this.projectId = data.projectId;\n\n    this.newProject = this.formBuilder.group({\n      codigo_proyecto :  new FormControl(this.codigo_proyecto, [Validators.required, Validators.minLength(4), Validators.maxLength(7)]),\n      // proyecto_id: new FormControl(''),\n      nombre_proyecto: new FormControl(''),\n      cliente: new FormControl(''),\n      presupuesto_proyecto: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,3}$')]],\n      // presupuesto_proyecto: new FormControl('', Validators.required),\n      fecha_inicial_proyecto: new FormControl(''),\n      fecha_final_proyecto: new FormControl(''),\n      responsable_proyecto: new FormControl(''),\n      centroDeCostos: new FormControl(''),\n      almacen: new FormControl('')  \n    });\n  }\n\n  ngOnInit(): void {\n\n    this.getAllProjects();\n    this.getEnabledCategories();\n\n    if(this.projectId != 0){\n        this.newProject.patchValue({\n          proyecto_id : this.projectInfo[\"proyecto_id\"],\n          codigo_proyecto : this.projectInfo[\"codigo_proyecto\"],\n          nombre_proyecto : this.projectInfo[\"nombre_proyecto\"] ,\n          cliente : this.projectInfo[\"cliente_id\"],\n          presupuesto_proyecto : this.projectInfo[\"presupuesto_proyecto\"] ,\n          fecha_inicial_proyecto : this.projectInfo[\"fecha_inicial_proyecto\"],\n          fecha_final_proyecto : this.projectInfo[\"fecha_final_proyecto\"] ,\n          responsable_proyecto : this.projectInfo[\"responsable_proyecto\"],\n          centroDeCostos : this.projectInfo[\"centro_de_costo_proyecto_id\"] ,\n          almacen : this.projectInfo[\"almacen_id\"]\n      })\n\n      this.nombre_proyecto = this.projectInfo[\"nombre_proyecto\"];\n      this.cliente = this.projectInfo[\"cliente_id\"];\n      this.presupuesto_proyecto = this.projectInfo[\"presupuesto_proyecto\"];\n      this.fecha_inicial_proyecto = this.projectInfo[\"fecha_inicial_proyecto\"];\n      this.fecha_final_proyecto = this.projectInfo[\"fecha_final_proyecto\"];\n      this.responsable_proyecto = this.projectInfo[\"responsable_proyecto\"];\n      this.centro_de_costo_proyecto = this.projectInfo[\"centro_de_costo_proyecto_id\"];\n      this.almacen = this.projectInfo[\"almacen_id\"];\n      this.codigo_proyecto = '';\n    }\n\n  }\n\n  getAllProjects(){\n    // Actualiza registro NUEVO\n    this._projectService.getProjectAll().subscribe(\n      res=> {\n        this.datasourceProyects = res;\n        if(this.projectId == 0){\n          console.log('prpyeccccc', this.projectId )\n          this.codigo_proyecto = Number(this.datasourceProyects[this.datasourceProyects.length - 1][\"codigo_proyecto\"]) + 1;\n          console.log('PROEYCTOS TODOS', this.proeycto_numero_mayor);\n        }else{\n          this.codigo_proyecto = this.projectInfo[\"codigo_proyecto\"];\n        }\n\n      },\n      error => console.log(\"error consulta proyectos\",error)\n    )\n  }\n\n  getEnabledCategories(){\n    // Actualiza registro NUEVO\n    this._categoryService.getCategoryAll().subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('CATEGORIAS', this.datasourceCategories);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n  save(form, event){\n\n    let arrayTodb : any;\n\n    if(this.projectId == 0){\n\n      arrayTodb = { codigo_proyecto : this.codigo_proyecto,\n                  nombre_proyecto : this.nombre_proyecto,\n                  cliente_id : this.cliente,\n                  presupuesto_proyecto : this.presupuesto_proyecto,\n                  fecha_inicial_proyecto : moment(this.fecha_inicial_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n                  fecha_final_proyecto : moment(this.fecha_final_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n                  responsable_proyecto : this.responsable_proyecto,\n                  centro_de_costo_proyecto_id : this.centro_de_costo_proyecto,\n                  almacen_id : this.almacen};\n\n      // Actualiza registro NUEVO\n      this._projectService.insertProjects(arrayTodb).subscribe(\n        res=> {\n          console.log('Se inserto con éxito', res);\n\n          // Inserta categorias\n          this.insertCategories();\n        },\n        error => console.log(\"error alta de proyectos\",error)\n      )\n    // Inserta categorias\n    // this.insertCategories();\n    // this.dialogRef.close();\n    }\n    else{\n      arrayTodb = {proyecto_id : this.projectId,\n        nombre_proyecto : this.nombre_proyecto,\n        cliente_id : this.cliente,\n        presupuesto_proyecto : this.presupuesto_proyecto,\n        fecha_inicial_proyecto : moment(this.fecha_inicial_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n        fecha_final_proyecto : moment(this.fecha_final_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n        responsable_proyecto : this.responsable_proyecto,\n        centro_de_costo_proyecto_id : this.centro_de_costo_proyecto,\n        almacen_id : this.almacen,\n        codigo_proyecto : this.codigo_proyecto};\n\n        // Actualiza registro EDICION\n        this._projectService.updateProjects(arrayTodb).subscribe(\n        res=> {\n        console.log('Se edito con éxito', res);\n        },\n        error => console.log(\"error consulta regiones\",error)\n        )\n        this.dialogRef.close();\n    }\n  }\n\ninsertCategories(){\n\n  console.log('para guardar')\n\n  // Obtiene Proyecto Registrado\n  let datasourceProyectos : MatTableDataSource<projectModel>\n  let proyectoIdMaximo : any = \"0\";\n  let codigoProyecto : any = \"0\";\n  let arrayProjectCategories : any;\n  this._projectService.getProjectAll().subscribe(\n    res=> {\n      datasourceProyectos = new MatTableDataSource(res);\n\n      proyectoIdMaximo = (datasourceProyectos.filteredData[datasourceProyectos.filteredData.length -1][\"proyecto_id\"]);\n      codigoProyecto = datasourceProyectos.filteredData.find(e => e.proyecto_id == proyectoIdMaximo);\n\n      console.log('proyectoid proyectaso', codigoProyecto[\"codigo_proyecto\"]);\n\n      this.datasourceCategories.forEach(element => {\n        console.log('proyectoid', codigoProyecto[\"codigo_proyecto\"] + '-' + element.codigo_categoria);\n        arrayProjectCategories = {proyecto_id : proyectoIdMaximo\n            , categoria_id : element.categoria_id\n            , presupuesto : 0\n            , responsable : ''\n            , fecha_inicial : moment(new Date, 'YYYY-MM-DD').format('YYYY-MM-DD')\n            , almacen_id : 1\n            , codigo_proyectocategoria : codigoProyecto[\"codigo_proyecto\"] + '-' + element.codigo_categoria\n        }\n\n        // Inserta Proyecto Categoria\n        this._projectCategoryservice.insertProjects(arrayProjectCategories).subscribe(\n          res=> {\n            console.log('CATEGORIAS', this.datasourceCategories);\n          },\n          error => console.log(\"error al insertar proyectos categorias\",error)\n        )\n        \n        arrayProjectCategories = null;\n\n      });\n      \n    },\n    error => console.log(\"error consulta todos los proyectos\",error)\n  )\n\n}\n\n  fechaInicial(event){\n    console.log('fecha', this.fecha_inicial_proyecto);\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n}\n"," <div fxLayout=\"row\">\n  <h4>Nuevo Proyecto</h4>\n</div>\n<br>\n<div mat-dialog-content-example [formGroup]=\"newProject\">\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div>Código</div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n        <div>\n          <input type=\"text\" class=\"form-control form-control-line control\" formControlName=\"codigo_proyecto\" [(ngModel)]=\"codigo_proyecto\" disabled:true >\n          <span *ngIf=\"newProject.hasError('codigo_proyecto', 'codigo_proyecto') && newProject.get('codigo_proyecto').touched\">\n            Please enter the correct email, this email not valid.\n          </span>\n        </div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div>Nombre</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div><input type=\"text\" class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"nombre_proyecto\" [(ngModel)]=\"nombre_proyecto\"></div><!--[(ngModel)]=\"nombretxt\" -->\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div>Cliente</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div><mat-select class=\"form-control control\" formControlName=\"cliente\" [(ngModel)]=\"cliente\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\"-->\n          <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n          <mat-option value= \"1\">Javier Peña y asociados</mat-option>\n          <mat-option value= \"2\">Ragasa</mat-option>\n          <mat-option value= \"3\">Cemex</mat-option>\n          </mat-select></div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div>Presupuesto</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div><input type=\"text\" class=\"form-control form-control-line control\" formControlName=\"presupuesto_proyecto\" [(ngModel)]=\"presupuesto_proyecto\"></div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div>Fecha Inicial</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div><mat-form-field appearance=\"fill\">\n          <mat-label>Choose a date</mat-label>\n          <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha_inicial_proyecto\" (dateChange)=\"fechaInicial($event)\" [(ngModel)]=\"fecha_inicial_proyecto\" class=\"control\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field></div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div>Fecha Final</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div><mat-form-field appearance=\"fill\">\n        <mat-label>Choose a date</mat-label>\n        <input matInput [matDatepicker]=\"pickerf\" formControlName=\"fecha_final_proyecto\" [(ngModel)]=\"fecha_final_proyecto\" class=\"control\">\n        <mat-datepicker-toggle matSuffix [for]=\"pickerf\"></mat-datepicker-toggle>\n        <mat-datepicker #pickerf></mat-datepicker>\n      </mat-form-field></div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div>Responsable</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\">\n        <div><input type=\"text\" class=\"form-control form-control-line control\" placeholder=\"Responsable\" formControlName=\"responsable_proyecto\" [(ngModel)]=\"responsable_proyecto\"></div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div>Centro de costos</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\">\n      <div><mat-select class=\"form-control\" formControlName=\"centroDeCostos\" [(ngModel)]=\"centro_de_costo_proyecto\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\"-->\n        <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n        <mat-option value= \"1\">Acabados</mat-option>\n        <mat-option value= \"2\">Tuberias</mat-option>\n        <mat-option value= \"3\">Electrico</mat-option>\n        </mat-select></div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div>Almacén</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div><mat-select class=\"form-control\"  formControlName=\"almacen\" [(ngModel)]=\"almacen\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\"-->\n          <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n          <mat-option value= \"1\">California</mat-option>\n          <mat-option value= \"2\">Norte</mat-option>\n          <mat-option value= \"3\">Centro</mat-option>\n          </mat-select></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n  </div>\n</div>\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n    </div>\n  </div>\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {MAT_SNACK_BAR_DATA} from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport * as XLSX from 'xlsx';\nimport { from } from 'rxjs';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryModel } from '../../../models/category.model';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { ProjectCaptureComponent } from 'src/app/pages/projects/project-capture/project-capture.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from '../../../services/requisition/requisition.service';\nimport { requisitionModelDetail } from 'src/app/models/requisition.model.detail';\nimport { AppConstants } from '../../../shared/app.constants';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { filter } from 'rxjs-compat/operator/filter';\n// import { NotificationService } from '../../../services/common/notification.service';\n\n@Component({\n  selector: 'app-requisition-detail',\n  templateUrl: './requisition-detail.component.html',\n  styleUrls: ['./requisition-detail.component.css']\n})\nexport class RequisitionDetailComponent implements OnInit {\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  \n  fecha:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  requisicion_id : any = '';\n  categoria_id : any = '';\n  proyecto_id : any = 0;\n  requisicion_Numero : any = ''\n  loadfile : any  = '';\n  buscar : any = '';\n  public nombreArchivo : any = 'selecciona archivo';\n  UploadDataExcel : MatTableDataSource<requisitionModelDetail>;\n  dataExcel: any[];\n  displayedColumns = ['cantidad', 'unidad_de_medida', 'descripcion'];\n\n  projectInfo : any;\n  requisicionId : any = 0;\n  newProject: FormGroup;\n  datasourceCategories : any[] = [];\n  datasourcePorjects : any[] = [];\n  datasourceRequisition : any;\n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , @Inject(MAT_DIALOG_DATA) public data,public snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n    , private _snackBar : MatSnackBar\n    , private _requisitionservice : requisitionservice\n    // , private notificationService: NotificationService,\n  ) { \n    this.projectInfo = data.arrayData;\n    this.requisicionId = data.requisicionId;\n\n    this.newProject = this.formBuilder.group({\n      proyecto_id : new FormControl(''),\n      categoria_id: new FormControl(''),\n      requisicion_id: new FormControl(''),\n      fecha: new FormControl(''),\n      requisicion_Numero : new FormControl('')\n      // loadFile: new FormControl(''),\n  });\n  }\n\n  ngOnInit(): void {\n\n    this.getProyectos();\n    this.getEnabledCategories();\n    if(this.requisicionId != 0){\n        this.newProject.patchValue({\n          proyecto_id : this.projectInfo[\"proyecto_id\"],\n          requisicion_id : '', // this.projectInfo[\"requisicion_id\"] ,\n          requisicion_Numero : this.projectInfo[\"codigo\"] ,\n          categoria_id : '', // this.projectInfo[\"categoria_id\"],\n          fecha : '', // this.projectInfo[\"fecha\"]\n          loadfile : ''\n          \n      })\n      this.requisicion_Numero = this.projectInfo[\"codigo\"];\n      this.proyecto_id = this.projectInfo[\"proyecto_id\"];\n      this.requisicion_id = '' //this.projectInfo[\"requisicion_id\"];\n      this.categoria_id = this.projectInfo[\"categoria_id\"];\n      this.fecha = '', //this.projectInfo[\"fecha\"];\n      this.loadfile = ''\n    }\n\n  }\n\n  getEnabledCategories(){\n    // Actualiza registro NUEVO\n    this._projectCategoryservice.getProjectCateogryById(1).subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('CATEGORIAS', res);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n  getProyectos(){\n    // Obtiene proyectos\n    this._projectService.getProjectAll().subscribe(\n      res=> {\n        this.datasourcePorjects = res;\n        console.log('PROYECTOS', res);\n      },\n      error => console.log(\"error consulta proyectos\",error)\n    )\n  }\n\n  onFileChange(event){\n    /* wire up file reader */\n    const target: DataTransfer = <DataTransfer>(event.target);\n    let extencionArchivo : string = '';\n\n    this.UploadDataExcel = null;\n\n    if (target.files.length !== 1) {\n      throw new Error('No se pueden seleccionar multiples archivos');\n    }\n\n    this.nombreArchivo = (target.files.length > 0) ? target.files[0][\"name\"].substring(1,30) : \" (archivo nuevo) \";\n    const reader: FileReader = new FileReader();\n    reader.readAsBinaryString(target.files[0]);\n    extencionArchivo = target.files[0].name.substring(target.files[0].name.length - 5,target.files[0].name.length)\n    if(extencionArchivo == '.xlsx' || extencionArchivo.substring(extencionArchivo.length - 4, extencionArchivo.length) == 'xls'){\n      console.log('AQUI ESTAN LAS EXTENCIONES DE EXCEL')\n      reader.onload = (e: any) => {\n        /* create workbook */\n  \n        const binarystr: string = e.target.result;\n        const wb: XLSX.WorkBook = XLSX.read(binarystr, { type: 'binary' });\n  \n        /* selected the first sheet */\n        const wsname: string = wb.SheetNames[0];\n        const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n        /* save data */\n        const data = XLSX.utils.sheet_to_json(ws);\n        this.dataExcel = this.validate(data);\n        this.dataExcel = data;\n\n        let arrayErrores = [];\n        let arrayExcel = [];\n        let valido : boolean = true;\n\n        // Validadores de campos\n        let errorCantidad : boolean = false;\n        let errorUoM : boolean = false;\n        let errorDescripcion : boolean = false;\n        let DescripcionAnt : string = '';\n        let Descripcion : string = '';\n\n        // Ordena los descuentos por cr + produto + plataforma\n        this.dataExcel.sort(function (a, b) {\n          if (a.DESCRIPCION > b.DESCRIPCION) {\n            return 1;\n          }\n          if (a.DESCRIPCION < b.DESCRIPCION) {\n            return -1;\n          }\n          // a must be equal to b\n          return 0;\n        });\n\n        DescripcionAnt = this.dataExcel[0][\"DESCRIPCION\"].toUpperCase();\n\n        // Validamos que los crs del excel vs las existentes en el ctálogo\n      let contador : number = 0;\n      this.dataExcel.forEach(element => {\n        // Reinicia valores\n        valido = true;\n        errorDescripcion = false;\n\n        Descripcion = element.DESCRIPCION.toUpperCase()\n\n        if(element.CANTIDAD == '') {valido = false; errorCantidad = true;}\n        if(element.UNIDAD_DE_MEDIDA.toUpperCase() == '') {valido = false; errorUoM = true;}\n        if(element.DESCRIPCION.toUpperCase() == '') {valido = false; errorDescripcion = true;}\n\n        contador++;\n        DescripcionAnt = Descripcion;\n\n        if(valido == false){\n          arrayErrores.push({ cantidad : element.CANTIDAD, \n            unidad_De_Medida : element.UNIDAD_DE_MEDIDA, \n            descripcion : element.DESCRIPCION.toUpperCase()\n           })\n        }else{\n          arrayExcel.push({ \n            requisition_Id : 0,\n            cantidad : element.CANTIDAD, \n            unidad_de_medida : element.UNIDAD_DE_MEDIDA,\n            descripcion : element.DESCRIPCION\n           })\n        }\n      });\n\n      if(arrayErrores.length > 0){\n        this.openSnackBar('Los registros contienen datos incorrectos', '');\n\n        // this.notificationService.openNotification(AppConstants.defaultNotificationWarningTitle, 'Los registros contienen estaciónes, productos o plataformas no validos', 'warn');\n        this.dataExcel = null;\n        // this.openErrorDialog(arrayErroresEstacion);\n        return;\n      }\n\n      this.UploadDataExcel = new MatTableDataSource(arrayExcel);\n\n      };\n    }\n    else{\n      this.openSnackBar('Los registros contienen datos incorrectos', '');\n      // this.notificationService.openNotification(AppConstants.defaultNotificationWarningTitle, 'No es un archivo de excel válido', 'warn');\n      this.deleteUploadFile(event);\n    }\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  validate(data : any)\n  {\n    // Valida que todos los datos esten completos\n    return data\n  }\n\n  deleteUploadFile(event: any){\n    this.nombreArchivo = \" (archivo nuevo) \";\n    this.UploadDataExcel = null;\n  }\n\n  proyectoSelected(){\n    console.log('Selecciona categorias', this.proyecto_id);\n    this.getCategories(this.proyecto_id);\n  }\n\n  categorySelected(){\n    // Obtenemos requisiciones existentes y generamos nuevo numero para la requisición\n    let proyectoCategoria_id : any = this.newProject.controls[\"categoria_id\"].value\n    let codigo_categoria : any = 0;\n    let arrayProyectoCategoria : any;\n\n    arrayProyectoCategoria = this.datasourceCategories.filter(e => e.proyectocategoria_id == proyectoCategoria_id);\n    codigo_categoria = arrayProyectoCategoria[0][\"codigo_proyectocategoria\"]\n\n    console.log('Selecciona requiscion, buscar en this.datasourceCategories', codigo_categoria);\n\n\n    this.getrequisition(codigo_categoria);\n  }\n\n  getrequisition(codigo_categoria : any){\n\n    let categoria_id : any = this.newProject.controls[\"categoria_id\"].value\n    let codigo_requisicion : any = 0;\n    let arrayRequisition : any;\n    let arrayCodigoCategoria : any;\n    \n    // Proyectos registrados\n    this._requisitionservice.getRequisitionAll().subscribe(\n      res=> {\n        console.log('Requisiciones', res);\n        this.datasourceRequisition = new MatTableDataSource(res);\n\n        if(this.datasourceRequisition.filteredData.length == 0){\n          codigo_requisicion = codigo_categoria + '-1'; \n          console.log('Primer codigo requsicion', codigo_requisicion);\n        }else{\n          // Obtener requisicion en la que se mas alta y determinar cual sigue\n          arrayRequisition = this.datasourceRequisition.filteredData.filter(e => e.categoria_id == categoria_id);\n\n          console.log('No hay requisiciones, nuevo valor', arrayRequisition);\n\n          if(arrayRequisition.length > 0){\n            // codigo_categoria = arrayRequisition[0][\"codigo_categoria\"]\n            arrayCodigoCategoria = (this.datasourceRequisition.filteredData.filter(e => e.codigo_categoria == codigo_categoria)).length\n            codigo_requisicion = codigo_categoria + '-' + (arrayCodigoCategoria + 1)\n          }else{\n            // obtener codigo_categoria\n            // codigo_categoria = '1900-PIP'\n            arrayCodigoCategoria = 1;\n            codigo_requisicion = codigo_categoria + '-1'; \n          }\n\n        }\n        \n        \n\n        // this.newProject.controls[\"requisicion_Numero\"].setValue = codigo_categoria + codigo_requisicion;\n        this.requisicion_Numero = codigo_requisicion;\n\n\n        console.log('aqui esta', this.datasourceRequisition.filteredData.filter(e => e.codigo_categoria == codigo_categoria))\n        console.log('aqui esta', categoria_id)\n        // console.log('aqui esta', this.datasourceRequisition.filteredData.filter(e => e.codigo_categoria == categoria_id))\n        // console.log('aqui esta', this.datasourceRequisition.filteredData.find(e => e.codigo_categoria == this.newProject[\"codigo_categoria\"].value))\n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n\n  getCategories(proyecto : any){\n    // Obtiene categorias \n    this._projectCategoryservice.getProjectCateogryById(proyecto).subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('PROYECTOS - CATEGORIAS', res);\n      },\n      error => console.log(\"error consulta cateogorias\",error)\n    )\n  }\n\n  save(form, event){\n\n    let arrayTodb : any;\n\n    if(this.requisicionId == 0){\n      arrayTodb = { proyecto_id : this.proyecto_id,\n                  categoria_id : this.categoria_id,\n                  codigo : this.requisicion_Numero,\n                  fecha : moment(this.fecha, 'YYYY-MM-DD').format('YYYY-MM-DD')\n                };\n\n      // INSERTA REQUISICION HDR\n      this._requisitionservice.insertRequisition(arrayTodb).subscribe(\n        res=> {\n          console.log('Se inserto con éxito', res);\n\n          // INSERTA REQUISICIONES DET\n          this.insertRequisitionDet(res);\n        },\n        error => console.log(\"error alta de proyectos\",error)\n      )\n    }\n    else{\n      arrayTodb = {proyecto_id : this.proyecto_id,\n        categoria_id : this.categoria_id,\n        requisicion_id : this.requisicion_id,\n        fecha : moment(this.fecha, 'YYYY-MM-DD').format('YYYY-MM-DD')\n      };\n\n        // Actualiza registro EDICION\n        // this._projectService.updateProjects(arrayTodb).subscribe(\n        // res=> {\n        // console.log('Se edito con éxito', res);\n        // },\n        // error => console.log(\"error consulta regiones\",error)\n        // )\n        // this.dialogRef.close();\n    }\n  }\n\ninsertRequisitionDet(requisicionId : any){\n\n  console.log('para guardar')\n\n  // Obtiene Requisicion Registrada\n  let datasourceRequsition : MatTableDataSource<requisitionModel>\n  let requisitionIdMaximo : any = \"0\";\n  let arrayToDb : any;\n\n      this.UploadDataExcel.filteredData.forEach(element => {\n        arrayToDb = {requisicioninterna_id : requisicionId\n            , cantidad : element.cantidad\n            , um : element.unidad_de_medida\n            , descripcion : element.descripcion\n        }\n\n        // Inserta Proyecto Categoria\n        this._requisitionservice.insertRequisitionDetail(arrayToDb).subscribe(\n          res=> {\n            console.log('REQUISICIONES DETALLE', arrayToDb);\n          },\n          error => console.log(\"error al insertar proyectos categorias\",error)\n        )\n        \n        arrayToDb = null;\n\n      });\n\n\n}\n\n  fechaInicial(event){\n    console.log('fecha', this.fecha);\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.UploadDataExcel = new MatTableDataSource(part);\n    this.UploadDataExcel.sort = this.sort;\n    this.UploadDataExcel.paginator = this.paginator;\n  }\n\n  filtrar(event: Event) {\n    const filtro = (event.target as HTMLInputElement).value;\n    this.UploadDataExcel.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n}\n","<div fxLayout=\"row\">\n    <h4>Nueva Requisición</h4>\n  </div>\n  <br>\n  <div mat-dialog-content-example [formGroup]=\"newProject\">\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div>Proyecto</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <!-- [(ngModel)]=\"proyecto_id\" (selectionChange)=\"emitFilters($event, 'Enviado')\"  -->\n          <mat-select class=\"form-control control\" formControlName=\"proyecto_id\" [(ngModel)]=\"proyecto_id\" (selectionChange)=\"proyectoSelected()\" >\n            <mat-option *ngFor=\"let op of datasourcePorjects\" [value]=\"op.proyecto_id\" >\n              {{op.codigo_proyecto}}\n            </mat-option>\n          </mat-select>\n        </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div>Categoria</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n            <div><mat-select class=\"form-control control\" formControlName=\"categoria_id\" [(ngModel)]=\"categoria_id\" (selectionChange)=\"categorySelected()\" ><!-- (selectionChange)=\"emitFilters($event, 'Enviado')\"-->\n              <mat-option *ngFor=\"let opx of datasourceCategories\" [value]=\"opx.proyectocategoria_id\">\n                {{opx.codigo_proyectocategoria}}\n              </mat-option>\n            </mat-select></div>\n      </div>\n    </div>\n  \n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div>Requisición</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n          <div><input type=\"text\" class=\"form-control form-control-line control\" formControlName=\"requisicion_Numero\" [(ngModel)]=\"requisicion_Numero\"></div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div>Fecha</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div><mat-form-field appearance=\"fill\">\n            <mat-label>Choose a date</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" (dateChange)=\"fechaInicial($event)\" class=\"control\"> <!--[(ngModel)]=\"fecha\" -->\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field></div>\n      </div>\n    </div>\n    <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div class=\"input-group mb-3\">\n                            <input type=\"file\" name=\"loadFile\" id=\"loadFile\" class=\"form-control form-control-line\" placeholder=\"SELECCIONA ARCHIVO\" style=\"display: none;\" (change)=\"onFileChange($event)\" onclick=\"this.value=null;\"> <!--[(ngModel)]=\"buscar\" -->\n                            <label for=\"loadFile\" style=\"margin: 0; text-align: left; width: 400px;\" class=\"btn btn-outline-dark\"><b>{{nombreArchivo}}</b></label><br><!--{{nombreArchivo}}  formControlName=\"loadFile\"--> \n                        </div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\">\n            <div><button mat-raised-button color=\"primary\" (click)=\"save(newProject, $event)\">Subir Archivo</button></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\">\n            <div></div>\n        </div>\n    </div>\n\n    <br>\n    <!--Tabla de captura-->\n    <div fxLayout=\"row\" class=\"division\">\n        \n    </div>\n\n  </div>\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n          <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n      </div>\n    </div>\n     <!-- INICIA CUERPO DE LA PÁGINA-->\n     <div class=\"col-12 col-md-12 p-0\">\n      <div class=\"card\">\n        <div class=\"card-body card-body-table\">\n          <mat-table [dataSource]=\"UploadDataExcel\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n  \n            <!-- ID Column -->\n            <ng-container matColumnDef=\"cantidad\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Cantidad</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.cantidad}} </td>\n            </ng-container>\n            \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"unidad_de_medida\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Unidad de Medida </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.unidad_de_medida}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"descripcion\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Descripción </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.descripcion}} </td>\n            </ng-container>\n            \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </mat-table>\n    \n        </div>\n        <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n      </div>\n    </div>\n  ","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\n\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\n\r\n/**\r\n * NgModule that includes all Material modules that are required to serve the demo-app.\r\n */\r\n@NgModule({\r\n    exports: [\r\n        MatAutocompleteModule,\r\n        MatButtonModule,\r\n        MatBottomSheetModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatTableModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatExpansionModule,\r\n        MatFormFieldModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatBadgeModule,\r\n        MatSidenavModule,\r\n        MatSlideToggleModule,\r\n        MatSliderModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatStepperModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatNativeDateModule,\r\n        CdkTableModule,\r\n        A11yModule,\r\n        BidiModule,\r\n        CdkAccordionModule,\r\n        ObserversModule,\r\n        OverlayModule,\r\n        PlatformModule,\r\n        PortalModule\r\n    ]\r\n})\r\nexport class DemoMaterialModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport { WorkBook, WorkSheet } from 'xlsx';\r\n\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheethml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExcelServiceService {\r\n\r\n  constructor() { }\r\n\r\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n\r\n    const worksheet: WorkSheet = XLSX.utils.json_to_sheet(json);\r\n\r\n    const workbook: WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n\r\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n\r\n    this.saveAsExcelFile(excelBuffer, excelFileName);\r\n\r\n  }\r\n\r\n  saveAsExcelFile(buffer: any, fileName: string): void {\r\n    const data: Blob = new Blob([buffer], { type: EXCEL_TYPE });\r\n\r\n    FileSaver.saveAs(data, `${fileName}_export_${new Date().getTime()}${EXCEL_EXTENSION}`);\r\n  }\r\n\r\n}\r\n","import { MediaMatcher } from '@angular/cdk/layout';\r\nimport {ChangeDetectorRef, Component,OnDestroy,AfterViewInit} from '@angular/core';\r\nimport { MenuItems } from '../../shared/menu-items/menu-items';\r\n\r\n\r\n/** @title Responsive sidenav */\r\n@Component({\r\n  selector: 'app-full-layout',\r\n  templateUrl: 'full.component.html',\r\n  styleUrls: []\r\n})\r\nexport class FullComponent implements OnDestroy, AfterViewInit {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n  ngAfterViewInit() {}\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<div class=\"main-container\"> \r\n    <!-- ============================================================== -->\r\n    <!-- Topbar - style you can find in header.scss -->\r\n    <!-- ============================================================== -->\r\n    <mat-toolbar color=\"primary\" class=\"topbar telative\">\r\n        <!-- ============================================================== -->\r\n        <!-- Logo - style you can find in header.scss -->\r\n        <!-- ============================================================== -->\r\n        <div class=\"navbar-header\">\r\n            <a class=\"navbar-brand\" href=\"index.html\">\r\n                <!-- Logo icon --><b>\r\n                    <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\r\n                    <!-- Dark Logo icon -->\r\n                    <img src=\"assets/images/logo-icon.png\" alt=\"homepage\" class=\"dark-logo\">\r\n                    <!-- Light Logo icon -->\r\n                    <img src=\"assets/images/logo-light-icon.png\" alt=\"homepage\" class=\"light-logo\">\r\n                    <!-- <img src=\"assets/images/logo-comercial20.jpeg\" alt=\"homepage\" class=\"light-logo\"> -->\r\n                </b>\r\n                <!--End Logo icon -->\r\n                <!-- Logo text -->\r\n                <span fxShow=\"false\" fxShow.gt-xs>\r\n                 <!-- dark Logo text -->\r\n                 <img src=\"assets/images/logo-text.png\" alt=\"homepage\" class=\"dark-logo\">\r\n                 <!-- Light Logo text -->    \r\n                 <img src=\"assets/images/logo-light-text.png\" class=\"light-logo\" alt=\"homepage\">\r\n                </span> </a>\r\n        </div>\r\n        <!-- ============================================================== -->\r\n        <!-- sidebar toggle -->\r\n        <!-- ============================================================== -->\r\n        \r\n        <button mat-icon-button (click)=\"snav.toggle()\" value=\"sidebarclosed\">\r\n            <mat-icon>menu</mat-icon>\r\n        </button>\r\n        <span fxFlex></span>\r\n        <!-- ============================================================== -->\r\n        <!-- app header component - style you can find in header.scss / header.component.ts-->\r\n        <!-- ============================================================== -->\r\n        <app-header></app-header>\r\n    </mat-toolbar>\r\n    <!-- ============================================================== -->\r\n    <!-- End Topbar - style you can find in pages.scss -->\r\n    <!-- ============================================================== -->\r\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\">\r\n        <!-- ============================================================== -->\r\n        <!-- Sidebar - style you can find in sidebar.scss -->\r\n        <!-- ============================================================== -->\r\n        <mat-sidenav #snav id=\"snav\" class=\"dark-sidebar pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\" fixedTopGap=\"0\" [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\"  >\r\n            \r\n                <app-sidebar></app-sidebar>\r\n               \r\n            \r\n        </mat-sidenav>\r\n        <!-- ============================================================== -->\r\n        <!-- Sidebar - style you can find in sidebar.scss -->\r\n        <!-- ============================================================== -->\r\n        \r\n        <!-- ============================================================== -->\r\n        <!-- Page container - style you can find in pages.scss -->\r\n        <!-- ============================================================== -->\r\n        <mat-sidenav-content class=\"page-wrapper\">\r\n                 \r\n                <div class=\"page-content\">\r\n                   \r\n                        <router-outlet><app-spinner></app-spinner></router-outlet>\r\n                    \r\n                </div>    \r\n               \r\n        </mat-sidenav-content>\r\n        <!-- ============================================================== -->\r\n        <!-- Page container - style you can find in pages.scss -->\r\n        <!-- ============================================================== -->\r\n    </mat-sidenav-container>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppHeaderComponent {}\r\n","        \r\n<!-- ============================================================== -->\r\n<!-- Profile - style you can find in header.scss -->\r\n<!-- ============================================================== -->\r\n<!-- <a href=\"https://wrappixel.com/templates/materialpro-angular-dashboard/\" class=\" m-r-20 hidden-sm-up\" mat-raised-button color=\"warn\">Upgrade To Pro</a> -->\r\n<!-- <button [matMenuTriggerFor]=\"profile\" mat-icon-button class=\"m-r-5\"> <img src=\"assets/images/users/1.jpg\" alt=\"user\" class=\"profile-pic\"> </button> -->\r\n<mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\r\n    <button mat-menu-item>\r\n        <mat-icon>settings</mat-icon> Settings </button>\r\n    <button mat-menu-item>\r\n        <mat-icon>account_box</mat-icon> Profile </button>\r\n    <button mat-menu-item>\r\n        <mat-icon>notifications_off</mat-icon> Disable notifications </button>\r\n    <button mat-menu-item>\r\n        <mat-icon>exit_to_app</mat-icon> Sign Out </button>\r\n</mat-menu>\r\n\r\n","<!-- ============================================================== -->\r\n<!-- sidebar -->\r\n<!-- ============================================================== -->\r\n <div class=\"user-profile\" style=\"background: url(assets/images/background/user-info.jpg) no-repeat;\">\r\n    <!-- User profile image -->\r\n    <div class=\"profile-img\"> <img src=\"assets/images/users/profile.png\" alt=\"user\"> </div>\r\n    <!-- User profile text-->\r\n    <!-- ============================================================== -->\r\n    <!-- Profile - style you can find in header.scss -->\r\n    <!-- ============================================================== -->\r\n    <div class=\"profile-text\"><a [matMenuTriggerFor]=\"sdprofile\" class=\"\"> Markarn Doe <i class=\"ti-angle-down font-12 m-l-5\"></i></a></div>\r\n    <mat-menu #sdprofile=\"matMenu\" class=\"mymegamenu\">\r\n        <button mat-menu-item>\r\n            <mat-icon>settings</mat-icon> Settings </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>account_box</mat-icon> Profile </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>notifications_off</mat-icon> Disable notifications </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>exit_to_app</mat-icon> Sign Out </button>\r\n    </mat-menu>\r\n    \r\n</div>\r\n<mat-nav-list appAccordion>\r\n    <mat-list-item appAccordionLink *ngFor=\"let menuitem of menuItems.getMenuitem()\" routerLinkActive=\"selected\" group=\"{{menuitem.state}}\">\r\n        <a class=\"\" appAccordionToggle [routerLink]=\"['/', menuitem.state]\" *ngIf=\"menuitem.type === 'link'\">\r\n            <mat-icon>{{ menuitem.icon }}</mat-icon> \r\n            <span>{{ menuitem.name }}</span> \r\n            <span fxFlex></span> \r\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span> \r\n        </a>\r\n\r\n        \r\n    </mat-list-item>\r\n\r\n</mat-nav-list>","import { ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppSidebarComponent implements OnDestroy {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories-list',\n  templateUrl: './categories-list.component.html',\n  styleUrls: ['./categories-list.component.css']\n})\nexport class CategoriesListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>categories-list works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { RouterModule, Router } from '@angular/router';\r\nimport { loginservice } from '../../services/login/login.service';\r\n\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  FormControl\r\n} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  providers: [loginservice]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  msg = '';\r\n  constructor(private service: loginservice, private routes: Router) { }\r\n\r\n  check(uname: string, p: string) {\r\n    const output = this.service.checkusernameandpassword(uname, p);\r\n    if (output == true) {\r\n      console.log(output);\r\n      this.routes.navigate(['/dashboard']);\r\n    } else {  \r\n      this.msg = 'Usuario o Clave inválido';\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"login-register\" style=\"background-image:url(assets/images/background/login-register.jpg);\">\r\n    <div class=\"login-register-box\">\r\n        <!-- <div class=\"bg-info text-white m-b-10 text-center p-t-10 p-b-10 alert-box\">\r\n            <span class=\"m-r-10\">Username : admin</span> |\r\n            <span class=\"m-l-10\">Password : admin123</span>\r\n        </div> -->\r\n        <mat-card class=\"m-t-10\">\r\n        <mat-card-content>\r\n        <form id=\"loginform\">\r\n            <div class=\"text-center\">\r\n                <img alt=\"homepage\" src=\"assets/images/logo-comercial20.jpeg\">\r\n                <!-- <h4 class=\"m-t-0\">Login to App</h4> -->\r\n            </div>\r\n            <div *ngIf=\"msg\" class=\"bg-danger p-10 text-white\">{{ msg }}</div>\r\n            <div fxLayout=\"row wrap\">\r\n                <!-- col full-->\r\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n                    <mat-form-field>\r\n                    <input matInput placeholder=\"Usuario\" required=\"\" #u1>\r\n                    </mat-form-field>\r\n                </div>\r\n                <!-- col full-->\r\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n                    <mat-form-field>\r\n                    <input matInput type=\"password\" placeholder=\"Clave\" required=\"\" #p2>\r\n                    </mat-form-field>\r\n                </div>\r\n                <!-- col half-->\r\n                <!-- <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\">\r\n                    <mat-checkbox color=\"warn\">Remember me</mat-checkbox>\r\n                </div> -->\r\n                <!-- col half-->\r\n                <!-- <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" class=\"text-right\">\r\n                    <a [routerLink]=\"['/authentication/forgot']\" class=\"link\">Forgot pwd?</a>\r\n                </div> -->\r\n                <!-- col full-->\r\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n                    <button mat-raised-button color=\"primary\" class=\"btn-block btn-lg m-t-20 m-b-20\" (click)=\"check(u1.value, p2.value)\" type=\"button\">Acceder</button>\r\n                </div>\r\n                <!-- col full-->\r\n                <!-- <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" class=\"text-center\">\r\n                    <span>Don't have an account?\r\n                        <a [routerLink]=\"['/authentication/register']\" class=\"text-info link\">Register</a>\r\n                    </span>\r\n                </div> -->\r\n            </div>\r\n        </form>\r\n        </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { projectModel } from '../../../models/project.model';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-project-capture',\n  templateUrl: './project-capture.component.html',\n  styleUrls: ['./project-capture.component.css'],\n})\nexport class ProjectCaptureComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n\n  displayedColumns = ['codigo_proyecto', 'nombre_proyecto', 'fecha_inicial_proyecto', 'fecha_final_proyecto', 'nombre_cliente', 'responsable_proyecto', 'presupuesto_proyecto', 'proyect_id', 'editar', 'categorias'];\n\n  projectData : any[] = [];\n  dataSourceShow : MatTableDataSource<projectModel>; //<any> = new MatTableDataSource\n  buscar:any;\n\n  @Output() filterChange = new EventEmitter();\n\n  constructor(public dialog: MatDialog\n          , MatTableModule : MatTableModule\n          , private _projectService : projectservice\n          , private _excelService : ExcelServiceService) { \n    // this.displayedColumns = ['proyecto']\n  }\n\n  ngOnInit(): void {\n    this.getProjects();\n  }\n\n  getProjects(){\n\n    // Proyectos registrados\n    this._projectService.getProjectAll().subscribe(\n      res=> {\n        console.log('Proyectos', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n\n  }\n\n  onOpenDialogAddProject() {\n    \n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      //title: 'NUEVO PROYECTO',\n     \n    }\n    dialogConfig.width = '450px';\n    dialogConfig.height = '350px';\n    dialogConfig.disableClose = true;\n\n  }\n\n  editProyecto(element : any, event){\n    console.log('Edita', element);\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'EDITAR PROYECTO',\n      arrayData : element,\n      projectId : element.proyecto_id\n     \n    }\n    dialogConfig.width = '800px';\n    dialogConfig.height = '500px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(ProjectCaptureDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  addCategorias(proyectoId : any, event){\n    console.log('Alta de categoras', proyectoId);\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'CATEGORIAS',\n      arrayData : null,\n      projectId: proyectoId\n     \n    }\n    dialogConfig.width = '1400px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(CategoriesComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  nuevoProyecto(event){\n    console.log('Alta de categoras');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'NUEVO PROYECTO',\n      arrayData : null,\n      projectId: 0\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '500px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(ProjectCaptureDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  descargarProyectos(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , nombre_proyecto : element.nombre_proyecto\n                              , fecha_inicial_proyecto : moment(element.fecha_inicial_proyecto, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , fecha_final_proyecto : moment(element.fecha_final_proyecto, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , nombre_cliente : element.nombre_cliente\n                              , responsable_proyecto : element.responsable_proyecto\n                              , presupuesto_proyecto : element.presupuesto_proyecto\n      })\n    });\n\n    \n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Proyectos');  \n  }\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n  filtrar(event: Event) {\n    const filtro = (event.target as HTMLInputElement).value;\n    this.dataSourceShow.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Proyectos</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarProyectos()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevoProyecto($event)\">Nuevo Proyecto</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n          <div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"codigo_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_proyecto}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"nombre_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Nombre </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.nombre_proyecto}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"fecha_inicial_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha Inicial </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha_inicial_proyecto | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"fecha_final_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha Final </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha_final_proyecto | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"nombre_cliente\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Cliente </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.nombre_cliente}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"responsable_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Responable </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.responsable_proyecto}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"presupuesto_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Presupuesto </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.presupuesto_proyecto}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"proyect_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\" hidden> proyecto_id  </th>\n                  <td mat-cell *matCellDef=\"let element\" hidden> {{element.proyecto_id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editProyecto(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n        </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-po-list',\n  templateUrl: './po-list.component.html',\n  styleUrls: ['./po-list.component.css']\n})\nexport class PoListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['ordenDeCompra_Id', 'proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_OrdenDeCompra', 'Estatus', 'editar'];\n  \n  constructor(public dialog: MatDialog\n          , private _excelService : ExcelServiceService) { }\n\n  ngOnInit(): void {\n    let arrayData : any;\n\n    arrayData = [{ordenDeCompra_Id : 1, proyecto_id : 1, Categoria_Id : 1, Requisicion_Id : 1, Fecha_OrdenDeCompra : '2020-01-01', Estatus : 'ACTIVO'}]\n    this.dataSourceShow = new MatTableDataSource(arrayData);\n\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , categoria : element.Categoria_Id\n                              , requisicion : element.Requisicion_Id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.Estatus\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaRequisicion(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editRequisicion(event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Ordenes de compra</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n        <div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"ordenDeCompra_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Orden de compra</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.ordenDeCompra_Id}} </td>\n                </ng-container>\n                \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"proyecto_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.proyecto_id}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"Categoria_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Categoria </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Categoria_Id}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Requisicion_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Requisicion_Id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Fecha_OrdenDeCompra\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Fecha_OrdenDeCompra | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Estatus}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-quotation-list',\n  templateUrl: './quotation-list.component.html',\n  styleUrls: ['./quotation-list.component.css']\n})\nexport class QuotationListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_Requisicion', 'Estatus', 'editar'];\n  \n  constructor(public dialog: MatDialog\n    , private _excelService : ExcelServiceService) { }\n\n  ngOnInit(): void {\n    let arrayData : any;\n\n    arrayData = [{proyecto_id : 1, Categoria_Id : 1, Requisicion_Id : 1, Fecha_Requisicion : '2020-01-01', Estatus : 'ACTIVO'}]\n    this.dataSourceShow = new MatTableDataSource(arrayData);\n\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , categoria : element.Categoria_Id\n                              , requisicion : element.Requisicion_Id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.Estatus\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaRequisicion(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editRequisicion(event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Cotizaciones</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"proyecto_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.proyecto_id}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"Categoria_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Categoria </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Categoria_Id}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Requisicion_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Requisicion_Id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Fecha_Requisicion\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha de Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Fecha_Requisicion | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Estatus}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <!-- <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container> -->\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n\n@Component({\n  selector: 'app-requisition-list',\n  templateUrl: './requisition-list.component.html',\n  styleUrls: ['./requisition-list.component.css']\n})\nexport class RequisitionListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  // displayedColumns = ['proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_Requisicion', 'Estatus', 'editar'];\n  displayedColumns = ['codigo_proyecto', 'codigo_categoria', 'codigo', 'fecha', 'estado', 'editar'];\n  \n  constructor(public dialog: MatDialog\n          , private _excelService : ExcelServiceService\n          , private _requisitionService : requisitionservice) { }\n\n  ngOnInit(): void {\n\n    this.getrequisition();\n      \n  }\n\n  getrequisition(){\n    // Proyectos registrados\n    this._requisitionService.getRequisitionAll().subscribe(\n      res=> {\n        console.log('Requisiciones', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , categoria : element.Categoria_Id\n                              , requisicion : element.Requisicion_Id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.Estatus\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaRequisicion(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 0\n     \n    }\n    dialogConfig.width = '1200px';\n    dialogConfig.height = '900px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editRequisicion(element){\n    console.log('Editar de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : element,\n      requisicionId: element.requisicioninterna_id\n     \n    }\n    dialogConfig.width = '1200px';\n    dialogConfig.height = '900px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Requisiciones</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"codigo_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_proyecto}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"codigo_categoria\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Categoria </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_categoria}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"codigo\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"fecha\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha de Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"estado\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\">\n                    <ng-container *ngIf=\"element.estado == true\">ACTIVO</ng-container>\n                  <ng-container *ngIf=\"element.estado == false\">INACTIVO</ng-container>\n                  </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <!-- <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container> -->\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-storage-invoice-list',\n  templateUrl: './storage-invoice-list.component.html',\n  styleUrls: ['./storage-invoice-list.component.css']\n})\nexport class StorageInvoiceListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_Requisicion', 'Estatus', 'editar'];\n  \n  constructor(public dialog: MatDialog\n    , private _excelService : ExcelServiceService) { }\n\n  ngOnInit(): void {\n    let arrayData : any;\n\n    arrayData = [{proyecto_id : 1, Categoria_Id : 1, Requisicion_Id : 1, Fecha_Requisicion : '2020-01-01', Estatus : 'ACTIVO'}]\n    this.dataSourceShow = new MatTableDataSource(arrayData);\n\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , categoria : element.Categoria_Id\n                              , requisicion : element.Requisicion_Id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.Estatus\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaRequisicion(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  editRequisicion(event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      window.location.reload();\n    });\n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Almacén</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"proyecto_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.proyecto_id}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"Categoria_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Categoria </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Categoria_Id}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Requisicion_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Requisicion_Id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Fecha_Requisicion\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha de Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Fecha_Requisicion | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Estatus}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <!-- <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container> -->\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { observable, Observable, of } from 'rxjs';\r\nimport { categoryModel } from 'src/app/models/category.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { from } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class categoryservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getCategoryAll() {\r\n        return this.http.get<categoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'Category/lista');\r\n    }\r\n\r\n    getCategoryById(id : number) {\r\n        return this.http.get<categoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'Category/' + id);\r\n    }\r\n\r\n    updateProjects(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'Category/actualizar',arrayToDb);\r\n    }\r\n\r\n    insertProjects(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Category/registrar',arrayToDb);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class loginservice {\r\n\r\n  constructor() { }\r\n\r\n  checkusernameandpassword(uname: string, pwd: string) {\r\n    if (uname === 'admin' && pwd === 'admin123') {\r\n      localStorage.setItem('username', 'admin');\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { observable, Observable, of } from 'rxjs';\r\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { from } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class projectCategoryservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getProjectCateogryAll() {\r\n        return this.http.get<projectCategoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/lista');\r\n    }\r\n\r\n    // getProjectCateogryById(proyectoId : any) {\r\n    //     return this.http.get<projectCategoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/' + proyectoId);\r\n    // }\r\n\r\n    getProjectCateogryById(proyectoId : any) {\r\n        console.log('vvv', environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/' + proyectoId);\r\n        return this.http.get<projectCategoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/' + proyectoId);\r\n    }\r\n\r\n    updateProjectCatgory(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'ProjectCategory/actualizar',arrayToDb);\r\n    }\r\n\r\n    insertProjects(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'ProjectCategory/registrar',arrayToDb);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { observable, Observable, of } from 'rxjs';\r\nimport { projectModel } from 'src/app/models/project.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { from } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class projectservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getProjectAll() {\r\n        return this.http.get<projectModel[]>(environment.urlapi + environment.apiContextDrivers + 'Project/lista');\r\n    }\r\n\r\n    updateProjects(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'Project/actualizar',arrayToDb);\r\n    }\r\n\r\n    insertProjects(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Project/registrar',arrayToDb);\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { observable, Observable, of } from 'rxjs';\r\nimport { requisitionModel } from 'src/app/models/requisition.model';\r\nimport { environment } from 'src/environments/environment';\r\nimport { from } from 'rxjs';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class requisitionservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getRequisitionAll() {\r\n        return this.http.get<requisitionModel[]>(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/lista');\r\n    }\r\n\r\n    getRequisitionById(id : any) {\r\n        return this.http.get<requisitionModel[]>(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/' + id);\r\n    }\r\n\r\n    insertRequisition(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'InternalRequisition/registrar',arrayToDb);\r\n    }\r\n\r\n    insertRequisitionDetail(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'InternalRequisition/registrar/detalle',arrayToDb);\r\n    }\r\n\r\n    insertRequisitionCancel(id : any) {\r\n        // return this.http.put(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/cancelar' + id);\r\n    }\r\n\r\n}","import {\r\n  Directive,\r\n  OnInit,\r\n  AfterViewInit,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]'\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf(link.group) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe(e => this.checkOpenLinks());\r\n  }\r\n\r\n  constructor(private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionToggle]'\r\n})\r\nexport class AccordionAnchorDirective {\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: any) {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionLink]'\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  public group: any;\r\n\r\n  @HostBinding('class.selected')\r\n  @Input()\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: boolean) {\r\n    this._selected = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _selected: boolean=false;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.selected = !this.selected;\r\n  }\r\n}\r\n","export * from './accordionanchor.directive';\r\nexport * from './accordionlink.directive';\r\nexport * from './accordion.directive';\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\n\r\nconst MENUITEMS = [\r\n  { state: 'dashboard', name: 'Dashboard', type: 'link', icon: 'av_timer' },\r\n  { state: 'project', name: 'Proyecto', type: 'link', icon: 'view_comfy' },\r\n  { state: 'requisition', name: 'Requisiciones', type: 'link', icon: 'view_list' },\r\n  { state: 'quotation', name: 'Cotizaciones', type: 'link', icon: 'web' },\r\n  { state: 'po', name: 'Orden de compra', type: 'link', icon: 'tab' },\r\n  { state: 'storage', name: 'Almacén', type: 'link', icon: 'assignment_turned_in' },\r\n  // { state: 'button', type: 'link', name: 'Buttons', icon: 'crop_7_5' },\r\n  // { state: 'grid', type: 'link', name: 'Grid List', icon: 'view_comfy' },\r\n  // { state: 'lists', type: 'link', name: 'Lists', icon: 'view_list' },\r\n  // { state: 'menu', type: 'link', name: 'Menu', icon: 'view_headline' },\r\n  // { state: 'tabs', type: 'link', name: 'Tabs', icon: 'tab' },\r\n  // { state: 'stepper', type: 'link', name: 'Stepper', icon: 'web' },\r\n  // {\r\n  //   state: 'expansion',\r\n  //   type: 'link',\r\n  //   name: 'Expansion Panel',\r\n  //   icon: 'vertical_align_center'\r\n  // },\r\n  // { state: 'chips', type: 'link', name: 'Chips', icon: 'vignette' },\r\n  // { state: 'toolbar', type: 'link', name: 'Toolbar', icon: 'voicemail' },\r\n  // {\r\n  //   state: 'progress-snipper',\r\n  //   type: 'link',\r\n  //   name: 'Progress snipper',\r\n  //   icon: 'border_horizontal'\r\n  // },\r\n  // {\r\n  //   state: 'progress',\r\n  //   type: 'link',\r\n  //   name: 'Progress Bar',\r\n  //   icon: 'blur_circular'\r\n  // },\r\n  // {\r\n  //   state: 'dialog',\r\n  //   type: 'link',\r\n  //   name: 'Dialog',\r\n  //   icon: 'assignment_turned_in'\r\n  // },\r\n  // { state: 'tooltip', type: 'link', name: 'Tooltip', icon: 'assistant' },\r\n  // { state: 'snackbar', type: 'link', name: 'Snackbar', icon: 'adb' },\r\n  // { state: 'slider', type: 'link', name: 'Slider', icon: 'developer_mode' },\r\n  // {\r\n  //   state: 'slide-toggle',\r\n  //   type: 'link',\r\n  //   name: 'Slide Toggle',\r\n  //   icon: 'all_inclusive'\r\n  // }\r\n];\r\n\r\n@Injectable()\r\nexport class MenuItems {\r\n  getMenuitem(): Menu[] {\r\n    return MENUITEMS;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MenuItems } from './menu-items/menu-items';\r\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n  ],\r\n  exports: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n   ],\r\n  providers: [ MenuItems ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, Input, OnDestroy, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\r\n        <div class=\"spinner\">\r\n          <div class=\"double-bounce1\"></div>\r\n          <div class=\"double-bounce2\"></div>\r\n        </div>\r\n    </div>`,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SpinnerComponent implements OnDestroy {\r\n  public isSpinnerVisible = true;\r\n\r\n  @Input()\r\n  public backgroundColor = 'rgba(0, 115, 170, 0.69)';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    this.router.events.subscribe(\r\n      event => {\r\n        if (event instanceof NavigationStart) {\r\n          this.isSpinnerVisible = true;\r\n        } else if (\r\n          event instanceof NavigationEnd ||\r\n          event instanceof NavigationCancel ||\r\n          event instanceof NavigationError\r\n        ) {\r\n          this.isSpinnerVisible = false;\r\n        }\r\n      },\r\n      () => {\r\n        this.isSpinnerVisible = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isSpinnerVisible = false;\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  urlapi : 'https://sap-comercial.azurewebsites.net/',\r\n  apiContextDrivers : 'api/'\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport 'hammerjs';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","var map = {\n\t\"./af\": 26431,\n\t\"./af.js\": 26431,\n\t\"./ar\": 81286,\n\t\"./ar-dz\": 1616,\n\t\"./ar-dz.js\": 1616,\n\t\"./ar-kw\": 9759,\n\t\"./ar-kw.js\": 9759,\n\t\"./ar-ly\": 43160,\n\t\"./ar-ly.js\": 43160,\n\t\"./ar-ma\": 62551,\n\t\"./ar-ma.js\": 62551,\n\t\"./ar-sa\": 79989,\n\t\"./ar-sa.js\": 79989,\n\t\"./ar-tn\": 6962,\n\t\"./ar-tn.js\": 6962,\n\t\"./ar.js\": 81286,\n\t\"./az\": 15887,\n\t\"./az.js\": 15887,\n\t\"./be\": 14572,\n\t\"./be.js\": 14572,\n\t\"./bg\": 3276,\n\t\"./bg.js\": 3276,\n\t\"./bm\": 93344,\n\t\"./bm.js\": 93344,\n\t\"./bn\": 58985,\n\t\"./bn-bd\": 83990,\n\t\"./bn-bd.js\": 83990,\n\t\"./bn.js\": 58985,\n\t\"./bo\": 94391,\n\t\"./bo.js\": 94391,\n\t\"./br\": 46728,\n\t\"./br.js\": 46728,\n\t\"./bs\": 5536,\n\t\"./bs.js\": 5536,\n\t\"./ca\": 41043,\n\t\"./ca.js\": 41043,\n\t\"./cs\": 70420,\n\t\"./cs.js\": 70420,\n\t\"./cv\": 33513,\n\t\"./cv.js\": 33513,\n\t\"./cy\": 6771,\n\t\"./cy.js\": 6771,\n\t\"./da\": 47978,\n\t\"./da.js\": 47978,\n\t\"./de\": 46061,\n\t\"./de-at\": 25204,\n\t\"./de-at.js\": 25204,\n\t\"./de-ch\": 2653,\n\t\"./de-ch.js\": 2653,\n\t\"./de.js\": 46061,\n\t\"./dv\": 85,\n\t\"./dv.js\": 85,\n\t\"./el\": 8579,\n\t\"./el.js\": 8579,\n\t\"./en-au\": 25724,\n\t\"./en-au.js\": 25724,\n\t\"./en-ca\": 10525,\n\t\"./en-ca.js\": 10525,\n\t\"./en-gb\": 52847,\n\t\"./en-gb.js\": 52847,\n\t\"./en-ie\": 67216,\n\t\"./en-ie.js\": 67216,\n\t\"./en-il\": 39305,\n\t\"./en-il.js\": 39305,\n\t\"./en-in\": 73364,\n\t\"./en-in.js\": 73364,\n\t\"./en-nz\": 79130,\n\t\"./en-nz.js\": 79130,\n\t\"./en-sg\": 11161,\n\t\"./en-sg.js\": 11161,\n\t\"./eo\": 50802,\n\t\"./eo.js\": 50802,\n\t\"./es\": 40328,\n\t\"./es-do\": 45551,\n\t\"./es-do.js\": 45551,\n\t\"./es-mx\": 75615,\n\t\"./es-mx.js\": 75615,\n\t\"./es-us\": 64790,\n\t\"./es-us.js\": 64790,\n\t\"./es.js\": 40328,\n\t\"./et\": 96389,\n\t\"./et.js\": 96389,\n\t\"./eu\": 52961,\n\t\"./eu.js\": 52961,\n\t\"./fa\": 26151,\n\t\"./fa.js\": 26151,\n\t\"./fi\": 7997,\n\t\"./fi.js\": 7997,\n\t\"./fil\": 58898,\n\t\"./fil.js\": 58898,\n\t\"./fo\": 37779,\n\t\"./fo.js\": 37779,\n\t\"./fr\": 28174,\n\t\"./fr-ca\": 3287,\n\t\"./fr-ca.js\": 3287,\n\t\"./fr-ch\": 38867,\n\t\"./fr-ch.js\": 38867,\n\t\"./fr.js\": 28174,\n\t\"./fy\": 50452,\n\t\"./fy.js\": 50452,\n\t\"./ga\": 45014,\n\t\"./ga.js\": 45014,\n\t\"./gd\": 74127,\n\t\"./gd.js\": 74127,\n\t\"./gl\": 72124,\n\t\"./gl.js\": 72124,\n\t\"./gom-deva\": 6444,\n\t\"./gom-deva.js\": 6444,\n\t\"./gom-latn\": 37953,\n\t\"./gom-latn.js\": 37953,\n\t\"./gu\": 76604,\n\t\"./gu.js\": 76604,\n\t\"./he\": 1222,\n\t\"./he.js\": 1222,\n\t\"./hi\": 74235,\n\t\"./hi.js\": 74235,\n\t\"./hr\": 622,\n\t\"./hr.js\": 622,\n\t\"./hu\": 37735,\n\t\"./hu.js\": 37735,\n\t\"./hy-am\": 90402,\n\t\"./hy-am.js\": 90402,\n\t\"./id\": 59187,\n\t\"./id.js\": 59187,\n\t\"./is\": 30536,\n\t\"./is.js\": 30536,\n\t\"./it\": 35007,\n\t\"./it-ch\": 94667,\n\t\"./it-ch.js\": 94667,\n\t\"./it.js\": 35007,\n\t\"./ja\": 62093,\n\t\"./ja.js\": 62093,\n\t\"./jv\": 80059,\n\t\"./jv.js\": 80059,\n\t\"./ka\": 66870,\n\t\"./ka.js\": 66870,\n\t\"./kk\": 80880,\n\t\"./kk.js\": 80880,\n\t\"./km\": 1083,\n\t\"./km.js\": 1083,\n\t\"./kn\": 68785,\n\t\"./kn.js\": 68785,\n\t\"./ko\": 21721,\n\t\"./ko.js\": 21721,\n\t\"./ku\": 37851,\n\t\"./ku.js\": 37851,\n\t\"./ky\": 1727,\n\t\"./ky.js\": 1727,\n\t\"./lb\": 40346,\n\t\"./lb.js\": 40346,\n\t\"./lo\": 93002,\n\t\"./lo.js\": 93002,\n\t\"./lt\": 64035,\n\t\"./lt.js\": 64035,\n\t\"./lv\": 56927,\n\t\"./lv.js\": 56927,\n\t\"./me\": 5634,\n\t\"./me.js\": 5634,\n\t\"./mi\": 94173,\n\t\"./mi.js\": 94173,\n\t\"./mk\": 86320,\n\t\"./mk.js\": 86320,\n\t\"./ml\": 11705,\n\t\"./ml.js\": 11705,\n\t\"./mn\": 31062,\n\t\"./mn.js\": 31062,\n\t\"./mr\": 92805,\n\t\"./mr.js\": 92805,\n\t\"./ms\": 11341,\n\t\"./ms-my\": 59900,\n\t\"./ms-my.js\": 59900,\n\t\"./ms.js\": 11341,\n\t\"./mt\": 37734,\n\t\"./mt.js\": 37734,\n\t\"./my\": 19034,\n\t\"./my.js\": 19034,\n\t\"./nb\": 9324,\n\t\"./nb.js\": 9324,\n\t\"./ne\": 46495,\n\t\"./ne.js\": 46495,\n\t\"./nl\": 70673,\n\t\"./nl-be\": 76272,\n\t\"./nl-be.js\": 76272,\n\t\"./nl.js\": 70673,\n\t\"./nn\": 72486,\n\t\"./nn.js\": 72486,\n\t\"./oc-lnc\": 46219,\n\t\"./oc-lnc.js\": 46219,\n\t\"./pa-in\": 2829,\n\t\"./pa-in.js\": 2829,\n\t\"./pl\": 78444,\n\t\"./pl.js\": 78444,\n\t\"./pt\": 53170,\n\t\"./pt-br\": 66117,\n\t\"./pt-br.js\": 66117,\n\t\"./pt.js\": 53170,\n\t\"./ro\": 96587,\n\t\"./ro.js\": 96587,\n\t\"./ru\": 39264,\n\t\"./ru.js\": 39264,\n\t\"./sd\": 42135,\n\t\"./sd.js\": 42135,\n\t\"./se\": 95366,\n\t\"./se.js\": 95366,\n\t\"./si\": 93379,\n\t\"./si.js\": 93379,\n\t\"./sk\": 46143,\n\t\"./sk.js\": 46143,\n\t\"./sl\": 196,\n\t\"./sl.js\": 196,\n\t\"./sq\": 21082,\n\t\"./sq.js\": 21082,\n\t\"./sr\": 91621,\n\t\"./sr-cyrl\": 98963,\n\t\"./sr-cyrl.js\": 98963,\n\t\"./sr.js\": 91621,\n\t\"./ss\": 41404,\n\t\"./ss.js\": 41404,\n\t\"./sv\": 55685,\n\t\"./sv.js\": 55685,\n\t\"./sw\": 3872,\n\t\"./sw.js\": 3872,\n\t\"./ta\": 54106,\n\t\"./ta.js\": 54106,\n\t\"./te\": 39204,\n\t\"./te.js\": 39204,\n\t\"./tet\": 83692,\n\t\"./tet.js\": 83692,\n\t\"./tg\": 86361,\n\t\"./tg.js\": 86361,\n\t\"./th\": 31735,\n\t\"./th.js\": 31735,\n\t\"./tk\": 1568,\n\t\"./tk.js\": 1568,\n\t\"./tl-ph\": 96129,\n\t\"./tl-ph.js\": 96129,\n\t\"./tlh\": 13759,\n\t\"./tlh.js\": 13759,\n\t\"./tr\": 81644,\n\t\"./tr.js\": 81644,\n\t\"./tzl\": 90875,\n\t\"./tzl.js\": 90875,\n\t\"./tzm\": 16878,\n\t\"./tzm-latn\": 11041,\n\t\"./tzm-latn.js\": 11041,\n\t\"./tzm.js\": 16878,\n\t\"./ug-cn\": 74357,\n\t\"./ug-cn.js\": 74357,\n\t\"./uk\": 74810,\n\t\"./uk.js\": 74810,\n\t\"./ur\": 86794,\n\t\"./ur.js\": 86794,\n\t\"./uz\": 28966,\n\t\"./uz-latn\": 77959,\n\t\"./uz-latn.js\": 77959,\n\t\"./uz.js\": 28966,\n\t\"./vi\": 35386,\n\t\"./vi.js\": 35386,\n\t\"./x-pseudo\": 23156,\n\t\"./x-pseudo.js\": 23156,\n\t\"./yo\": 68028,\n\t\"./yo.js\": 68028,\n\t\"./zh-cn\": 9330,\n\t\"./zh-cn.js\": 9330,\n\t\"./zh-hk\": 89380,\n\t\"./zh-hk.js\": 89380,\n\t\"./zh-mo\": 60874,\n\t\"./zh-mo.js\": 60874,\n\t\"./zh-tw\": 96508,\n\t\"./zh-tw.js\": 96508\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}