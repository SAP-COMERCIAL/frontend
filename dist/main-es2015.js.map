{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/components/auth-signin/auth-signin.component.ts","./src/app/components/auth-signin/auth-signin.component.html","./src/app/components/auth/auth.component.ts","./src/app/components/auth/auth.component.html","./src/app/components/categories/categories/categories.component.ts","./src/app/components/categories/categories/categories.component.html","./src/app/components/customer-detail/customer-detail.component.ts","./src/app/components/customer-detail/customer-detail.component.html","./src/app/components/po-detail/po-detail.component.ts","./src/app/components/po-detail/po-detail.component.html","./src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component.ts","./src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component.html","./src/app/components/quotations/quotation-detail-files/quotation-detail-files.component.ts","./src/app/components/quotations/quotation-detail-files/quotation-detail-files.component.html","./src/app/components/quotations/quotation-detail/quotation-detail.component.ts","./src/app/components/quotations/quotation-detail/quotation-detail.component.html","./src/app/components/requisitions/requisition-detail/requisition-detail.component.ts","./src/app/components/requisitions/requisition-detail/requisition-detail.component.html","./src/app/components/supplier-detail/supplier-detail.component.ts","./src/app/components/supplier-detail/supplier-detail.component.html","./src/app/demo-material-module.ts","./src/app/guards/auth.guards.ts","./src/app/helpers/excel-service.service.ts","./src/app/layouts/full/full.component.ts","./src/app/layouts/full/full.component.html","./src/app/layouts/full/header/header.component.ts","./src/app/layouts/full/header/header.component.html","./src/app/layouts/full/sidebar/sidebar.component.html","./src/app/layouts/full/sidebar/sidebar.component.ts","./src/app/models/auth.model.ts","./src/app/models/users.ts","./src/app/pages/categories/categories-list/categories-list.component.ts","./src/app/pages/categories/categories-list/categories-list.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/projects/project-capture/project-capture.component.ts","./src/app/pages/projects/project-capture/project-capture.component.html","./src/app/pages/purchaseOrder/po-list/po-list.component.ts","./src/app/pages/purchaseOrder/po-list/po-list.component.html","./src/app/pages/quotation/quotation-list/quotation-list.component.ts","./src/app/pages/quotation/quotation-list/quotation-list.component.html","./src/app/pages/requisition/requisition-list/requisition-list.component.ts","./src/app/pages/requisition/requisition-list/requisition-list.component.html","./src/app/pages/storageInvoice/storage-invoice-list/storage-invoice-list.component.ts","./src/app/pages/storageInvoice/storage-invoice-list/storage-invoice-list.component.html","./src/app/pages/warehouse-review/warehouse-review.component.ts","./src/app/pages/warehouse-review/warehouse-review.component.html","./src/app/services/PurchaseOrder.service.ts","./src/app/services/aesencrypt.service.ts","./src/app/services/auth.service.ts","./src/app/services/category/category.service.ts","./src/app/services/customer.service.ts","./src/app/services/data.service.ts","./src/app/services/login/login.service.ts","./src/app/services/projectCtegory/projectCateogry.service.ts","./src/app/services/projects/project.service.ts","./src/app/services/quotation/quotation.service.ts","./src/app/services/requisition/requisition.service.ts","./src/app/services/supplier.service.ts","./src/app/services/user.service.ts","./src/app/shared/accordion/accordion.directive.ts","./src/app/shared/accordion/accordionanchor.directive.ts","./src/app/shared/accordion/accordionlink.directive.ts","./src/app/shared/accordion/index.ts","./src/app/shared/menu-items/menu-items.ts","./src/app/shared/shared.module.ts","./src/app/shared/spinner.component.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/moment/locale|sync|/^/.*$","ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\crypto-js|crypto","ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|crypto","ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|fs","ignored|C:\\Proyectos\\Microtel\\TemplateMaterialLite12\\material-pro-angular-lite-master\\angular-12\\node_modules\\xlsx|stream"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<router-outlet><app-spinner></app-spinner></router-outlet>","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ToastrModule } from 'ngx-toastr';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { AppRoutingModule } from './app.routing';\nimport { AppComponent } from './app.component';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FullComponent } from './layouts/full/full.component';\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DemoMaterialModule } from './demo-material-module';\n// import { LoginComponent } from './pages/login/login.component';  \n\nimport { SharedModule } from './shared/shared.module';\nimport { SpinnerComponent } from './shared/spinner.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\n\nimport { MatFormFieldModule} from '@angular/material/form-field';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { CategoriesComponent } from './components/categories/categories/categories.component';\nimport { CategoriesListComponent } from './pages/categories/categories-list/categories-list.component';\nimport { ProjectCaptureDetailComponent } from '../app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { ProjectCaptureComponent } from '../app/pages/projects/project-capture/project-capture.component';\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { RequisitionListComponent } from './pages/requisition/requisition-list/requisition-list.component';\nimport { RequisitionDetailComponent } from './components/requisitions/requisition-detail/requisition-detail.component';\nimport { QuotationListComponent } from './pages/quotation/quotation-list/quotation-list.component';\nimport { PoListComponent } from './pages/purchaseOrder/po-list/po-list.component';\nimport { StorageInvoiceListComponent } from './pages/storageInvoice/storage-invoice-list/storage-invoice-list.component';\nimport { QuotationDetailComponent } from './components/quotations/quotation-detail/quotation-detail.component';\nimport { QuotationDetailFilesComponent } from './components/quotations/quotation-detail-files/quotation-detail-files.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { WarehouseReviewComponent } from './pages/warehouse-review/warehouse-review.component';\nimport { PoDetailComponent } from './components/po-detail/po-detail.component';\nimport { AuthSigninComponent } from './components/auth-signin/auth-signin.component';\n\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { CustomerDetailComponent } from './components/customer-detail/customer-detail.component';\nimport { SupplierDetailComponent } from './components/supplier-detail/supplier-detail.component';\n\n// import { Notification } from './components/notification/notification.component/notification.component.component';\n// import { NotificationComponent } from './components/notification/notification/notification.component' \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FullComponent,\n    AppHeaderComponent,\n    SpinnerComponent,\n    AppSidebarComponent,\n    CategoriesComponent,\n    // LoginComponent,\n    CategoriesListComponent,\n    ProjectCaptureDetailComponent,\n    ProjectCaptureComponent,\n    RequisitionListComponent,\n    RequisitionDetailComponent,\n    QuotationListComponent,\n    PoListComponent,\n    StorageInvoiceListComponent,\n    QuotationDetailComponent,\n    QuotationDetailFilesComponent,\n    AuthComponent,\n    WarehouseReviewComponent,\n    PoDetailComponent,\n    AuthSigninComponent,\n    CustomerDetailComponent,\n    SupplierDetailComponent\n    // ,\n    // Notification.ComponentComponent,\n    // NotificationComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    DemoMaterialModule,\n    FormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    SharedModule,\n    MatTableModule,\n    MatSortModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    ToastrModule.forRoot({\n      timeOut: 5000,\n      positionClass: 'toast-bottom-center',\n      preventDuplicates: true,\n    })\n    // RouterModule.forRoot(AppRoutingModule, {useHash: true}) // AppRoutes\n  ],\n  exports:[ MatTableModule ],\n  providers: [\n    {\n      provide: LocationStrategy,\n      useClass: PathLocationStrategy\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FullComponent } from './layouts/full/full.component';\nimport { AuthComponent } from  '../../src/app/components/auth/auth.component';\nimport { AuthGuard } from './guards/auth.guards';\nimport { LoginComponent } from './pages/login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: '/auth/login',\n        pathMatch: 'full'\n      },\n      {\n        path: 'auth',\n          loadChildren: () => import('./pages/authentication.module').then(module => module.AuthenticationModule)\n          // loadChildren: () => import('./pages/login/login.module').then(module => module.LoginModule)\n      }\n    ]\n  },\n  {\n    path: '',\n    component: FullComponent,\n    children: [\n      {\n        path: 'dashboard',\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule)\n      },\n      {\n        path: 'project',\n        loadChildren: () => import('./pages/projects/project-capture/project.module').then(m => m.ProjectModule)\n      },\n      {\n        path: 'categories',\n        loadChildren: () => import('./pages/categories/categories-list/categories.module').then(m => m.CategoriesModule)\n      },\n      {\n        path: 'requisition',\n        loadChildren: () => import('./pages/requisition/requisition-list/requisition.module').then(m => m.RequisitionModule)\n      },\n      {\n        path: 'quotation',\n        loadChildren: () => import('./pages/quotation/quotation-list/quotation.module').then(m => m.QuotationModule)\n      },\n      {\n        path: 'po',\n        loadChildren: () => import('./pages/purchaseOrder/po-list/po.module').then(m => m.PoModule)\n      },\n      {\n        path: 'storage',\n        loadChildren: () => import('./pages/storageInvoice/storage-invoice-list/storage.module').then(m => m.StorageModule)\n      },\n      {\n        path: 'customer',\n        loadChildren: () => import('./pages/catcustomer/customer/customer.module').then(m => m.CustomerModule)\n      },\n      {\n        path: 'supplier',\n        loadChildren: () => import('./pages/supplier/supplier.module').then(m => m.SupplierModule)\n      },\n      {\n          path: 'login',\n          component: LoginComponent,\n      }\n    ],\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\nexports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthC, AuthI } from '../../models/auth.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { AESEncryptService } from '../../services/aesencrypt.service';\nimport { DataService } from '../../services/data.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { PermissionI } from 'src/app/models/permission.model';\n\ndeclare let alertify: any;\n\n@Component({\n  selector: 'app-auth-signin',\n  templateUrl: './auth-signin.component.html',\n  styleUrls: ['./auth-signin.component.css']\n})\nexport class AuthSigninComponent implements OnInit {\n\n  public authmodel: AuthI;\n  public permissionLst: PermissionI;\n  signinForm: FormGroup;\n  public spinerShow: boolean;\n\n  constructor(\n    private authservice: AuthService,\n    private userS: UserService,\n    private fb: FormBuilder,\n    private route: Router,\n    private cryptojs: AESEncryptService,\n    private dataService: DataService,\n  ) {\n    this.spinerShow = false;\n    this.authmodel = new AuthC();\n  }\n\n  ngOnInit() {\n    this.clearForm();\n  }\n\n  signinReq() {\n\n    this.spinerShow = true;\n\n    const pswdEncryp = this.cryptojs.encrypt(this.signinForm.value.password);\n\n    this.signinForm.value.password = pswdEncryp.substring(0, 50);\n\n    this.authservice.loginReq(this.signinForm.value).subscribe(\n      response => {\n        localStorage.setItem('token_access', response.token);\n        // Llama para guardar las variables en localstprage\n        this.dataService.DecodeToken();\n\n        this.spinerShow = false;\n        // Notificacion de nuevo login\n        this.dataService.loginChanged.emit(true);\n        this.route.navigate(['/dashboard/analytics']);\n      },\n      err => {\n        if (err.status === 401) {\n          alertify.warning('Credenciales de acceso inválidas', 'ERROR');\n        }\n\n        if (err.status === 0 || err.status === 500) {\n          alertify.error('No se puede comunicar con el servidor', 'ERROR');\n        }\n        console.error(err.error);\n        this.spinerShow = false;\n      }\n    );\n  }\n\n  clearForm() {\n    this.signinForm = this.fb.group({\n      username : ['', Validators.required],\n      password : ['', Validators.required]\n    });\n  }\n\n}\n","<p>auth-signin works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet name=\"primary\"></router-outlet>\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport {MatListModule} from '@angular/material/list';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatTab } from '@angular/material/tabs';\nimport { parse } from 'path';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n  projectInfo : any;\n  projectId : any;\n\n  almacen_id : any = '1';\n  fecha_inicial : any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  proyecto_id : any = 0;\n  responsableEdicion : any = '';\n  presupuestoEdicion : any = '';\n  activoEdicion : boolean = true;\n  almacenEdicion : any = '';\n  fechaEdicion : any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  presupuesto : any = 0;\n  activo : any = true;\n  presupuestoTotal : any;\n  presupuestoRestante : any;\n\n  displayedColumns: string[] = ['select','codigo_proyectocategoria', 'nombre_categoria', 'responsable', 'presupuesto', 'fecha_inicial', 'almacen_id', 'actualizar'];\n  datasourceProjectCategories : MatTableDataSource<projectCategoryModel>\n  // newProject: FormGroup;\n  \n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @ViewChild(MatTable) tabla1: MatTable<any>;\n\n  constructor(public dialogRef: MatDialogRef<projectCategoryModel>\n      , @Inject(MAT_DIALOG_DATA) public data,public snackBar: MatSnackBar\n      , private _projectCategoryservice : projectCategoryservice\n      , private formBuilder: FormBuilder\n      , private _snackBar : MatSnackBar) { \n        this.projectInfo = data.arrayData;\n        this.projectId = data.projectId;\n\n      //   this.newProject = this.formBuilder.group({\n      //     responsable: new FormControl(''),\n      //     presupuesto: new FormControl(''),\n      //     fecha_inicial: new FormControl('', Validators.required),\n      //     almacen_id: new FormControl(''),\n      //     activo: new FormControl('')\n      // });\n      }\n\n  ngOnInit(): void {\n    \n    let arrayPoryectoActual : any = [] \n    arrayPoryectoActual = this.projectInfo.filteredData.filter(e => e.proyecto_id == this.projectId);\n    this.presupuestoTotal = arrayPoryectoActual[0]['presupuesto_proyecto'];\n    this.presupuestoRestante = this.presupuestoTotal;\n\n    this.getproyectosCategorias();\n  }\n\n  getproyectosCategorias(){\n    // Proyectos categorias\n    this._projectCategoryservice.getProjectCateogryById(this.projectId).subscribe(\n      res=> {\n        // console.log('this.datasourceProjectCategories.filteredData[\"responsable\"]', this.datasourceProjectCategories.filteredData[\"responsable\"]);\n        console.log('Proyectos', res);\n        this.datasourceProjectCategories = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        this.datasourceProjectCategories.sort = this.sort;\n        // this.newProject.controls[\"responsable\"].setValue = this.datasourceProjectCategories.filteredData[\"responsable\"];\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n\n  }\n\n  ActivarDesactivar(element : any, event : Event){\n    this.activoEdicion = event[\"checked\"]\n    console.log('Actualiza registro de activar y desactivar', event[\"checked\"])\n  }\n\n  save(element : any, camporesponsable : any, event : Event){\n    let arraySaveData : any;\n    console.log('element', element);\n    console.log('ENTRADA', event);\n\n    arraySaveData = {proyectocategoria_id : element.proyectocategoria_id\n          , codigo_proyectocategoria : element.codigo_proyectocategoria\n          , presupuesto : (this.presupuestoEdicion != '') ? this.presupuestoEdicion : element.presupuesto //this.newProject.controls[\"presupuesto\"].value\n          , responsable : (this.responsableEdicion != '') ? this.responsableEdicion : element.responsable //this.newProject.controls[\"responsable\"].value\n          , fecha_inicial : (this.fechaEdicion != '') ? this.fechaEdicion : moment(element.fecha_inicial, 'YYYY-MM-DD').format('YYYY-MM-DD')\n          , almacen_id : (this.almacenEdicion != '') ? this.almacenEdicion : element.almacen_id.toString()\n          , activo : this.activoEdicion // (this.activoEdicion != false) ? this.activoEdicion : element.activo\n        }\n\n          console.log('datos a actualizar', arraySaveData)\n\n          this.insertProjectCategoryDet(arraySaveData);\n\n          // Limpia variables\n          this.responsableEdicion = '';\n          this.presupuestoEdicion = '';\n          this.fechaEdicion = '';\n\n  }\n\n  checkEnterKey(event: Event, campo : any){\n\n    switch (campo){\n      case 'responsable' : this.responsableEdicion = (event.target as HTMLInputElement).value;\n        break;\n      case 'presupuesto' : this.presupuestoEdicion = (event.target as HTMLInputElement).value;\n        break;\n      case 'fecha' : this.fechaEdicion = moment((event.target as HTMLInputElement).value, 'YYYY-MM-DD').format('YYYY-MM-DD');\n        break;\n      default : this.responsableEdicion = '';\n        break;\n    }\n    console.log('filtro', this.responsableEdicion);\n  }\n\n  onBlurMethod(event : Event){\n    let x : any = (event.target as HTMLInputElement).value;\n    let CalculaPresupuesto : any = 0;\n    let presupuestoCategoria : any = 0;\n\n    this.tabla1[\"_data\"].forEach(element => {\n      presupuestoCategoria = parseInt(element.presupuesto);\n      CalculaPresupuesto = CalculaPresupuesto + presupuestoCategoria;\n\n    });\n    this.presupuestoRestante = this.presupuestoTotal - CalculaPresupuesto;\n\n  }\n\n  insertProjectCategoryDet(arrayToDb : any){\n    // Inserta Proyecto Categoria\n    this._projectCategoryservice.updateProjectCatgory(arrayToDb).subscribe(\n      res=> {\n        console.log('ACTUALIZA PROYECO CATEGORIA', arrayToDb);\n        this.openSnackBar('El registro se actualizó con éxito', '');\n      },\n      error => console.log(\"error al insertar proyectos categorias\",error)\n    )\n    \n  }\n\n  seleccionaAlmacen(elementAlmacen : any){\n\n    this.almacenEdicion = elementAlmacen.value;\n    console.log('almacen', this.almacenEdicion);\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n  \n  salir(){\n    this.dialogRef.close();\n  }\n\n}\n","<!-- [formGroup]=\"newProject\" -->\n<div fxLayout=\"row\" >\n    <div fxFlex.gt-sm=\"95%\" >\n            <mat-card>\n              <mat-table [dataSource]=\"datasourceProjectCategories\" matSort class=\"mat-elevation-z8\" style=\"vertical-align: middle;\" #tabla1>\n                <ng-container matColumnDef=\"select\">\n                  <th mat-header-cell *matHeaderCellDef>\n                      <div style=\"width: 100%; text-align: left; vertical-align: middle;\">\n                          ACTIVAR\n                  </div>\n                    </th>\n                    <div style=\"width: 50px;\">\n                    <td mat-cell *matCellDef=\"let element; let i = index\">\n                      <mat-checkbox color=\"warn\"\n                                  [checked]=\"element.activo\"\n                                  (click)=\"$event.stopPropagation()\"\n                                  (change)=\"ActivarDesactivar(element.activo, $event)\"\n                                  [(ngModel)]=\"element.activo\"\n                                  >\n                                  <!-- formControlName=\"activo\"  -->\n                                  <!--[checked]=\"selection.isSelected(element.proyecto_id)\"-->\n                                  <!--[(ngModel)]=\"element.activo\" -->\n                      </mat-checkbox>\n                    </td>\n                  </div>\n              </ng-container>\n\n              <!-- Position Column -->\n              <ng-container matColumnDef=\"codigo_proyectocategoria\" >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-column-20\"> <span class=\"order-th\">Número <mat-icon class=\"orage-icon\" aria-hidden=\"false\"></mat-icon></span> </th>\n                <td mat-cell *matCellDef=\"let element\" style=\"width: 500px;\"> {{element.codigo_proyectocategoria}} </td>\n              </ng-container>\n\n              <!-- Position Column -->\n              <ng-container matColumnDef=\"nombre_categoria\" >\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"mat-column-20\"> <span class=\"order-th\">Nombre <mat-icon class=\"orage-icon\" aria-hidden=\"false\"></mat-icon></span> </th>\n                <td mat-cell *matCellDef=\"let element\" style=\"width: 500px;\"> {{element.nombre_categoria}} </td>\n              </ng-container>\n\n              <!-- responsable Column -->\n              <ng-container matColumnDef=\"responsable\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Responable </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                  <mat-form-field>\n                    <mat-label>{{element.responsable}}</mat-label>\n                    <input [type]=\"element.responsable\" matInput [(ngModel)]=\"element.responsable\" (keyup)=\"checkEnterKey($event, 'responsable')\">\n                  </mat-form-field>\n                  <!-- <input type=\"text\" class=\"controltable100\" [(ngModel)]=\"element.responsable\" value=\"responsableEdicion\">  -->\n                </td>\n                <!-- formControlName=\"responsable\" -->\n              </ng-container>\n\n              <!-- presupuesto Column -->\n              <ng-container matColumnDef=\"presupuesto\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Presupuesto </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                  <mat-form-field>\n                    <mat-label>{{element.presupuesto | currency}}</mat-label>\n                    <input [type]=\"element.presupuesto\" matInput [(ngModel)]=\"element.presupuesto\" (keyup)=\"checkEnterKey($event, 'presupuesto')\" (blur)=\"onBlurMethod($event)\">\n                  </mat-form-field>\n                  <!-- <input type=\"number\" step=\"any\" class=\"controltable100\" formControlName=\"presupuesto\" value=\"{{element.presupuesto}}\" placeholder=\"{{element.presupuesto}}\">  -->\n                </td>\n                  <!--[(ngModel)]=\"element.presupuesto\" -->\n              </ng-container>\n\n              <!-- fecha incial Column -->\n              <ng-container matColumnDef=\"fecha_inicial\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha incial </th>\n                <td mat-cell *matCellDef=\"let element\"> <div><mat-form-field appearance=\"fill\">\n                  <mat-label>{{element.fecha_inicial | date: 'dd-MM-yyyy'}}</mat-label>\n                  <input matInput [matDatepicker]=\"picker\" (dateChange)=\"checkEnterKey($event, 'fecha')\" class=\"controltable100\" [(ngModel)]=\"element.fecha_inicial\" ><!-- formControlName=\"fecha_inicial\"\" -->\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                  <mat-datepicker [startAt]=\"element.fecha_inicial\" #picker></mat-datepicker>\n                </mat-form-field></div></td>\n              </ng-container>\n\n              <!-- almacen Column -->\n              <ng-container matColumnDef=\"almacen_id\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Almacen </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                  <div>\n                    <mat-select class=\"form-control\"  [(ngModel)]=\"element.almacen_id\" (selectionChange)=\"seleccionaAlmacen($event, 'almacen')\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\" [(ngModel)]=\"element.almacen\" formControlName=\"almacen_id\" -->\n                      <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n                      <mat-option value= \"1\">California</mat-option>\n                      <mat-option value= \"2\">Norte</mat-option>\n                      <mat-option value= \"3\">Centro</mat-option>\n                    </mat-select>\n                  </div>\n                </td>\n              </ng-container>\n\n              <!-- Email Column -->\n              <ng-container matColumnDef=\"actualizar\">\n                <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Actualizar </th>\n                <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"save(element, element.responsable, $event)\">Actualizar</button> </td>\n              </ng-container>\n              \n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n              </mat-table> \n            </mat-card>\n            <table>\n                <tr>\n                  <td style=\"width: 10px;\"></td>\n                  <td style=\"width: 300px;\">Presupuesto del proyecto</td>\n                  <td style=\"width: 300px;\"><p><b>{{presupuestoTotal | currency}}</b></p></td>\n                  <td style=\"width: 100px;\">Presupuesto restante</td>\n                  <td style=\"width: 200px;\"><p><b>{{presupuestoRestante | currency}}</b></p></td>\n                  <td style=\"width: 100px;\"></td>\n                  <td style=\"width: 100px;\"><button mat-raised-button color=\"warn\" (click)=\"salir()\">Cerrar</button></td>\n                  <td style=\"width: 10px;\"></td>\n                </tr>\n              </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { customerModel } from 'src/app/models/customer.model';\nimport { customerservice } from '../../services/customer.service';\n\n@Component({\n  selector: 'app-customer-detail',\n  templateUrl: './customer-detail.component.html',\n  styleUrls: ['./customer-detail.component.css']\n})\nexport class CustomerDetailComponent implements OnInit {\n\n// =========================\n// DECLARACIONES\n// =========================\nnombre : string;\ndireccion : string;\nciudad : string;\nrfc : string;\nresponsable : string;\ntelefono : string;\nestado : string;\n\npublic newProject: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<customerModel>\n    , private _customerservice : customerservice\n    , private formBuilder: FormBuilder\n\n  ) {\n\n    this.newProject = this.formBuilder.group({\n      nombre :  new FormControl('', [Validators.required]),\n      direccion: new FormControl('', [Validators.required]),\n      ciudad: new FormControl('', [Validators.required]),\n      rfc: new FormControl('', [Validators.required]),\n      responsable: new FormControl(''),\n      telefono: new FormControl('', [Validators.required]),\n      estado: new FormControl('', [Validators.required]),\n    });\n   }\n\n// =========================\n// PROCEDIMIENTOS\n// =========================\n\n  ngOnInit(): void {\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n  save(form, event){\n\n    let arrayToDb : any;\n\n    arrayToDb = ({ \n        id : 0\n        , nombre : form.controls[\"nombre\"].value\n        , direccion : form.controls[\"direccion\"].value\n        , rfc : form.controls[\"rfc\"].value \n        , ciudad : form.controls[\"ciudad\"].value\n        , estado : form.controls[\"estado\"].value\n        , contacto : form.controls[\"responsable\"].value\n        , vigencia : '2050-01-01'\n        , estatus : 1\n      });\n\n    this.insertCustommer(arrayToDb);\n  }\n\n// =========================\n// UTILERIAS\n// =========================\n\n\n// =========================\n// SERVICIOS\n// =========================\n\ninsertCustommer(arrayToDb : any){\n  \n  console.log('aqui esta log', arrayToDb)\n  // Inserta clientes\n  this._customerservice.insertcustomer(arrayToDb).subscribe(\n    res=> {\n      console.log('CLIENTES', res);\n    },\n    error => console.log(\"error al insertar clientes\",error)\n  )\n\n}\n\nupdateCustommer(arrayToDb : any){\n\n// Actualiza clientes\nthis._customerservice.updatecustomer(arrayToDb).subscribe(\n  res=> {\n    console.log('CLIENTES', res);\n  },\n  error => console.log(\"error al actualizar proyectos categorias\",error)\n)\n\n}\n\n\n}\n","<div fxLayout=\"row\">\n    <h4>Catálogo de clientes</h4>\n  </div>\n  <br>\n  <div mat-dialog-content-example [formGroup]=\"newProject\">\n    <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div><br>Nombre</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n              <input [type]=\"nombre\" matInput class=\"form-control form-control-line control\" formControlName=\"nombre\" [(ngModel)]=\"nombre\" disabled >\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('nombre').valid && newProject.get('nombre').touched\" class=\"help-block\" style=\"color: red;\"> El nombre es requerido</span>\n            </div>\n        </div>\n        <div fxFlex.gt-sm=\"10%\" >\n          <div></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n          <div><br>Dirección</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"direccion\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"direccion\" [(ngModel)]=\"direccion\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('direccion').valid && newProject.get('direccion').touched\" class=\"help-block\" style=\"color: red;\"> La dirección es requerida</span>\n          </div>\n        </div>\n      </div>\n\n      <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div><br>Ciudad</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n              <input [type]=\"ciudad\" matInput class=\"form-control form-control-line control\" formControlName=\"ciudad\" [(ngModel)]=\"ciudad\" disabled >\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('ciudad').valid && newProject.get('ciudad').touched\" class=\"help-block\" style=\"color: red;\"> La ciudad es requerida</span>\n            </div>\n        </div>\n        <div fxFlex.gt-sm=\"10%\" >\n          <div></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n          <div><br>Estado</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"estado\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"estado\" [(ngModel)]=\"estado\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('estado').valid && newProject.get('estado').touched\" class=\"help-block\" style=\"color: red;\"> El Estado es requerido</span>\n          </div>\n        </div>\n      </div>\n\n      <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div><br>Responsable</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n              <input [type]=\"responsable\" matInput class=\"form-control form-control-line control\" formControlName=\"responsable\" [(ngModel)]=\"responsable\" >\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('responsable').valid && newProject.get('responsable').touched\" class=\"help-block\" style=\"color: red;\"> El responsable es requerido</span>\n            </div>\n        </div>\n        <div fxFlex.gt-sm=\"10%\" >\n          <div></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n          <div><br>Teléfono</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"telefono\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"telefono\" [(ngModel)]=\"telefono\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('telefono').valid && newProject.get('telefono').touched\" class=\"help-block\" style=\"color: red;\"> El telefono es requerido</span>\n          </div>\n        </div>\n      </div>\n\n      <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div><br>RFC</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n                <input [type]=\"rfc\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"rfc\" [(ngModel)]=\"rfc\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('rfc').valid && newProject.get('rfc').touched\" class=\"help-block\" style=\"color: red;\"> El RFC es requerido</span>\n            </div>\n        </div>\n        <div fxFlex.gt-sm=\"10%\" >\n          <div></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n          <div><br>RFC</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n          <div>\n\n          </div>\n        </div>\n      </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n    </div>\n  </div>\n","import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport * as XLSX from 'xlsx';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { quotationservice  } from 'src/app/services/quotation/quotation.service';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { dateInputsHaveChanged } from '@angular/material/datepicker/datepicker-input-base';\nimport { timeStamp } from 'console';\nimport { quotationDetailModel } from 'src/app/models/quotation-detail.model';\nimport { purchaseOrderservice } from 'src/app/services/PurchaseOrder.service';\nimport { supplyservice } from '../../services/supplier.service';\nimport { SupplierDetailComponent } from '../supplier-detail/supplier-detail.component';\nimport { I } from '@angular/cdk/keycodes';\nimport { CompileShallowModuleMetadata, ThrowStmt } from '@angular/compiler';\n\nimport jsPDF from 'jspdf';\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\npdfMake.vfs = pdfFonts.pdfMake.vfs;\nimport htmlToPdfmake from 'html-to-pdfmake';\n\n\n@Component({\n  selector: 'app-po-detail',\n  templateUrl: './po-detail.component.html',\n  styleUrls: ['./po-detail.component.css']\n})\nexport class PoDetailComponent implements OnInit {\n  title = 'htmltopdf';\n  \n  @ViewChild('pdfTable') pdfTable: ElementRef;\n  // @ViewChild('AllTable') pdfTable: ElementRef;\n  // ===================\n  // DECLARACIONES\n  // ===================\n\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @ViewChild(MatTable) tabla1: MatTable<any>;\n  \n  cotizacion_id : any = '';\n  codigo_requisicioninterna : any = '';\n  odc_Numero : any = '';\n  proveedor_id : any = '';\n  activoEdicion : boolean = true;\n  displayedColumns = ['select', 'SKU', 'cantidad', 'unidad_de_medida', 'descripcion', 'medida', 'color', 'otras_Especificaciones', 'cantidad_Ordenar', 'precio_unitario', 'descuento']; // , 'importe'\n\n  projectInfo : any;\n  estadoPantalla : string;\n  cotizacionId : any = 0;\n  newProject: FormGroup;\n  datasourceCotizaciones : any;\n  datasourceCotizacionesDetalle : any;\n  datasourcePoveedores : any[] = [];\n  datasourcesupplier : any;\n  datasourcePo_Detail : any;\n  podatasource : MatTableDataSource<any>;\n  po_count : number = 0;\n  ordendecompra_id : number;\n  iva:number = 16;\n  subtotal:number = 0;\n  ivaSubtotal:number = 0;\n  total:number = 0;\n  precio_unitario : number = 0;\n  importe : number = 0;\n\n  constructor(\n    public dialogRef: MatDialogRef<quotationDetailModel>\n    , private _quotationservice : quotationservice\n    , private _supplyservice : supplyservice\n    , @Inject(MAT_DIALOG_DATA) public data\n    , public snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n    , private _snackBar : MatSnackBar\n    , private _purchaseOrderservice : purchaseOrderservice\n    , public dialog: MatDialog\n  ) { \n    this.projectInfo = data.arrayData;\n    this.estadoPantalla = data.estadoPantalla;\n\n    this.newProject = this.formBuilder.group({\n      cotizacion_id : new FormControl('', [Validators.required]),\n      codigo_requisicioninterna: new FormControl('', [Validators.required]),\n      odc_Numero: new FormControl('', [Validators.required]),\n      proveedor_id: new FormControl('', [Validators.required]),\n      iva: new FormControl('', [Validators.required]),\n      subtotal: new FormControl('', [Validators.required]),\n      ivaSubtotal: new FormControl('', [Validators.required]),\n      total: new FormControl('', [Validators.required]),\n      precio_unitario : new FormControl('', [Validators.required]),\n      moneda : new FormControl('', [Validators.required]),\n  });\n\n  }\n\n  // =====================\n  // PROCEDIMIENTOS\n  // =====================\n\n  ngOnInit(): void {\n    this.getsupplierAll();\n    this.getProveedores();\n    this.getCotizacionesAll();\n\n    if(this.projectInfo != undefined){\n      console.log('project info', this.projectInfo);\n      console.log('podata', this.projectInfo.iva.toString());\n      this.ordendecompra_id = this.projectInfo.proveedor_nombre\n      this.subtotal = this.projectInfo.sub_total;\n      this.ivaSubtotal = this.projectInfo.iva_moneda;\n      this.total = this.projectInfo.total;\n\n      // this.getcotizacionesDetail(this.projectInfo.cotizacion_id);\n      this.getPO_Detail(this.projectInfo.ordendecompra_id);\n\n      this.newProject.patchValue({\n        cotizacion_id : this.projectInfo.cotizacion_id,\n        codigo_requisicioninterna : this.projectInfo.codigo_requisicioninterna,\n        odc_Numero : this.projectInfo.ordendecompra_codigo,\n        proveedor_id : this.projectInfo.proveedor_id,\n        iva : this.projectInfo.iva.toString(),\n        moneda : this.projectInfo.tipo_moneda.toString(),\n        // subtotal : this.projectInfo.sub_total,\n        // ivaSubtotal : '10',\n        // total : '10010',\n        // precio_unitario : '100'\n      })\n      \n    }\n  }\n\n  cotizacionSelected(form, event){\n    console.log('pagina', form.controls['cotizacion_id'].value);\n    this.getcotizacionesDetail(form.controls['cotizacion_id'].value);\n\n  }\n\n  ivaSelected(form, event){\n    console.log('iva', form.controls['iva'].value);\n    this.onBlurMethod();\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n  validaCamposRequeridos() : boolean{\n    let valido : boolean = true;\n    valido = (this.newProject.get('cotizacion_id').status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"codigo_requisicioninterna\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"odc_Numero\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"proveedor_id\").status == 'INVALID') ? false : valido;\n\n    return valido;\n  }\n\n  save(form, event){\n\n    if(this.validaCamposRequeridos() == false){\n      this.openSnackBar('debe capturar los campos requeridos', 'success');\n      return;\n    }\n\n    this.insertPOHdr(this.tabla1[\"_data\"]);\n  }\n\n  Authoriza(form, event){\n      console.log('autoriza po', form)\n  }\n\n  ActivarDesactivar(element : any, event : Event){\n    this.activoEdicion = event[\"checked\"]\n    console.log('Actualiza registro de activar y desactivar', event[\"checked\"])\n    this.onBlurMethod(); \n  }\n\n  checkEnterKey(){\n\n  }\n\n  addSupplier(form, event){\n    // Catálogo de clientes\n    const dialogConfig = new MatDialogConfig();\n  \n    dialogConfig.width = '1400px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n  \n    const dialogRef = this.dialog.open(SupplierDetailComponent, dialogConfig);\n  \n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  reloadSupplier(form, event){\n    // Carga clientes\n    this.getsupplierAll();\n  }\n\n  selectsupplier(event){\n    this.proveedor_id = event.value;\n  }\n\n  onBlurMethod(){\n    if (this.tabla1[\"_data\"][0][\"activo\"] != undefined && this.tabla1[\"_data\"][0][\"precio_unitario\"] != undefined){ // && this.tabla1[\"_data\"][0][\"activo\"] == true \n      \n      this.importe = 100\n      this.subtotal = 0;\n      this.ivaSubtotal = 0;\n      this.total = 0;\n\n      this.tabla1[\"_data\"].forEach(element => {\n      \n        if (element.activo != undefined && element.activo == true && element.precio_unitario != undefined){\n          this.subtotal = this.subtotal + element.cantidad * (element.precio_unitario - element.descuento);\n        }\n            \n      });\n\n      this.ivaSubtotal = this.ivaSubtotal + (this.subtotal * (this.iva/100));\n      this.total = this.subtotal + this.ivaSubtotal;\n    }\n  }\n\n  // =====================\n  // UTILERIAS\n  // =====================\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  public downloadAsPDF() {\n\n    let subTotal : any = 0;\n    let iva : any = 0;\n    let total : any = 0;\n\n    const doc = new jsPDF();   \n    const pdfTable = this.pdfTable.nativeElement;\n   \n    var html = htmlToPdfmake(pdfTable.innerHTML);\n    \n    var headers = {\n      0:{\n          col_1:{ text: 'Cantidad', style: 'tableHeader',rowSpan: 2, alignment: 'center',margin: [0, 8, 0, 0], width: 20 },\n          col_2:{ text: 'Unidad', style: 'tableHeader',rowSpan: 2, alignment: 'center',margin: [0, 8, 0, 0], width: 20 },\n          col_3:{ text: 'Descripción', style: 'tableHeader',rowSpan: 2, alignment: 'center',margin: [0, 8, 0, 0], width: 90 },\n          col_4:{ text: 'Precio Unitario', style: 'tableHeader',rowSpan: 2, alignment: 'center',margin: [0, 8, 0, 0], width: 20  },\n          col_5:{ text: 'Importe', style: 'tableHeader',rowSpan: 2, alignment: 'center',margin: [0, 8, 0, 0], width: 20  },\n          // col_6:{ text: 'SKU', style: 'tableHeader',rowSpan: 2, alignment: 'center',margin: [0, 8, 0, 0], width: 20 }\n      },\n      1:{\n          col_1:{ text: 'Header 1', style: 'tableHeader', alignment: 'center' },\n          col_2:{ text: 'Header 2', style: 'tableHeader', alignment: 'center' }, \n          col_3:{ text: 'Header 3', style: 'tableHeader', alignment: 'center' },\n          col_4:{ text: 'Citación', style: 'tableHeader', alignment: 'center' },\n          col_5:{ text: 'Cumplimiento', style: 'tableHeader', alignment: 'center'},\n          col_6:{ text: 'Cumplimiento', style: 'tableHeader', alignment: 'center'}\n      }\n    //   ,\n    //   2:{\n    //     col_1:{ text: 'Header 1x', style: 'tableHeader', alignment: 'center' },\n    //     col_2:{ text: 'Header 2x', style: 'tableHeader', alignment: 'center' }, \n    //     col_3:{ text: 'Header 3x', style: 'tableHeader', alignment: 'center' },\n    //     col_4:{ text: 'Citaciónx', style: 'tableHeader', alignment: 'center' },\n    //     col_5:{ text: 'Cumplimientox', style: 'tableHeader', alignment: 'center'}\n    // },\n    // 4:{\n    //   col_1:{ text: 'texto en 1', style: 'tableHeader', alignment: 'center' },\n    //   col_2:{ text: 'texto en 2', style: 'tableHeader', alignment: 'center' }, \n    //   col_3:{ text: 'texto en 3', style: 'tableHeader', alignment: 'center' },\n    //   col_4:{ text: 'texto en Citación', style: 'tableHeader', alignment: 'center' },\n    //   col_5:{ text: 'texto en Cumplimiento', style: 'tableHeader', alignment: 'center'}\n    // }\n  }\n\n    let bodyx = [];\n    var body = [];\n    for (var key in headers){\n        if (headers.hasOwnProperty(key)){\n            var header = headers[key];\n            var row = new Array();\n            row.push( header.col_1 );\n            row.push( header.col_2 );\n            row.push( header.col_3 );\n            row.push( header.col_4 );\n            row.push( header.col_5 );\n            // row.push( header.col_6 );\n            body.push(row);\n        }\n    }\n\n    for (var key in this.datasourceCotizacionesDetalle) {\n      console.log('renglones', this.datasourceCotizacionesDetalle);\n        if (this.datasourceCotizacionesDetalle.hasOwnProperty(key))\n        {\n            var data = this.datasourceCotizacionesDetalle[key];\n            var row = new Array();\n            row.push( data.cantidad.toString() );\n            row.push( data.unidad_medida.toString()  );\n            row.push( data.descripcion.toString() );\n            row.push( data.precio_unitario.toString()  );\n            row.push( (data.precio_unitario * data.cantidad).toString() );\n            // row.push( data.medida.toString() );\n            body.push(row);\n            bodyx.push(row);\n\n            // Calcula Totales\n            this.subtotal = this.subtotal + (data.precio_unitario * data.cantidad);\n        }\n    }\n\n    this.iva = this.subtotal * (this.newProject.controls[\"iva\"].value / 100);\n    this.total = this.subtotal + this.iva;\n\n    const documentDefinition = {\n      content: [\n        \n        {\n          columns: [\n            {\n              text: 'LOGO DE ORDEN DE COMPRA', fontSize:8\n            },\n            {\n              text: '', fontSize:8, width: 20\n            },\n            {\n              text: 'COMERCIAL ... S. DE R.L. DE C.V. RFC: CCM95033..A Carretera a Saltillo-Monterrey Km. 18 Parque Industrial Santa María 25900 Ramos Arízpe, Coahuila Telefono: (844) 866 9030', fontSize:8\n            },\n            {\n              text: '', fontSize:8, width: 20\n            },\n            {\n              text: 'ORDEN DE COMPRA No. 1791-SUB232', fontSize:8\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: ' ', fontSize:8, bold:true, width: '*'\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: 'Proveedor:', fontSize:8, bold:true\n            },\n            {\n              text: '', fontSize:8, width: 20\n            },\n            {\n              text: '', fontSize:8\n            },\n            {\n              text: '', fontSize:8, width: 20\n            },\n            {\n              text: 'Enviar a:', fontSize:8, bold:true\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: 'Nombre: ', fontSize:8, bold:true, width: 90\n            },\n            {\n              text: 'EXPLORACIÓN GEOFÍSICA Y ESTUDIOS DEL SUBSUELO DEL CENTRO', fontSize:8, width: '*'\n            },\n            {\n              text: 'Nombre: ', fontSize:8, bold:true, width: 90\n            },\n            {\n              text: 'GM SILAO', fontSize:8, width:'*'\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: 'Dirección: ', fontSize:8, bold:true, width: 90\n            },\n            {\n              text: 'RIO LERMA NO 705, COLINAS DEL RIO', fontSize:8, width: '*'\n            },\n            {\n              text: 'Dirección: ', fontSize:8, bold:true, width: 90\n            },\n            {\n              text: '', fontSize:8, width:'*'\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: 'R.F.C. ', fontSize:8, bold:true, width: 90\n            },\n            {\n              text: 'EGE160527A29', fontSize:8, width: '*'\n            },\n            {\n              text: 'Cd./Edo: ', fontSize:8, bold:true, width: 90\n            },\n            {\n              text: 'SILAO GTO', fontSize:8, width:'*'\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: 'Cd./Edo: ', fontSize:8, bold:true, width: 90\n            },\n            {\n              text: 'AGUASCALIENTES, AGUASCALIENTES', fontSize:8, width: '*'\n            },\n            {\n              text: 'Requisitor: ', fontSize:8, bold:true, width: 90\n            },\n            {\n              text: 'FERNANDO ARMENDARIZ', fontSize:8, width:'*'\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: 'Contacto ', fontSize:8, bold:true, width: 90\n            },\n            {\n              text: 'ARTURO GONZALEZ OLVERA', fontSize:8, width: '*'\n            },\n            {\n              text: 'Teléfono: ', fontSize:8, bold:true, width: 90\n            },\n            {\n              text: '', fontSize:8, width:'*'\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: ' ', fontSize:8, bold:true, width: 90\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: ' ', fontSize:8, bold:true, width: 90\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: ': ', fontSize:8, bold:true, width: 90\n            },\n            {\n              text: '', fontSize:8, width: '*'\n            },\n            {\n              text: '', fontSize:8, bold:true, width: 90\n            },\n            {\n              text: '4200680361', fontSize:8, width:'*'\n            }\n          ]\n        },\n        {\n          style: 'tableHeader', fontSize:8, width:'100%',\n          table: {\n            body: [\n              ['FECHA ODC', 'TERMINOS Y CONDICIONES'],\n              ['13-ene-22', 'Estimación por avance']\n            ]\n          }\n        },\n        {\n          columns: [\n            {\n              text: ' ', fontSize:8, bold:true, width: 90\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: ' ', fontSize:8, bold:true, width: 90\n            }\n          ]\n        },\n        {\n          fontSize:8, width:'100%',\n          table: {\n            widths: [ '*', '*', '*', '*', '*' ],\n            headerRows: 2,\n            // keepWithHeaderRows: 1,\n            body: body\n        }\n        },\n        {\n          columns: [\n            {\n              text: ' ', fontSize:8, bold:true, width: 90\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: '', fontSize:8, bold:true\n            },\n            {\n              text: 'CIEN MIL PESOS 00/100 MN', fontSize:8, width: '*'\n            },\n            {\n              text: '', fontSize:8, bold:true\n            },\n            {\n              text: 'Subtotal', fontSize:8, bold:true, width: '*'\n            },\n            {\n              text: '$ ' + this.subtotal, fontSize:8, width:'*'\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: '', fontSize:8, bold:true\n            },\n            {\n              text: '', fontSize:8, width: '*'\n            },\n            {\n              text: '', fontSize:8, bold:true\n            },\n            {\n              text: 'IVA', fontSize:8, bold:true, width: '*'\n            },\n            {\n              text: '$ ' + this.iva , fontSize:8, width:'*'\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: '', fontSize:8, bold:true\n            },\n            {\n              text: '', fontSize:8, width: '*'\n            },\n            {\n              text: '', fontSize:8, bold:true\n            },\n            {\n              text: 'Total', fontSize:8, bold:true, width: '*'\n            },\n            {\n              text: '$ ' + this.total , fontSize:8, width:'*'\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: ' ', fontSize:8, bold:true, width: 90\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: ' ', fontSize:8, bold:true, width: 90\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: ' ', fontSize:8, bold:true, width: 90\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: ' ', fontSize:8, bold:true, width: 90\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: ' ', fontSize:8, bold:true, width: 90\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: ' ', fontSize:8, bold:true, width: 90\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: ' ', fontSize:8, bold:true, width: 90\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: '_________________', fontSize:8, bold:true\n            },\n            {\n              text: '', fontSize:8, width: 20\n            },\n            {\n              text: '_________________', fontSize:8\n            },\n            {\n              text: '', fontSize:8, width: 20\n            },\n            {\n              text: '_________________', fontSize:8, bold:true\n            }\n          ]\n        },\n        {\n          columns: [\n            {\n              text: 'Compras', fontSize:8, bold:true\n            },\n            {\n              text: '', fontSize:8, width: 20\n            },\n            {\n              text: 'Control de proyectos', fontSize:8\n            },\n            {\n              text: '', fontSize:8, width: 20\n            },\n            {\n              text: 'Autoriza', fontSize:8, bold:true\n            }\n          ]\n        }\n      ],\n      styles: {\n        header: {\n          fontSize: 18,\n          bold: true,\n          margin: [0, 0, 0, 10]\n        },\n        subheader: {\n          fontSize: 16,\n          bold: true,\n          margin: [0, 10, 0, 5]\n        },\n        tableExample: {\n          margin: [0, 5, 0, 15]\n        },\n        tableHeader: {\n          bold: true,\n          fontSize: 11,\n          color: 'black'\n        },\n        tableFooter: {\n          bold: true,\n          fontSize: 13,\n          color: 'black',\n          border: false\n        }\n      },\n      defaultStyle: {\n        // alignment: 'justify'\n      }\n    };\n\n    console.log('documentDefinition', documentDefinition);\n\n    pdfMake.createPdf(documentDefinition).open();\n     \n  }\n\n  // =====================\n  // CONSILTA DE SERVICIOS\n  // =====================\n\n  getProveedores(){\n\n    let arrayProvider : any [];\n\n    arrayProvider = [];\n    arrayProvider.push({proveedor_id : 1, proveedor_nombre : 'CABLES MONTERREY SA DE CV'},\n                    {proveedor_id : 2, proveedor_nombre : 'VENTA DE CABLEADO SA'}\n                    )\n\n    this.datasourcePoveedores = arrayProvider;\n\n    console.log(this.datasourcePoveedores);\n  }\n\n  getPO_Hdr(codigo_cotizacion : string){\n    // ordenes de compra Todas\n    let arrayPO_Hdr : any[];\n    this._purchaseOrderservice.getPOAll().subscribe(\n      res=> {\n        console.log('PurchaseOrder', res);\n        this.podatasource = new MatTableDataSource(res);\n\n        arrayPO_Hdr = res.filter(e => e.codigo_cotizacion == codigo_cotizacion)\n        this.po_count = arrayPO_Hdr.length + 1;\n        this.odc_Numero = codigo_cotizacion + '-' + this.po_count.toString();\n        this.newProject.controls[\"odc_Numero\"].setValue(codigo_cotizacion + '-' + this.po_count.toString());\n        \n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n\n  getCotizacionesAll(){\n    this._quotationservice.getQuotationAll().subscribe(\n      res=> {\n        this.datasourceCotizaciones = res;\n        console.log('COTIZACIONES TODAS', res);\n  \n      },\n      error => console.log(\"error consulta proyectos\",error)\n    )\n  }\n\n  getcotizacionesDetail(cotizacion_id : any){\n    this._quotationservice.getQuotationDetail(cotizacion_id).subscribe(\n      res=> {\n        this.datasourceCotizacionesDetalle = res;\n        console.log('COTIZACIONES TODAS', res);\n\n        this.getPO_Hdr(res[0][\"codigo_cotizacion\"]);\n  \n      },\n      error => console.log(\"error consulta proyectos\",error)\n    )\n  }\n\n  insertPOHdr(table : any){\n    \n    let arrayTodb : any;\n    let arrayDetail : any[] = [];\n    let conteo : number = 0;\n\n    table.forEach(element => {\n\n      //Hdr\n      if(conteo == 0){\n        arrayTodb = {codigo : this.odc_Numero\n                  , cotizacion_id : element.cotizacion_id\n                  , proveedor_id : this.newProject.controls[\"proveedor_id\"].value // this.proveedor_id\n                  , fecha : moment(new Date, 'YYYY-M-DD')\n                  , iva : this.iva\n                  , iva_moneda : this.ivaSubtotal\n                  , tipo_moneda : 'MXN'\n                  , sub_total : this.subtotal\n                  , total : this.total\n                }\n      }\n\n      //Detalle\n      if(element.activo == true)\n      {\n        console.log('tabla', element.precio_unitario)\n        console.log('pu', element.precio_unitario)\n\n        arrayDetail.push( {ordendecompradetalle_id : 0\n                            , ordendecompra_id : this.ordendecompra_id\n                            , cotizaciondetalle_id : element.cotizaciondetalle_id\n                            , sku : element.sku\n                            , medida : element.medida\n                            , color : element.color\n                            , otras_especificaciones : element.otras_especificaciones\n                            , cantidad : element.cantidad\n                            , unidad_medida : element.unidad_medida\n                            , costo : element.costo\n                            , precio_unitario : element.precio_unitario\n                            , importe_total : element.cantidad * (element.precio_unitario - element.descuento)\n                            , descuento : element.descuento\n                            , descripcion : element.descripcion });\n      }\n      conteo++;\n    });\n\n    console.log('ARRAY tO db', arrayTodb);\n\n    this._purchaseOrderservice.insertPO_Hdr(arrayTodb).subscribe(\n      res=> {\n        console.log('Se inserto con éxito', res);\n  \n        // INSERTA REQUISICIONES DET\n        this.insertPODet(res, arrayDetail);\n      },\n      error => console.log(\"error alta de proyectos\",error)\n    )\n  }\n\n  insertPODet(po_id : any, arrayDetail : any){\n\n    let arrayTodbDetail : any;\n\n    arrayDetail.forEach(element => {\n\n      arrayTodbDetail = {ordendecompradetalle_id : 0\n                        , ordendecompra_id : po_id\n                        , cotizaciondetalle_id : element.cotizaciondetalle_id\n                        , sku : element.sku\n                        , medida : element.medida\n                        , color : element.color\n                        , otras_especificaciones : element.otras_especificaciones\n                        , cantidad : element.cantidad\n                        , unidad_medida : element.unidad_medida\n                        , costo : element.costo\n                        , precio_unitario : element.precio_unitario \n                        , importe_total : element.cantidad * (element.precio_unitario - element.descuento)\n                        , descuento : element.descuento\n                        , descripcion : element.descripcion }\n    \n                        console.log('detalle', arrayTodbDetail);\n\n    this._purchaseOrderservice.insertPODetail(arrayTodbDetail).subscribe(\n      res=> {\n        console.log('Se inserto con éxito', res);\n  \n      },\n      error => console.log(\"error alta de proyectos\",error)\n    )\n    });\n  }\n\n  getsupplierAll(){\n    // Selecciona todos los proveedores\n    this._supplyservice.getsupplyAll().subscribe(\n      res=> {\n        this.datasourcesupplier = res;\n        console.log('PROVEEDORES', this.datasourcesupplier);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n  getPO_Detail(po_id : any){\n    // Selecciona ordenes de compra\n    this._purchaseOrderservice.getPODetail(po_id).subscribe(\n      res=> {\n        this.datasourceCotizacionesDetalle = res;\n        console.log('ORDENES DE COMPRA DET', this.datasourceCotizacionesDetalle);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n}\n","<div fxLayout=\"row\">\n    <h4>Nueva Orden de Compra</h4>\n  </div>\n  <br>\n  <div mat-dialog-content-example [formGroup]=\"newProject\">\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>Cotización</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div><br>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"cotizacion_id\" (selectionChange)=\"cotizacionSelected(newProject, $event)\" > <!-- [(ngModel)]=\"cotizacion_id\"-->\n              <mat-option *ngFor=\"let op of datasourceCotizaciones\" [value]=\"op.cotizacion_id\" >\n                {{op.codigo}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('cotizacion_id').valid && newProject.get('cotizacion_id').touched\" class=\"help-block\" style=\"color: red;\"> seleccione una cotización</span>\n        </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><br>Detalle</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n            <div><br>\n              <mat-form-field>\n                <input [type]=\"codigo_requisicioninterna\" matInput class=\"form-control form-control-line control\" formControlName=\"codigo_requisicioninterna\"> <!--[(ngModel)]=\"codigo_requisicioninterna\"-->\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('codigo_requisicioninterna').valid && newProject.get('codigo_requisicioninterna').touched\" class=\"help-block\" style=\"color: red;\"> seleccione una requisición</span>\n          </div>\n      </div>\n    </div>\n  \n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>Orden de compra</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"odc_Numero\" matInput class=\"form-control form-control-line control\" formControlName=\"odc_Numero\"> <!-- [(ngModel)]=\"odc_Numero\"-->\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('odc_Numero').valid && newProject.get('odc_Numero').touched\" class=\"help-block\" style=\"color: red;\"> seleccione un número de órden de compra</span>\n          </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><br>Proveedor</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"proveedor_id\" ><!--[(ngModel)]=\"proveedor_id\"-->\n                <mat-option *ngFor=\"let op of datasourcesupplier\" [value]=\"op.proveedorid\" (selectionChange)=\"selectsupplier($event)\">\n                  {{op.nombre}}\n                </mat-option>\n              </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('proveedor_id').valid && newProject.get('proveedor_id').touched\" class=\"help-block\" style=\"color: red;\"> seleccione un proveedor</span>\n        </div>\n      </div>\n    </div>\n    \n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>IVA</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"iva\" (selectionChange)=\"ivaSelected(newProject, $event)\" > <!--[(ngModel)]=\"iva\"-->\n              <mat-option value= \"16\" selected=\"selected\">16%</mat-option>\n              <mat-option value= \"10\">10%</mat-option>\n              <mat-option value= \"0\">0</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('iva').valid && newProject.get('iva').touched\" class=\"help-block\" style=\"color: red;\"> seleccione un iva</span>\n        </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <button mat-raised-button color=\"accent\" (click)=\"addSupplier(newProject, $event)\"> + </button>\n              <button mat-raised-button color=\"accent\" (click)=\"reloadSupplier(newProject, $event)\"> o </button>\n          </div>\n      </div>\n    </div>\n\n\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>Moneda</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"moneda\" > <!--[(ngModel)]=\"moneda\"-->\n              <mat-option value= \"MXN\" selected=\"selected\">MXN</mat-option>\n              <mat-option value= \"USD\">USD</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('moneda').valid && newProject.get('moneda').touched\" class=\"help-block\" style=\"color: red;\"> seleccione una moneda</span>\n        </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n            <div></div>\n      </div>\n    </div>\n\n\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n        Subtotal: {{subtotal | currency}}\n      </div>\n      <div fxFlex.gt-sm=\"20%\">\n        IVA: {{ivaSubtotal | currency}}\n      </div>\n      <div fxFlex.gt-sm=\"20%\">\n          Total: {{total | currency}}\n      </div>\n  </div>\n\n    <br>\n    <!--Tabla de captura-->\n    <div fxLayout=\"row\" class=\"division\">\n        \n    </div>\n\n  </div>\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div *ngIf=\"estadoPantalla == 'aprove'\"><button mat-raised-button color=\"accent\" (click)=\"downloadAsPDF()\">PDF</button></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div *ngIf=\"estadoPantalla == 'aprove'\"><button mat-raised-button color=\"accent\" (click)=\"Authoriza(newProject, $event)\">Autorizar</button></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n        <!-- <div><button mat-raised-button color=\"warn\" (click)=\"htmlToPDF()($event)\">ToPDF</button></div> -->\n      </div>\n    </div>\n     <!-- INICIA CUERPO DE LA PÁGINA-->\n     <div class=\"col-12 col-md-12 p-0\">\n      <div class=\"card\">\n        <div class=\"card-body card-body-table\" id=\"AllTable\" #AllTable>\n          <mat-table [dataSource]=\"datasourceCotizacionesDetalle\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\" #tabla1>\n\n            <ng-container matColumnDef=\"select\">\n                <th mat-header-cell *matHeaderCellDef>\n                    <div style=\"width: 100%; text-align: left; vertical-align: middle;\">\n                        ACTIVAR\n                </div>\n                  </th>\n                  <div style=\"width: 50px;\">\n                  <td mat-cell *matCellDef=\"let element; let i = index\">\n                    <mat-checkbox color=\"warn\"\n                                [checked]=\"element.activo\"\n                                (click)=\"$event.stopPropagation()\"\n                                (change)=\"ActivarDesactivar(element.activo, $event)\"\n                                [(ngModel)]=\"element.activo\"\n                                >\n                    </mat-checkbox>\n                  </td>\n                </div>\n            </ng-container>\n              \n            <!-- ID Column -->\n            <ng-container matColumnDef=\"SKU\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>SKU</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.SKU}} </td>\n            </ng-container>\n\n            <!-- ID Column -->\n            <ng-container matColumnDef=\"cantidad\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> <span>Cantidad</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.cantidad}} </td>\n            </ng-container>\n            \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"unidad_de_medida\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Unidad de Medida </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.um}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"descripcion\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Descripción </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.descripcion}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"medida\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Medida </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.medida}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"color\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Color </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.color}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"otras_Especificaciones\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Otras especificaciones </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.otras_especificaciones}} </td>\n            </ng-container>\n\n            <!-- cantidad_Ordenar Column -->\n            <ng-container matColumnDef=\"cantidad_Ordenar\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Cantidad seleccionada </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                    <input type='cantidad_Ordenar' [(ngModel)]=\"element.cantidad\" (keyup)=\"checkEnterKey($event, 'presupuesto')\" (blur)=\"onBlurMethod($event)\">\n                </td>\n              </ng-container>\n\n            <!-- precio column -->\n            <ng-container matColumnDef=\"precio_unitario\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Precio Unitario</th>\n              <td mat-cell *matCellDef=\"let element\"> \n                  <input type='precio_unitario' [(ngModel)]=\"element.precio_unitario\" (keyup)=\"checkEnterKey($event, 'precio_unitario')\" (blur)=\"onBlurMethod($event)\"> \n              </td>\n            </ng-container>\n\n            <!-- descuento column -->\n            <ng-container matColumnDef=\"descuento\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Descuento </th>\n              <td mat-cell *matCellDef=\"let element\"> \n                  <input type='descuento' [(ngModel)]=\"element.descuento\" (keyup)=\"checkEnterKey($event, 'descuento')\" (blur)=\"onBlurMethod($event)\">\n              </td>\n            </ng-container>\n            \n            <!-- descuento column -->\n            <!-- <ng-container matColumnDef=\"importe\" hidden>\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Importe </th>\n              <td mat-cell *matCellDef=\"let element\"> {{importe | currency}}\n              </td>\n            </ng-container> -->\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </mat-table>\n    \n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator> -->\n      </div>\n\n      <!-- REPORTE DE ORDEN DE COMPRA -->\n\n      <div class=\"container\" hidden>\n        <div id=\"pdfTable\" #pdfTable>\n          <!-- <h4>COMERCIAL CONTINENTAL SA DE CV</h4> -->\n\n          <table width=\"100%\">\n            <tr>\n              <td width=\"20%\">LOGO</td>\n              <td width=\"60%\">COMERCIAL SA DE CV</td>\n              <td width=\"20%\">Orden de compra</td>\n            </tr>\n          </table>\n\n          <table  id=\"contentToConvert\" width=\"100%\" border=\"0\">\n            <tr>\n              <td style=\"width: 300px;\">LOGO</td><!--LOGO-->\n              <td style=\"width: 1000px;\">COMERCIAL DE MEXICO</td><!--LOGO-->\n              <td style=\"width: 300px;\">ORDEN DE COMPRA</td><!--ORDEN DE COMPRA-->\n            </tr>\n            <tr>\n              <td style=\"width: 300px;\">LOGO</td><!--LOGO-->\n              <td style=\"width: 1000px;\">COMERCIAL DE MEXICO</td><!--LOGO-->\n              <td style=\"width: 300px;\">ORDEN DE COMPRA</td><!--ORDEN DE COMPRA-->\n            </tr>\n            <tr>\n              <td style=\"width: 300px;\">LOGO</td><!--LOGO-->\n              <td style=\"width: 1000px;\">COMERCIAL DE MEXICO</td><!--LOGO-->\n              <td style=\"width: 300px;\">ORDEN DE COMPRA</td><!--ORDEN DE COMPRA-->\n            </tr>\n          </table>\n\n\n          <div class=\"card-body card-body-table\" id=\"AllTable\" #AllTable>\n            <mat-table [dataSource]=\"datasourceCotizacionesDetalle\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n  \n              <ng-container matColumnDef=\"select\">\n                  <th mat-header-cell *matHeaderCellDef>\n                      <div style=\"width: 100%; text-align: left; vertical-align: middle;\">\n                          ACTIVAR\n                  </div>\n                    </th>\n                    <div style=\"width: 50px;\">\n                    <td mat-cell *matCellDef=\"let element; let i = index\">\n                      <mat-checkbox color=\"warn\"\n                                  [checked]=\"element.activo\"\n                                  (click)=\"$event.stopPropagation()\"\n                                  (change)=\"ActivarDesactivar(element.activo, $event)\"\n                                  [(ngModel)]=\"element.activo\"\n                                  >\n                      </mat-checkbox>\n                    </td>\n                  </div>\n              </ng-container>\n                \n              <!-- ID Column -->\n              <ng-container matColumnDef=\"SKU\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>SKU</span> </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.SKU}} </td>\n              </ng-container>\n  \n              <!-- ID Column -->\n              <ng-container matColumnDef=\"cantidad\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> <span>Cantidad</span> </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.cantidad}} </td>\n              </ng-container>\n              \n              <!-- Name Column -->\n              <ng-container matColumnDef=\"unidad_de_medida\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Unidad de Medida </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.um}} </td>\n              </ng-container>\n  \n              <!-- Email Column -->\n              <ng-container matColumnDef=\"descripcion\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Descripción </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.descripcion}} </td>\n              </ng-container>\n  \n              <!-- Email Column -->\n              <ng-container matColumnDef=\"medida\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Medida </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.medida}} </td>\n              </ng-container>\n  \n              <!-- Email Column -->\n              <ng-container matColumnDef=\"color\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Color </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.color}} </td>\n              </ng-container>\n  \n              <!-- Email Column -->\n              <ng-container matColumnDef=\"otras_Especificaciones\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Otras especificaciones </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.otras_especificaciones}} </td>\n              </ng-container>\n  \n              <!-- cantidad_Ordenar Column -->\n              <ng-container matColumnDef=\"cantidad_Ordenar\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Cantidad seleccionada </th>\n                  <td mat-cell *matCellDef=\"let element\"> \n                      <input type='cantidad_Ordenar' [(ngModel)]=\"element.cantidad\" (keyup)=\"checkEnterKey($event, 'presupuesto')\" (blur)=\"onBlurMethod($event)\">\n                  </td>\n                </ng-container>\n  \n              <!-- precio column -->\n              <ng-container matColumnDef=\"precio_unitario\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Precio Unitario</th>\n                <td mat-cell *matCellDef=\"let element\"> \n                    <input type='precio_unitario' [(ngModel)]=\"element.precio_unitario\" (keyup)=\"checkEnterKey($event, 'precio_unitario')\" (blur)=\"onBlurMethod($event)\"> \n                </td>\n              </ng-container>\n  \n              <!-- descuento column -->\n              <ng-container matColumnDef=\"descuento\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Descuento </th>\n                <td mat-cell *matCellDef=\"let element\"> \n                    <input type='descuento' [(ngModel)]=\"element.descuento\" (keyup)=\"checkEnterKey($event, 'descuento')\" (blur)=\"onBlurMethod($event)\">\n                </td>\n              </ng-container>\n\n  \n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </mat-table>\n      \n          </div>\n        </div>\n      </div>\n    </div>\n  ","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport { from } from 'rxjs';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryModel } from '../../../models/category.model';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { ProjectCaptureComponent } from 'src/app/pages/projects/project-capture/project-capture.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { coerceStringArray } from '@angular/cdk/coercion';\nimport { CustomerDetailComponent } from '../../customer-detail/customer-detail.component';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { customerservice } from '../../../services/customer.service';\nimport { Console } from 'console';\n\n@Component({\n  selector: 'app-project-capture-detail',\n  templateUrl: './project-capture-detail.component.html',\n  styleUrls: ['./project-capture-detail.component.css']\n})\nexport class ProjectCaptureDetailComponent implements OnInit {\n\t\n// =========================\n// DECLARACIONES\n// =========================\n\n  fecha_inicial_proyecto:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  fecha_final_proyecto:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  nombre_proyecto : any = ''  \n  cliente : any = '1';\n  presupuesto_proyecto : any = 0;\n  responsable_proyecto : any = '';\n  centro_de_costo_proyecto : any = '1';\n  almacen : any = '1';\n  codigo_proyecto : any = '';\n  proeycto_id_mayor : number = 0;\n  proeycto_numero_mayor : number = 0;\n\n  numerotxt : any;\n  nombretxt : any;\n  clientecbo : any;  \n  presupuestotxt : any;\n  responsabletxt : any;\n  fechaInicialtxt : any;\n  fechaFinaltxt : any;\n  centroDeCostoscbo : any;\n  almacencbo : any;\n  projectInfo : any;\n  projectId : any;\n  public newProject: FormGroup;\n  datasourceCategories : any[] = [];\n  datasourceProyects : any[] = [];\n  datasourceCustomers : any;\n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , private _customerservice : customerservice\n    , @Inject(MAT_DIALOG_DATA) public data,public _snackBar: MatSnackBar\n    , public dialog: MatDialog\n    , private formBuilder: FormBuilder\n  ) { \n    this.projectInfo = data.arrayData;\n    this.projectId = data.projectId;\n\n    this.newProject = this.formBuilder.group({\n      codigo_proyecto :  new FormControl(this.codigo_proyecto, [Validators.required, Validators.minLength(4), Validators.maxLength(7)]),\n      // proyecto_id: new FormControl(''),\n      nombre_proyecto: new FormControl('', [Validators.required, Validators.minLength(1), Validators.maxLength(50)]),\n      cliente: new FormControl(this.cliente, [Validators.required]),\n      // presupuesto_proyecto: ['', [Validators.required, Validators.pattern('[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,3}$')]],\n      presupuesto_proyecto: new FormControl(this.presupuesto_proyecto, [Validators.required, Validators.pattern('^[0-9]+([.][0-9]{1,2})?$')]),\n      // presupuesto_proyecto: new FormControl('', Validators.required),\n      fecha_inicial_proyecto: new FormControl(''),\n      fecha_final_proyecto: new FormControl(''),\n      responsable_proyecto: new FormControl('', [Validators.required]),\n      centroDeCostos: new FormControl('', [Validators.required]),\n      almacen: new FormControl('')  \n    });\n  }\n\n// =========================\n// PROCEDIMIENTOS\n// =========================\n\n  ngOnInit(): void {\n\n    this.getcustomerAll();\n    this.getAllProjects();\n    this.getEnabledCategories();\n\nconsole.log('data de entrada', this.projectInfo);\n\n    if(this.projectId != 0){\n        this.newProject.patchValue({\n          proyecto_id : this.projectInfo[\"proyecto_id\"],\n          codigo_proyecto : this.projectInfo[\"codigo_proyecto\"],\n          nombre_proyecto : this.projectInfo[\"nombre_proyecto\"] ,\n          cliente : this.projectInfo[\"cliente_id\"],\n          presupuesto_proyecto : this.projectInfo[\"presupuesto_proyecto\"] ,\n          fecha_inicial_proyecto : this.projectInfo[\"fecha_inicial_proyecto\"],\n          fecha_final_proyecto : this.projectInfo[\"fecha_final_proyecto\"] ,\n          responsable_proyecto : this.projectInfo[\"responsable_proyecto\"],\n          centroDeCostos : this.projectInfo[\"centro_de_costo_proyecto\"].toString() ,\n          almacen : this.projectInfo[\"almacen_id\"].toString()\n      })\n      this.nombre_proyecto = this.projectInfo[\"nombre_proyecto\"];\n      this.cliente = this.projectInfo[\"cliente_id\"].toString() ;\n      this.presupuesto_proyecto = this.projectInfo[\"presupuesto_proyecto\"];\n      this.fecha_inicial_proyecto = this.projectInfo[\"fecha_inicial_proyecto\"];\n      this.fecha_final_proyecto = this.projectInfo[\"fecha_final_proyecto\"];\n      this.responsable_proyecto = this.projectInfo[\"responsable_proyecto\"];\n      this.centro_de_costo_proyecto = this.projectInfo[\"centro_de_costo_proyecto\"].toString();\n      this.almacen = this.projectInfo[\"almacen_id\"].toString();\n      this.codigo_proyecto = '';\n    }\n\n  }\n\n  validaCamposRequeridos() : boolean{\n    let valido : boolean = true;\n    valido = (this.newProject.get('codigo_proyecto').status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"nombre_proyecto\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"cliente\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"presupuesto_proyecto\").status == 'INVALID' || this.newProject.get(\"presupuesto_proyecto\").value <= 0) ? false : valido;\n    valido = (this.newProject.get(\"fecha_inicial_proyecto\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"fecha_final_proyecto\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"responsable_proyecto\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"centroDeCostos\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"almacen\").status == 'INVALID') ? false : valido;\n\n    return valido;\n\n  }\n\n  save(form, event){\n\n    let arrayTodb : any;\n\n    if(this.validaCamposRequeridos() == false){\n      this.openSnackBar('debe capturar los campos requeridos', 'success');\n      return;\n    }\n\n    if(this.projectId == 0){\n\n      arrayTodb = { codigo_proyecto : this.newProject.controls[\"codigo_proyecto\"].value, // this.codigo_proyecto,\n                  nombre_proyecto : this.newProject.controls[\"nombre_proyecto\"].value, //this.nombre_proyecto,\n                  cliente_id : this.newProject.controls[\"cliente\"].value, //this.cliente,\n                  presupuesto_proyecto : this.newProject.controls[\"presupuesto_proyecto\"].value, //this.presupuesto_proyecto,\n                  fecha_inicial_proyecto : moment(this.fecha_inicial_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n                  fecha_final_proyecto : moment(this.fecha_final_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n                  responsable_proyecto : this.newProject.controls[\"responsable_proyecto\"].value, //this.responsable_proyecto,\n                  centro_de_costo_proyecto : this.newProject.controls[\"centroDeCostos\"].value, //this.centro_de_costo_proyecto,\n                  almacen_id : this.newProject.controls[\"almacen\"].value}; //this.almacen};\n\n      // Actualiza registro NUEVO\n      this._projectService.insertProjects(arrayTodb).subscribe(\n        res=> {\n          console.log('Se inserto con éxito', res);\n          this.openSnackBar('Se genero el proyecto exitosamente', 'success');\n          \n          // Inserta categorias\n          this.insertCategories();\n        },\n        error => console.log(\"error alta de proyectos\",error)\n      )\n    // Inserta categorias\n    // this.insertCategories();\n    // this.dialogRef.close();\n    }\n    else{\n      arrayTodb = {proyecto_id : this.projectId,\n        nombre_proyecto : this.newProject.controls[\"nombre_proyecto\"].value, //this.nombre_proyecto,\n        cliente_id : this.newProject.controls[\"cliente\"].value, //this.cliente,\n        presupuesto_proyecto : this.newProject.controls[\"presupuesto_proyecto\"].value, //this.presupuesto_proyecto,\n        fecha_inicial_proyecto : moment(this.fecha_inicial_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n        fecha_final_proyecto : moment(this.fecha_final_proyecto, 'YYYY-MM-DD').format('YYYY-MM-DD'),\n        responsable_proyecto : this.newProject.controls[\"centroDeCostos\"].value, //this.newProject.controls[\"responsable_proyecto\"].value, //this.responsable_proyecto,\n        centro_de_costo_proyecto : this.newProject.controls[\"centroDeCostos\"].value, //this.centro_de_costo_proyecto,\n        almacen_id : this.newProject.controls[\"almacen\"].value, //this.almacen,\n        codigo_proyecto : this.newProject.controls[\"codigo_proyecto\"].value}; // this.codigo_proyecto};\n\n        // Actualiza registro EDICION\n        this._projectService.updateProjects(arrayTodb).subscribe(\n        res=> {\n        console.log('Se edito con éxito', res);\n        },\n        error => console.log(\"error consulta regiones\",error)\n        )\n    }\n    this.dialogRef.close();\n  }\n\ninsertCategories(){\n  // Obtiene Proyecto Registrado\n  let datasourceProyectos : MatTableDataSource<projectModel>\n  let proyectoIdMaximo : any = \"0\";\n  let codigoProyecto : any = \"0\";\n  let arrayProjectCategories : any;\n  this._projectService.getProjectAll().subscribe(\n    res=> {\n      datasourceProyectos = new MatTableDataSource(res);\n\n      proyectoIdMaximo = (datasourceProyectos.filteredData[datasourceProyectos.filteredData.length -1][\"proyecto_id\"]);\n      codigoProyecto = datasourceProyectos.filteredData.find(e => e.proyecto_id == proyectoIdMaximo);\n\n      this.datasourceCategories.forEach(element => {\n        arrayProjectCategories = {proyecto_id : proyectoIdMaximo\n            , categoria_id : element.categoria_id\n            , presupuesto : 0\n            , responsable : ''\n            , fecha_inicial : moment(new Date, 'YYYY-MM-DD').format('YYYY-MM-DD')\n            , almacen_id : 1\n            , codigo_proyectocategoria : codigoProyecto[\"codigo_proyecto\"] + '-' + element.codigo_categoria\n        }\n\n        // Inserta Proyecto Categoria\n        this._projectCategoryservice.insertProjects(arrayProjectCategories).subscribe(\n          res=> {\n            console.log('CATEGORIAS', this.datasourceCategories);\n          },\n          error => console.log(\"error al insertar proyectos categorias\",error)\n        )\n        \n        arrayProjectCategories = null;\n\n      });\n      \n    },\n    error => console.log(\"error consulta todos los proyectos\",error)\n  )\n\n}\n\nfechaInicial(event){\n  console.log('fecha', this.fecha_inicial_proyecto);\n}\n\ncancel(event){\n  this.dialogRef.close();\n}\n\naddClient(form, event){\n  // Catálogo de clientes\n  const dialogConfig = new MatDialogConfig();\n\n  dialogConfig.width = '1400px';\n  dialogConfig.height = '700px';\n  dialogConfig.disableClose = true;\n\n  const dialogRef = this.dialog.open(CustomerDetailComponent, dialogConfig);\n\n  dialogRef.afterClosed().subscribe(result => {\n    // window.location.reload();\n  });\n}\n\nreloadClient(form, event){\n  // Carga clientes\n  this.getcustomerAll();\n}\n\n\nselectcustommer(event){\n  this.cliente = event.value;\n}\n\n  // =========================\n  // UTILERIAS\n  // =========================\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  _keyUp(event: any) {\n    let ultimoCaracter : any;\n    let valido : boolean = false;\n\n    console.log('presione : ', (event.target as HTMLInputElement).value);\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n\n    if(this.presupuesto_proyecto.length > 0){\n      ultimoCaracter = this.presupuesto_proyecto.slice(-1);\n\n      for(let i = 0; i < 10; i++)\n      {\n        if(ultimoCaracter == i){\n          valido = true;\n        }\n      }\n\n      if(ultimoCaracter == '.'){\n        valido = true;\n      }\n\n      if(valido == false)\n      {\n        this.presupuesto_proyecto = this.presupuesto_proyecto.substring(0,this.presupuesto_proyecto.length-1)\n      }\n\n    }\n  }\n\n  // =========================\n  // SERVICIOS\n  // =========================\n\n  getAllProjects(){\n    // Actualiza registro NUEVO\n    this._projectService.getProjectAll().subscribe(\n      res=> {\n        this.datasourceProyects = res;\n        if(this.projectId == 0){\n          this.codigo_proyecto = Number(this.datasourceProyects[this.datasourceProyects.length - 1][\"codigo_proyecto\"]) + 1;\n          this.newProject.controls[\"codigo_proyecto\"].setValue(Number(this.datasourceProyects[this.datasourceProyects.length - 1][\"codigo_proyecto\"]) + 1);\n          console.log('PROEYCTOS TODOS', this.proeycto_numero_mayor);\n        }else{\n          this.codigo_proyecto = this.projectInfo[\"codigo_proyecto\"];\n        }\n\n      },\n      error => console.log(\"error consulta proyectos\",error)\n    )\n  }\n\n  getEnabledCategories(){\n    // Selecciona todas las categorías\n    this._categoryService.getCategoryAll().subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('CATEGORIAS', this.datasourceCategories);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n  getcustomerAll(){\n    // Selecciona todos los clientes\n    this._customerservice.getcustomerAll().subscribe(\n      res=> {\n        this.datasourceCustomers = res;\n        console.log('CLIENTES', this.datasourceCustomers);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n}\n"," <div fxLayout=\"row\">\n  <h4>Nuevo Proyecto</h4>\n</div>\n<br>\n<div mat-dialog-content-example [formGroup]=\"newProject\">\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Código</div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n        <div>\n          <mat-form-field>\n          <!-- <input type=\"text\" class=\"form-control form-control-line control\" formControlName=\"codigo_proyecto\" [(ngModel)]=\"codigo_proyecto\" disabled > -->\n          <input [type]=\"codigo_proyecto\" matInput class=\"form-control form-control-line control\" formControlName=\"codigo_proyecto\" disabled > <!--[(ngModel)]=\"codigo_proyecto\" -->\n        </mat-form-field>\n        <span *ngIf=\"!newProject.get('codigo_proyecto').valid && newProject.get('codigo_proyecto').touched\" class=\"help-block\" style=\"color: red;\"> Capture un código</span>\n        </div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Nombre</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div>\n        <mat-form-field>\n          <!--[(ngModel)]=\"nombretxt\" -->\n          <!-- <input type=\"text\" class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"nombre_proyecto\" [(ngModel)]=\"nombre_proyecto\"> -->\n          <input [type]=\"nombre_proyecto\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"nombre_proyecto\" > <!--[(ngModel)]=\"nombre_proyecto\"-->\n        </mat-form-field>\n        <span *ngIf=\"!newProject.get('nombre_proyecto').valid && newProject.get('nombre_proyecto').touched\" class=\"help-block\" style=\"color: red;\"> Debe capturar un nombre</span>\n      </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Cliente</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"cliente\" (selectionChange)=\"selectcustommer($event)\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\" [(ngModel)]=\"cliente\" -->\n              <mat-option *ngFor=\"let op of datasourceCustomers\" [value]=\"op.clienteid\">\n                {{op.nombre}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('cliente').valid && newProject.get('cliente').touched\" class=\"help-block\" style=\"color: red;\"> Seleccione un cliente</span>\n        </div>\n        <button mat-raised-button color=\"accent\" (click)=\"addClient(newProject, $event)\"> + </button>\n        <button mat-raised-button color=\"accent\" (click)=\"reloadClient(newProject, $event)\"> o </button>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Presupuesto</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div>\n        <mat-form-field>\n          <input [type]=\"presupuesto_proyecto\" matInput class=\"form-control form-control-line control\" formControlName=\"presupuesto_proyecto\" step=\"any\" (keyup)=\"_keyUp($event)\" > <!--required=\"required\" min=\"0\" max=\"999999999\"  pattern=\"^\\$\\d{1,3}(,\\d{3})*(\\.\\d+)?$\" [(ngModel)]=\"presupuesto_proyecto\" -->\n        </mat-form-field>\n        <span *ngIf=\"!newProject.get('presupuesto_proyecto').valid && newProject.get('presupuesto_proyecto').touched\" class=\"help-block\" style=\"color: red;\"> capture  un presupuesto</span>\n      </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Fecha Inicial</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div><mat-form-field appearance=\"fill\">\n          <mat-label>Choose a date</mat-label>\n          <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha_inicial_proyecto\" (dateChange)=\"fechaInicial($event)\" class=\"control\"><!--[(ngModel)]=\"fecha_inicial_proyecto\" -->\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n        <span *ngIf=\"!newProject.get('fecha_inicial_proyecto').valid && newProject.get('fecha_inicial_proyecto').touched\" class=\"help-block\" style=\"color: red;\"> Seleccione una fecha inicial</span>\n      </div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Fecha Final</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div><mat-form-field appearance=\"fill\">\n        <mat-label>Choose a date</mat-label>\n        <input matInput [matDatepicker]=\"pickerf\" formControlName=\"fecha_final_proyecto\" class=\"control\"><!--[(ngModel)]=\"fecha_final_proyecto\" -->\n        <mat-datepicker-toggle matSuffix [for]=\"pickerf\"></mat-datepicker-toggle>\n        <mat-datepicker #pickerf></mat-datepicker>\n      </mat-form-field>\n      <span *ngIf=\"!newProject.get('fecha_final_proyecto').valid && newProject.get('fecha_final_proyecto').touched\" class=\"help-block\" style=\"color: red;\"> Seleccione una fecha final</span>\n    </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Responsable</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\">\n        <div>\n          <mat-form-field>\n            <input [type]=\"responsable_proyecto\" matInput class=\"form-control form-control-line control\" placeholder=\"Responsable\" formControlName=\"responsable_proyecto\" ><!--[(ngModel)]=\"responsable_proyecto\"-->\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('responsable_proyecto').valid && newProject.get('responsable_proyecto').touched\" class=\"help-block\" style=\"color: red;\"> Capture un responsable</span>\n        </div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Centro de costos</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\">\n      <div>\n        <mat-form-field>\n          <input [type]=\"centro_de_costo_proyecto\" matInput class=\"form-control form-control-line control\" placeholder=\"centroDeCostos\" formControlName=\"centroDeCostos\" ><!--[(ngModel)]=\"centro_de_costo_proyecto\"-->\n        </mat-form-field>\n        <span *ngIf=\"!newProject.get('centroDeCostos').valid && newProject.get('centroDeCostos').touched\" class=\"help-block\" style=\"color: red;\"> Capture un centro de costos</span>\n      </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Almacén</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control\"  formControlName=\"almacen\"><!--(selectionChange)=\"emitFilters($event, 'Enviado')\"  [(ngModel)]=\"almacen\"-->\n              <mat-option value= \"0\" selected=\"selected\">SELECCIONA</mat-option>\n              <mat-option value= \"1\">California</mat-option>\n              <mat-option value= \"2\">Norte</mat-option>\n              <mat-option value= \"3\">Centro</mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('almacen').valid && newProject.get('almacen').touched\" class=\"help-block\" style=\"color: red;\"> Asigne un almacén</span>\n        </div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n  </div>\n</div>\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n    </div>\n  </div>\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {MAT_SNACK_BAR_DATA} from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport * as XLSX from 'xlsx';\nimport { from } from 'rxjs';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryModel } from '../../../models/category.model';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { ProjectCaptureComponent } from 'src/app/pages/projects/project-capture/project-capture.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from '../../../services/requisition/requisition.service';\nimport { requisitionModelDetail } from 'src/app/models/requisition.model.detail';\nimport { AppConstants } from '../../../shared/app.constants';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { filter } from 'rxjs-compat/operator/filter';\nimport { quotationDetailModel } from 'src/app/models/quotation-detail.model';\nimport { quotationDetailFileModel } from 'src/app/models/quotation-detail-file.model';\nimport { providerModel } from 'src/app/models/provider.model';\n\n@Component({\n  selector: 'app-quotation-detail-files',\n  templateUrl: './quotation-detail-files.component.html',\n  styleUrls: ['./quotation-detail-files.component.css']\n})\nexport class QuotationDetailFilesComponent implements OnInit {\n\n  // =========================\n  // DECLARACIONES\n  // =========================\n\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n\n  QuotationInfo : any;\n  newProject: FormGroup;\n  displayedColumns = ['SKU', 'file'];\n\n  // NgModels\n  proveedor_id : any = 0;\n  UploadDataQuotation : MatTableDataSource<quotationDetailFileModel>;\n  datasourcePoveedores : any[] = [];\n  public nombreArchivo : any = 'selecciona archivo';\n  dataExcel: any[];\n  dataShowUploadFile : MatTableDataSource<quotationDetailFileModel>;\n  \n  // NGModels\n  cotizacionId : any = 0;\n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , @Inject(MAT_DIALOG_DATA) public data\n    , public snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n    , private _snackBar : MatSnackBar\n    , private _requisitionservice : requisitionservice\n    // , private notificationService: NotificationService,\n  ) { \n    this.QuotationInfo = data.arrayData;\n    this.cotizacionId = data.cotizacionId;\n\n    this.newProject = this.formBuilder.group({\n      cotizacion_Id : new FormControl(''),\n      proveedor_id : new FormControl('')\n  });\n  }\n\n  ngOnInit(): void {\n    this.cotizacionId = this.QuotationInfo[\"cotizacion_id\"];\n    console.log('cotizacion aqui', this.QuotationInfo[\"cotizacion_id\"]);\n    this.getProveedores();\n  }\n\n  onFileChange(event){\n    /* wire up file reader */\n    const target: DataTransfer = <DataTransfer>(event.target);\n    let extencionArchivo : string = '';\n\n    this.UploadDataQuotation = null;\n\n    if (target.files.length !== 1) {\n      throw new Error('No se pueden seleccionar multiples archivos');\n    }\n\n    this.nombreArchivo = (target.files.length > 0) ? target.files[0][\"name\"].substring(1,30) : \" (archivo nuevo) \";\n    const reader: FileReader = new FileReader();\n    reader.readAsBinaryString(target.files[0]);\n    extencionArchivo = target.files[0].name.substring(target.files[0].name.length - 5,target.files[0].name.length)\n    \n      console.log('AQUI ESTAN LAS EXTENCIONES DE EXCEL')\n      reader.onload = (e: any) => {\n        /* create workbook */\n  \n        const binarystr: string = e.target.result;\n \n      };\n  }\n\n  // PROCEDIMIENTO\n  validate(data : any)\n  {\n    // Valida que todos los datos esten completos\n    return data\n  }\n\n  deleteUploadFile(event: any){\n    this.nombreArchivo = \" (archivo nuevo) \";\n    this.UploadDataQuotation = null;\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  save(form, event){\n\n  }\n\n  uploadFile(form, event){\n\n    let dataUploadFile : any[] = [];\n\n    dataUploadFile.push({proveedor_id : this.proveedor_id, file : this.nombreArchivo });\n\n    this.dataShowUploadFile = new MatTableDataSource(dataUploadFile);\n\n    this.openSnackBar('Se subió el archivo correctamente  ' + this.nombreArchivo, '');\n  }\n\n  cancel(form, event){\n    this.dialogRef.close();\n  }\n\n  // =====================\n  // CONSILTA DE SERVICIOS\n  // =====================\n\n  getProveedores(){\n\n    let arrayProvider : any [];\n\n    arrayProvider = [];\n    arrayProvider.push({proveedor_id : 1, proveedor_nombre : 'CABLES MONTERREY SA DE CV'},\n                    {proveedor_id : 2, proveedor_nombre : 'VENTA DE CABLEADO SA'}\n                    )\n\n    this.datasourcePoveedores = arrayProvider;\n\n    console.log(this.datasourcePoveedores);\n  }\n}\n","<div fxLayout=\"row\">\n    <h4>Capturar cotizaciones</h4>\n  </div>\n  <br>\n  <div mat-dialog-content-example [formGroup]=\"newProject\">\n    <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"30%\">\n            <div><br>Cotización</div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n            <div><br></div>\n          </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n            <mat-form-field>\n                <input [type]=\"cotizacionId\" matInput class=\"form-control form-control-line control\" formControlName=\"cotizacion_Id\" [(ngModel)]=\"cotizacionId\" disabled>\n            </mat-form-field>\n            </div>\n          </div>\n    </div>\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"30%\">\n          <div><br>Proveedor</div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n          <div><br></div>\n        </div>\n      <div fxFlex.gt-sm=\"25%\" >\n          <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"proveedor_id\" [(ngModel)]=\"proveedor_id\" >\n              <mat-option *ngFor=\"let op of datasourcePoveedores\" [value]=\"op.proveedor_id\" >\n                {{op.proveedor_nombre}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          </div>\n        </div>\n  </div>\n\n    <!-- CARGA DE ARCHIVOS -->\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div class=\"input-group mb-3\">\n                          <input type=\"file\" name=\"loadFile\" id=\"loadFile\" class=\"form-control form-control-line\" placeholder=\"SELECCIONA ARCHIVO\" style=\"display: none;\" (change)=\"onFileChange($event)\" onclick=\"this.value=null;\"> <!--[(ngModel)]=\"buscar\" -->\n                          <label for=\"loadFile\" style=\"margin: 0; text-align: left; width: 400px;\" class=\"btn btn-outline-dark\"><b>{{nombreArchivo}}</b></label><br><!--{{nombreArchivo}}  formControlName=\"loadFile\"--> \n                      </div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\">\n          <div><button mat-raised-button color=\"primary\" (click)=\"uploadFile(newProject, $event)\">Subir Archivo</button></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\">\n        <div><button mat-raised-button color=\"warn\" (click)=\"cancel(newProject, $event)\">Cancelar</button></div>\n      </div>\n  </div>\n\n  <!-- BOTONES -->\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div class=\"input-group mb-3\">\n          <!-- <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Generar ODC</button></div> -->\n        </div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\">\n      <!-- <div><button mat-raised-button color=\"warn\" (click)=\"cancel(newProject, $event)\">Cancelar</button></div> -->\n    </div>\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n</div>\n\n  </div>\n    <!-- INICIA CUERPO DE LA PÁGINA-->\n    <!-- INICIA CUERPO DE LA PÁGINA-->\n    <div class=\"col-12 col-md-12 p-0\">\n      <div class=\"card\">\n        <div class=\"card-body card-body-table\">\n          <mat-table [dataSource]=\"dataShowUploadFile\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n              \n            <!-- ID Column -->\n            <ng-container matColumnDef=\"SKU\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>SKU</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.SKU}} </td>\n            </ng-container>\n\n            <!-- ID Column -->\n            <ng-container matColumnDef=\"cantidad\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> <span>Cantidad</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.file}} </td>\n            </ng-container>\n            \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </mat-table>\n    \n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator> -->\n      </div>\n\n\n\n  ","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {MAT_SNACK_BAR_DATA} from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport * as XLSX from 'xlsx';\nimport { from } from 'rxjs';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryModel } from '../../../models/category.model';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { ProjectCaptureComponent } from 'src/app/pages/projects/project-capture/project-capture.component';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from '../../../services/requisition/requisition.service';\nimport { quotationListModel } from '../../../models/quotation-list.model'\nimport { quotationservice } from '../../../services/quotation/quotation.service';\nimport { requisitionModelDetail } from 'src/app/models/requisition.model.detail';\nimport { AppConstants } from '../../../shared/app.constants';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { filter } from 'rxjs-compat/operator/filter';\nimport { RequisitionDetailComponent } from '../../requisitions/requisition-detail/requisition-detail.component';\nimport { umask } from 'process';\nimport { MatTab } from '@angular/material/tabs';\nimport { K } from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'app-quotation-detail',\n  templateUrl: './quotation-detail.component.html',\n  styleUrls: ['./quotation-detail.component.css']\n})\nexport class QuotationDetailComponent implements OnInit {\n  // ====================\n  // DECLARACIONES\n  // ====================\n\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @ViewChild(MatTable) tabla1: MatTable<any>;\n  \n  \n  fecha:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  requisicion_id : any = '';\n  categoria_id : any = '';\n  proyecto_id : any = 0;\n  requisicion_Numero : any = '';\n  cotizacion_Numero : any = '';\n  loadfile : any  = '';\n  buscar : any = '';\n  public nombreArchivo : any = 'selecciona archivo';\n  dataSourceShow : MatTableDataSource<requisitionModel>;\n  dataExcel: any[];\n  dataSourceDetail : MatTableDataSource<RequisitionDetailComponent>\n  seleccionaRegistro : any;\n  displayedColumns = ['select', 'sku', 'descripcion', 'medida', 'color', 'um', 'cantidad', 'cantidad_comprar' ];\n\n  projectInfo : any;\n  requisicionId : any = 0;\n  quotationId : any = 0;\n  newProject: FormGroup;\n  datasourceCategories : any[] = [];\n  datasourcePorjects : any[] = [];\n  datasourceRequisition : any;\n  datasourceRequisitionDetail : any = []; // MatTableDataSource<requisitionModelDetail>;\n  datasourceCotizaciones : any;\n  datasourceCotizacionesDet : any[] = [];\n  arraytemp : any = [];\n  \n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , @Inject(MAT_DIALOG_DATA) public data,public snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n    , private _snackBar : MatSnackBar\n    , private _requisitionservice : requisitionservice\n    , private _quotationservice : quotationservice\n    // , private notificationService: NotificationService,\n  ) { \n    this.projectInfo = data.arrayData;\n    this.requisicionId = data.requisicionId;\n    this.quotationId = data.cotizacionId;\n\n    this.newProject = this.formBuilder.group({\n      proyecto_id : new FormControl('', [Validators.required]),\n      categoria_id: new FormControl('', [Validators.required]),\n      requisicion_id: new FormControl('', [Validators.required]),\n      fecha: new FormControl('', [Validators.required]),\n      requisicion_Numero : new FormControl('', [Validators.required]),\n      cotizacion_Numero : new FormControl('', [Validators.required]),\n      seleccionar : new FormControl('')\n  });\n  }\n\n  ngOnInit(): void {\n\n    console.log('this.projectInfo', this.projectInfo);\n\n    this.getProyectos();\n    if(this.projectInfo[\"cotizacion_id\"] != 0){\n        this.newProject.patchValue({\n          proyecto_id : this.projectInfo[\"proyecto_id\"],\n          requisicion_id : '', // this.projectInfo[\"requisicion_id\"] ,\n          requisicion_Numero : this.projectInfo[\"codigo_requisicioninterna\"] ,\n          categoria_id : '', // this.projectInfo[\"categoria_id\"],\n          fecha : this.projectInfo[\"fecha\"] , // this.projectInfo[\"fecha\"]\n          cotizacion_Numero : this.projectInfo[\"codigo\"] ,\n          loadfile : ''\n          \n      })\n      this.requisicion_Numero = this.projectInfo[\"codigo\"];\n      this.proyecto_id = this.projectInfo[\"proyecto_id\"];\n      this.requisicion_id = '' //this.projectInfo[\"requisicion_id\"];\n      this.categoria_id = this.projectInfo[\"categoria_id\"];\n      this.fecha = '', //this.projectInfo[\"fecha\"];\n      this.loadfile = ''\n      \n      this.getQuotationDetail(this.projectInfo[\"cotizacion_id\"]);\n    }\n\n  }\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  proyectoSelected(){\n    console.log('Selecciona categorias', this.newProject.controls[\"proyecto_id\"].value);\n    this.getCategories(this.newProject.controls[\"proyecto_id\"].value);\n  }\n\n  categorySelected(){\n    this.getrequisitionAll();\n  }\n\n  RequisitionSelected(){\n    \n    let arrayRequisicion_interna : any;\n    let codigoRequisicion_interna : any;\n\n    this.requisicionId = this.newProject.controls[\"requisicion_Numero\"].value;\n    arrayRequisicion_interna = this.datasourceRequisition.filter(e => e.requisicioninterna_id == this.requisicionId);\n    \n    this.getCotizacionesAll(arrayRequisicion_interna[0][\"codigo\"])\n    \n    // Busca cotizaciones y arma nuevo numero de cotización\n    this.getRequisitionDetail(this.requisicionId)\n  }\n\n  SeleccionarRegistro(cantidadOrdenar : any, requisicionDet_id : any, uom : any, descripcionOrdenar : any, event : Event){\n\n    let arrayRequisicioneDetalle : any[] = [];\n\n    if(event[\"checked\"] == true && this.datasourceCotizacionesDet.filter(e => e.requisicionDetalle_id == requisicionDet_id).length == 0){\n        this.datasourceCotizacionesDet.push({requisicioninternaDetalle_id : requisicionDet_id, cantidad : cantidadOrdenar, um: uom, descripcion: descripcionOrdenar})\n    }\n\n    if(event[\"checked\"] == false && this.datasourceCotizacionesDet.filter(e => e.requisicionDetalle_id == requisicionDet_id).length != 0){\n      arrayRequisicioneDetalle = this.datasourceCotizacionesDet.filter(e => e.requisicionDetalle_id != requisicionDet_id)\n      this.datasourceCotizacionesDet = [];\n      this.datasourceCotizacionesDet = arrayRequisicioneDetalle;\n    }\n  }\n\n  validaCamposRequeridos() : boolean{\n    let valido : boolean = true;\n    valido = (this.newProject.get('proyecto_id').status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"categoria_id\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"requisicion_Numero\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"cotizacion_Numero\").status == 'INVALID') ? false : valido;\n\n    return valido;\n  }\n\n  save(form, event){\n\n    let arrayTodb : any;\n\n    if(this.validaCamposRequeridos() == false){\n      this.openSnackBar('debe capturar los campos requeridos', 'success');\n      return;\n    }\n\n    if(this.quotationId == 0){\n      arrayTodb = { \n        // proyecto_id : this.proyecto_id,\n                  requisicioninterna_id : this.newProject.controls[\"requisicion_Numero\"].value, // this.requisicionId,\n                  codigo : this.newProject.controls[\"cotizacion_Numero\"].value,\n                  fecha : moment(this.fecha, 'YYYY-MM-DD').format('YYYY-MM-DD')\n                };\n\n      // INSERTA REQUISICION HDR\n      this.insertQuotationHeader(arrayTodb);\n    }\n    else{\n      arrayTodb = {\n        // proyecto_id : this.proyecto_id,\n        categoria_id : this.newProject.controls[\"categoria_id\"].value, // this.categoria_id,\n        requisicioninterna_id : this.newProject.controls[\"requisicionId\"].value, //this.requisicionId,\n        fecha : moment(this.fecha, 'YYYY-MM-DD').format('YYYY-MM-DD')\n      };\n\n        // Actualiza registro EDICION\n        // this._projectService.updateProjects(arrayTodb).subscribe(\n        // res=> {\n        // console.log('Se edito con éxito', res);\n        // },\n        // error => console.log(\"error consulta regiones\",error)\n        // )\n        // this.dialogRef.close();\n    }\n  }\n\n\n\n  fechaControl(event){\n    console.log('fecha', this.fecha);\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n\n// =============================\n// UTILERIAS\n// =============================\n\nfind(form, event){\n  // Buscar requisiciones\n  console.log('requisiciones', this.requisicion_Numero)\n  // this._requisitionservice.getRequisitionById(this.cotizacion_Numero).subscribe(\n  //   res=> {\n  //     this.datasourceCategories = res;\n  //     console.log('PROYECTOS - CATEGORIAS', res);\n  //   },\n  //   error => console.log(\"error consulta cateogorias\",error)\n  // )\n\n}\n\npublic handlePage(e: any) {\n  this.currentPage = e.pageIndex;\n  this.pageSize = e.pageSize;\n  this.iterator();\n}\n\nprivate iterator() {\n  const end = (this.currentPage + 1) * this.pageSize;\n  const start = this.currentPage * this.pageSize;\n  const part = this.array.slice(0, this.totalSize);\n  this.dataSourceShow = new MatTableDataSource(part);\n  this.dataSourceShow.sort = this.sort;\n  this.dataSourceShow.paginator = this.paginator;\n}\n\nfiltrar(event: Event) {\n  const filtro = (event.target as HTMLInputElement).value;\n  this.dataSourceShow.filter = filtro.trim().toLowerCase();\n  console.log('filtro', filtro);\n}\n\n// =============================\n// CONSUME SERVICIOS\n// =============================\n\ngetProyectos(){\n  // Obtiene proyectos\n  this._projectService.getProjectAll().subscribe(\n    res=> {\n      this.datasourcePorjects = res;\n      console.log('PROYECTOS', res);\n    },\n    error => console.log(\"error consulta proyectos\",error)\n  )\n}\n\ngetCotizacionesAll(requisicion_interna : any){\n  this._quotationservice.getQuotationAll().subscribe(\n    res=> {\n      this.datasourceCotizaciones = res;\n      console.log('COTIZACIONES TODAS', res);\n      this.cotizacion_Numero = this.cotizacion_Numero = requisicion_interna + '-' + (this.datasourceCotizaciones.filter(e => e.codigo_requisicioninterna == requisicion_interna).length + 1);\n      this.newProject.controls[\"cotizacion_Numero\"].setValue(this.cotizacion_Numero = requisicion_interna + '-' + (this.datasourceCotizaciones.filter(e => e.codigo_requisicioninterna == requisicion_interna).length + 1));\n\n    },\n    error => console.log(\"error consulta proyectos\",error)\n  )\n}\n\ngetQuotationDetail(cotizacionId : number){\n// Obtiene el detalle de la cotización\nthis._quotationservice.getQuotationDetail(cotizacionId).subscribe(\n  res=> {\n    this.datasourceRequisitionDetail = res;\n    console.log('datasourde cotizacion', res);\n\n  },\n  error => console.log(\"error consulta requisiciones\",error)\n)\n}\n\ngetrequisitionAll(){\n  // Obtiene todas las requisiciones \n  this._requisitionservice.getRequisitionAll().subscribe(\n    res=> {\n      // this.datasourceRequisition = [];\n      this.datasourceRequisition = res;\n        this.datasourceRequisition = this.datasourceRequisition.filter(e => e.proyectocategoria_id == this.newProject.controls[\"categoria_id\"].value)\n\n        // // Consulta detalle de requisición\n        // this.getRequisitionDetail();\n    },\n    error => console.log(\"error consulta requisiciones\",error)\n  )\n\n}\n\ngetrequisition(){\n  // Obtiene las requisiciones \n  this._requisitionservice.getRequisitionById(this.newProject.controls[\"categoria_id\"].value).subscribe(\n    res=> {\n      this.datasourceRequisition = [];\n      this.datasourceRequisition.push(res);\n        console.log('REQUISICIONES', this.datasourceRequisition);\n\n    //     // Consulta detalle de requisición\n    //     this.getRequisitionDetail();\n    },\n    error => console.log(\"error consulta requisiciones\",error)\n  )\n}\n\ngetRequisitionDetail(Requisition_Id : any){\n  // Obtiene requisiciones \n  this._requisitionservice.getRequisitionDetail(Requisition_Id).subscribe(\n    res=> {\n      this.datasourceRequisitionDetail = (res);\n\n        console.log('REQUISICIONES DETALLE', this.datasourceRequisitionDetail);\n    },\n    error => console.log(\"error consulta requisiciones\",error)\n  )\n}\n\ngetCategories(proyecto : any){\n  // Obtiene categorias \n    this._projectCategoryservice.getProjectCateogryById(proyecto).subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('PROYECTOS - CATEGORIAS', res);\n      },\n      error => console.log(\"error consulta cateogorias\",error)\n    )\n\n  // this._projectCategoryservice.getProjectCateogryAll().subscribe(\n  //   res=> {\n  //     this.datasourceCategories = res;\n  //     console.log('PROYECTOS - CATEGORIAS', res);\n  //   },\n  //   error => console.log(\"error consulta cateogorias\",error)\n  // )\n}\n\ninsertQuotationHeader(arrayTodb : any){\n  this._quotationservice.insertQuotation(arrayTodb).subscribe(\n    res=> {\n      console.log('Se inserto con éxito', res);\n\n      // INSERTA REQUISICIONES DET\n      this.insertQuotationDet(res);\n    },\n    error => console.log(\"error alta de proyectos\",error)\n  )\n}\n\ninsertQuotationDet(cotizacionId : any){\n\n  console.log('para guardar', this.datasourceCotizacionesDet);\n\n  // Obtiene Requisicion Registrada\n  let datasourceRequsition : MatTableDataSource<requisitionModel>\n  let requisitionIdMaximo : any = \"0\";\n  let arrayToDb : any;\n\n  this.tabla1[\"_data\"].forEach(element => {\n    console.log('elemento', element);\n    if(element.activo == true){\n      arrayToDb = { cotizaciondetalle_id: 0\n        , codigo_cotizacion : ''\n        , requisicioninternadetalle_id : element.requisicioninternadetalle_id\n        , cotizacion_id : cotizacionId\n        , sku : element.sku\n        , medida : element.medida\n        , color : element.color\n        , otras_especificaciones : element.otras_especificaciones\n        , cantidad : element.cantidad\n        , unidad_medida : element.unidad_medida\n        , descripcion : element.descripcion\n        , descuento : 0\n        , costo : 0\n      }\n    \n    // Inserta Proyecto Categoria\n    this._quotationservice.insertQuotationDetail(arrayToDb).subscribe(\n      res=> {\n        console.log('INSERTA COTIZACION DETALLE', arrayToDb);\n        this.openSnackBar('Se genero el la cotización exitosamente', 'success');\n      },\n      error => console.log(\"error al insertar proyectos categorias\",error)\n    )\n  }\n\n    arrayToDb = null;\n\n  });\n\n    // this.datasourceCotizacionesDet.forEach(element => {\n        // arrayToDb = { cotizaciondetalle_id: 0\n        //     , codigo_cotizacion : ''\n        //     , requisicioninternaDetalle_id : element.requisicioninternaDetalle_id\n        //     , cotizacion_id : cotizacionId\n        //     , sku : element.sku\n        //     , medida : ''\n        //     , color : ''\n        //     , otras_especificaciones : ''\n        //     , almacen_id : 1\n        //     , cantidad : element.cantidad\n        //     , unidad_medida : element.um\n        //     , descripcion : element.descripcion\n        //     , descuento : 0\n        //     , costo : 0\n        // }\n\n        // Inserta Proyecto Categoria\n      //   this._quotationservice.insertQuotationDetail(arrayToDb).subscribe(\n      //     res=> {\n      //       console.log('INSERTA COTIZACION DETALLE', arrayToDb);\n      //       this.openSnackBar('Se genero el la cotización exitosamente', 'success');\n      //     },\n      //     error => console.log(\"error al insertar proyectos categorias\",error)\n      //   )\n        \n      //   arrayToDb = null;\n\n      // });\n}\n\n\n}\n","<div fxLayout=\"row\">\n  <h4>Nueva Cotización</h4>\n</div>\n<br>\n<div mat-dialog-content-example [formGroup]=\"newProject\">\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Proyecto</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div>\n        <mat-form-field>\n          <mat-select class=\"form-control control\" formControlName=\"proyecto_id\" (selectionChange)=\"proyectoSelected()\" ><!--[(ngModel)]=\"proyecto_id\" -->\n            <mat-option *ngFor=\"let op of datasourcePorjects\" [value]=\"op.proyecto_id\" >\n              {{op.codigo_proyecto}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <span *ngIf=\"!newProject.get('proyecto_id').valid && newProject.get('proyecto_id').touched\" class=\"help-block\" style=\"color: red;\"> seleccione un proyecto</span>\n      </div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><br>Proyecto-Categoria</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field>\n            <mat-select class=\"form-control control\" formControlName=\"categoria_id\" (selectionChange)=\"categorySelected()\" ><!-- [(ngModel)]=\"categoria_id\"-->\n              <mat-option *ngFor=\"let opx of datasourceCategories\" [value]=\"opx.proyectocategoria_id\">\n                {{opx.codigo_proyectocategoria}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('categoria_id').valid && newProject.get('categoria_id').touched\" class=\"help-block\" style=\"color: red;\"> seleccione una categotía</span>\n        </div>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div><br>Requisición</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div>\n      <mat-form-field>\n        <mat-select class=\"form-control control\" formControlName=\"requisicion_Numero\" (selectionChange)=\"RequisitionSelected()\" ><!-- [(ngModel)]=\"requisicion_Numero\"-->\n          <mat-option *ngFor=\"let op of datasourceRequisition\" [value]=\"op.requisicioninterna_id\">\n            {{op.codigo}}\n          </mat-option>\n        </mat-select>\n        </mat-form-field>\n        <span *ngIf=\"!newProject.get('requisicion_Numero').valid && newProject.get('requisicion_Numero').touched\" class=\"help-block\" style=\"color: red;\"> seleccione una requisición</span>\n      </div>\n    </div>\n    <div fxFlex.gt-sm=\"10%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div>Fecha</div>\n    </div>\n    <div fxFlex.gt-sm=\"25%\" >\n      <div><mat-form-field appearance=\"fill\">\n          <mat-label>Choose a date</mat-label>\n          <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" (dateChange)=\"fechaControl($event)\" class=\"control\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field></div>\n    </div>\n  </div>\n  <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>Cotización</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"cotizacion_Numero\" matInput class=\"form-control form-control-line control\" formControlName=\"cotizacion_Numero\" ><!--[(ngModel)]=\"cotizacion_Numero\"-->\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('cotizacion_Numero').valid && newProject.get('cotizacion_Numero').touched\" class=\"help-block\" style=\"color: red;\"> capture una cotización</span>\n          </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <!-- <div><button mat-raised-button color=\"accent\" (click)=\"find(newProject, $event)\">Buscar</button></div> -->\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n      </div>\n  </div>\n  <br>\n  <!--Tabla de captura-->\n  <div fxLayout=\"row\" class=\"division\">      \n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Generar Cotización</button></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n    </div>\n  </div>\n  \n   <!-- INICIA CUERPO DE LA PÁGINA-->\n   <div class=\"col-12 col-md-12 p-0\">\n    <div class=\"card\">\n      <div class=\"card-body card-body-table\">\n        <mat-table [dataSource]=\"datasourceRequisitionDetail\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\" #tabla1>\n\n          <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                  <div style=\"width: 100%; text-align: left; vertical-align: middle;\">\n                      SELECCIONAR\n              </div>\n                </th>\n                <div style=\"width: 50px;\">\n                <td mat-cell *matCellDef=\"let element; let i = index\">\n                  <mat-checkbox color=\"warn\"\n                              formControlName=\"seleccionar\" \n                              (click)=\"$event.stopPropagation()\"\n                              (change)=\"SeleccionarRegistro(element.cantidad, element.requisicioninternadetalle_id, element.um, element.descripcion, $event)\"\n                              [checked]=\"element.activo\"\n                              [(ngModel)]=\"element.activo\"\n                              >\n                              <!--[checked]=\"selection.isSelected(element.proyecto_id)\"-->\n                              <!--[(ngModel)]=\"element.activo\" -->\n                  </mat-checkbox>\n                </td>\n              </div>\n          </ng-container>\n\n          <!-- SKU Column -->\n          <ng-container matColumnDef=\"sku\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>sku</span> </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.sku}} </td>\n          </ng-container>\n\n          <!-- descripción Column -->\n          <ng-container matColumnDef=\"descripcion\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Descripción </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.descripcion}} </td>\n          </ng-container>\n\n          <!-- descripción Column -->\n          <ng-container matColumnDef=\"medida\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Medida </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.medida}} </td>\n          </ng-container>\n\n          <!-- descripción Column -->\n          <ng-container matColumnDef=\"color\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Color </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.color}} </td>\n          </ng-container>\n\n          <!-- Name Column -->\n          <ng-container matColumnDef=\"um\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Unidad de Medida </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.unidad_de_medida}} </td>\n          </ng-container>\n\n          <!-- ID Column -->\n          <ng-container matColumnDef=\"cantidad\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Cantidad</span> </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.cantidad}} </td>\n          </ng-container>\n\n          <!-- ID Column -->\n          <ng-container matColumnDef=\"cantidad_comprar\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Cantidad a comprar</span> </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.cantidad_comprar}} </td>\n          </ng-container>\n          \n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </mat-table>\n  \n      </div>\n      <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator> -->\n    </div>\n    </div>\n  </div>\n","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as moment from 'moment';\nimport * as XLSX from 'xlsx';\nimport { projectModel } from 'src/app/models/project.model';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { categoryservice } from '../../../services/category/category.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { projectCategoryservice } from 'src/app/services/projectCtegory/projectCateogry.service';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from '../../../services/requisition/requisition.service';\nimport { requisitionModelDetail } from 'src/app/models/requisition.model.detail';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { dateInputsHaveChanged } from '@angular/material/datepicker/datepicker-input-base';\nimport { skipUntil } from 'rxjs-compat/operator/skipUntil';\n// import { NotificationService } from '../../../services/common/notification.service';\n\n@Component({\n  selector: 'app-requisition-detail',\n  templateUrl: './requisition-detail.component.html',\n  styleUrls: ['./requisition-detail.component.css']\n})\nexport class RequisitionDetailComponent implements OnInit {\n  // ===================\n  // DECLARACIONES\n  // ===================\n\n  // Para paginación\n  public pageIndex:number = 0;\n  public pageSize:number = 20;\n  public currentPage = 0;\n  public totalSize:number = 0;\n  public array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  \n  fecha:any = moment(new Date, 'DD-MM-YYYY hh:mm').format('DD-MM-YYYY');\n  requisicion_id : any = '';\n  categoria_id : any = '';\n  proyecto_id : any = 0;\n  requisicion_Numero : any = ''\n  loadfile : any  = '';\n  buscar : any = '';\n  public nombreArchivo : any = 'selecciona archivo';\n  UploadDataExcel : MatTableDataSource<requisitionModelDetail>;\n  dataExcel: any[];\n  // displayedColumns = ['SKU', 'cantidad', 'unidad_de_medida', 'descripcion'];\n  displayedColumns = ['SKU', 'cantidad', 'unidad_de_medida', 'descripcion', 'medida', 'color', 'otras_Especificaciones'];\n\n  projectInfo : any;\n  requisicionId : any = 0;\n  newProject: FormGroup;\n  datasourceCategories : any[] = [];\n  datasourcePorjects : any[] = [];\n  datasourceRequisition : any;\n\n  fo : string\n  cargo : string\n  no_pym : string\n\n  constructor(\n    public dialogRef: MatDialogRef<projectModel>\n    , private _projectService : projectservice\n    , private _categoryService : categoryservice\n    , private _projectCategoryservice : projectCategoryservice\n    , @Inject(MAT_DIALOG_DATA) public data\n    , public snackBar: MatSnackBar\n    , private formBuilder: FormBuilder\n    , private _snackBar : MatSnackBar\n    , private _requisitionservice : requisitionservice\n    // , private notificationService: NotificationService,\n  ) { \n    this.projectInfo = data.arrayData;\n    this.requisicionId = data.requisicionId;\n\n    this.newProject = this.formBuilder.group({\n      proyecto_id : new FormControl('', [Validators.required]),\n      categoria_id: new FormControl('', [Validators.required]),\n      requisicion_id: new FormControl('', [Validators.required]),\n      fecha: new FormControl('', [Validators.required]),\n      requisicion_Numero : new FormControl('', [Validators.required])\n      // loadFile: new FormControl(''),\n  });\n  }\n\n// ===============\n// PROCEDIMIENTOS\n// ===============\n\n  ngOnInit(): void {\n\n    this.getProyectos();\n    this.getEnabledCategories();\n    \n    console.log('this.projectInfo[\"codigo\"]', this.requisicionId);\n    this.newProject.controls[\"categoria_id\"].setValue(this.projectInfo[\"codigo_proyectocategoria\"]);\n    \n    if(this.requisicionId != 0){\n        this.newProject.patchValue({\n          proyecto_id : this.projectInfo[\"proyecto_id\"],\n          requisicion_id : '', // this.projectInfo[\"requisicion_id\"] ,\n          requisicion_Numero : this.projectInfo[\"codigo\"] ,\n          categoria_id : '', // this.projectInfo[\"categoria_id\"],\n          fecha : moment(new Date), //this.projectInfo[\"fecha\"], // this.projectInfo[\"fecha\"]\n          loadfile : ''\n      })\n      this.requisicion_Numero = this.projectInfo[\"codigo\"];\n      // this.projectInfo.controls[\"proyecto_id\"].setValue(77);\n      this.proyecto_id = this.projectInfo[\"proyecto_id\"];\n      this.requisicion_id = '' //this.projectInfo[\"requisicion_id\"];\n      this.categoria_id = this.projectInfo[\"proyectocategoria_id\"];\n      // this.projectInfo.controls[\"categoria_id\"].setValue('161');\n      this.fecha = '', //this.projectInfo[\"fecha\"];\n      this.loadfile = ''\n\n      this.getRequisitionDetail(this.requisicionId);\n    }\n\n  }\n\n  onFileChange(event){\n    /* wire up file reader */\n    const target: DataTransfer = <DataTransfer>(event.target);\n    let extencionArchivo : string = '';\n\n    this.UploadDataExcel = null;\n\n    if (target.files.length !== 1) {\n      throw new Error('No se pueden seleccionar multiples archivos');\n    }\n\n    this.nombreArchivo = (target.files.length > 0) ? target.files[0][\"name\"].substring(1,30) : \" (archivo nuevo) \";\n    const reader: FileReader = new FileReader();\n    reader.readAsBinaryString(target.files[0]);\n    extencionArchivo = target.files[0].name.substring(target.files[0].name.length - 5,target.files[0].name.length)\n    if(extencionArchivo == '.xlsx' || extencionArchivo.substring(extencionArchivo.length - 4, extencionArchivo.length) == 'xls'){\n      console.log('AQUI ESTAN LAS EXTENCIONES DE EXCEL')\n      reader.onload = (e: any) => {\n        /* create workbook */\n  \n        const binarystr: string = e.target.result;\n        const wb: XLSX.WorkBook = XLSX.read(binarystr, { type: 'binary' });\n  \n        /* selected the first sheet */\n        const wsname: string = wb.SheetNames[0];\n        const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n        /* save data */\n        const data = XLSX.utils.sheet_to_json(ws);\n        this.dataExcel = this.validate(data);\n        this.dataExcel = data;\n\n        let arrayErrores = [];\n        let arrayExcel = [];\n        let valido : boolean = true;\n\n        // Validadores de campos\n        let errorCantidad : boolean = false;\n        let errorUoM : boolean = false;\n        let errorDescripcion : boolean = false;\n        let errorSKU : boolean = false;\n        let DescripcionAnt : string = '';\n        let Descripcion : string = '';\n\n        // Ordena los descuentos por cr + produto + plataforma\n        this.dataExcel.sort(function (a, b) {\n          if (a.DESCRIPCION > b.DESCRIPCION) {\n            return 1;\n          }\n          if (a.DESCRIPCION < b.DESCRIPCION) {\n            return -1;\n          }\n          // a must be equal to b\n          return 0;\n        });\n\n        DescripcionAnt = this.dataExcel[0][\"DESCRIPCION\"].toUpperCase();\n\n        // Validamos que los crs del excel vs las existentes en el ctálogo\n      let contador : number = 0;\n      this.dataExcel.forEach(element => {\n        // Reinicia valores\n        valido = true;\n        errorDescripcion = false;\n\n        Descripcion = element.DESCRIPCION.toUpperCase()\n\n        if(element.SKU == '') {valido = false; errorSKU = true}\n        if(element.CANTIDAD_REQUERIDA == '') {valido = false; errorCantidad = true;}\n        if(element.UNIDAD.toUpperCase() == '') {valido = false; errorUoM = true;}\n        if(element.DESCRIPCION.toUpperCase() == '') {valido = false; errorDescripcion = true;}\n\n        contador++;\n        DescripcionAnt = Descripcion;\n\n        if(valido == false){\n          arrayErrores.push({ cantidad : element.CANTIDAD_REQUERIDA, \n            unidad_de_medida : element.UNIDAD, \n            descripcion : element.DESCRIPCION.toUpperCase()\n           })\n        }else{\n          arrayExcel.push({ \n            requisition_Id : 0,\n            SKU : element.SKU,\n            cantidad : element.CANTIDAD_REQUERIDA, \n            um : element.UNIDAD,\n            descripcion : element.DESCRIPCION,\n            medida : element.MEDIDA,\n            color : element.COLOR,\n            otras_especificaciones : element.OTRAS_ESPECIFICACIONES\n           })\n        }\n      });\n\n      if(arrayErrores.length > 0){\n        this.openSnackBar('Los registros contienen datos incorrectos', '');\n\n        // this.notificationService.openNotification(AppConstants.defaultNotificationWarningTitle, 'Los registros contienen estaciónes, productos o plataformas no validos', 'warn');\n        this.dataExcel = null;\n        // this.openErrorDialog(arrayErroresEstacion);\n        return;\n      }\n\n      this.UploadDataExcel = new MatTableDataSource(arrayExcel);\n      console.log('datos del excel', this.UploadDataExcel);\n\n      };\n    }\n    else{\n      this.openSnackBar('Los registros contienen datos incorrectos', '');\n      // this.notificationService.openNotification(AppConstants.defaultNotificationWarningTitle, 'No es un archivo de excel válido', 'warn');\n      this.deleteUploadFile(event);\n    }\n  }\n\n  validate(data : any)\n  {\n    // Valida que todos los datos esten completos\n    return data\n  }\n\n  deleteUploadFile(event: any){\n    this.nombreArchivo = \" (archivo nuevo) \";\n    this.UploadDataExcel = null;\n  }\n\n  proyectoSelected(){\n    console.log('Selecciona categorias', this.newProject.controls[\"proyecto_id\"].value );\n    this.getCategories(this.newProject.controls[\"proyecto_id\"].value);\n  }\n\n  categorySelected(){\n    // Obtenemos requisiciones existentes y generamos nuevo numero para la requisición\n    let proyectoCategoria_id : any = this.newProject.controls[\"categoria_id\"].value\n    let codigo_categoria : any = 0;\n    let arrayProyectoCategoria : any;\n\n    arrayProyectoCategoria = this.datasourceCategories.filter(e => e.proyectocategoria_id == proyectoCategoria_id);\n    codigo_categoria = arrayProyectoCategoria[0][\"codigo_proyectocategoria\"]\n    this.getrequisition(codigo_categoria);\n  }\n\n  validaCamposRequeridos() : boolean{\n    let valido : boolean = true;\n    valido = (this.newProject.get('proyecto_id').status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"categoria_id\").status == 'INVALID') ? false : valido;\n    valido = (this.newProject.get(\"requisicion_Numero\").status == 'INVALID') ? false : valido;\n\n    return valido;\n  }\n\n  save(form, event){\n\n    let arrayTodb : any;\n\n    if(this.validaCamposRequeridos() == false){\n      this.openSnackBar('debe capturar los campos requeridos', 'success');\n      return;\n    }\n\n    if(this.requisicionId == 0){\n      arrayTodb = {\n                  proyectocategoria_id : this.newProject.controls[\"categoria_id\"].value, // this.categoria_id,\n                  codigo : this.newProject.controls[\"requisicion_Numero\"].value, // this.requisicion_Numero,\n                  fecha : moment(this.fecha, 'YYYY-MM-DD').format('YYYY-MM-DD') //,\n                };\n\n      // INSERTA REQUISICION HDR\n      this.insertRequisition(arrayTodb)\n    }\n    else{\n      arrayTodb = {proyecto_id : this.newProject.controls[\"requisicion_Numero\"].value, // this.proyecto_id,\n        proyectocategoria_id : this.newProject.controls[\"categoria_id\"].value, // this.categoria_id,\n        requisicion_id : this.requisicion_id,\n        fecha : moment(this.fecha, 'YYYY-MM-DD').format('YYYY-MM-DD')\n      };\n\n        // Actualiza registro EDICION\n        this.updateRequisition(arrayTodb);\n    }\n  }\n\n  fechaInicial(event){\n    console.log('fecha', this.fecha);\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n  // ====================\n  // UTILERIAS\n  // ====================\n\n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {duration : 3000});\n  }\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.UploadDataExcel = new MatTableDataSource(part);\n    this.UploadDataExcel.sort = this.sort;\n    this.UploadDataExcel.paginator = this.paginator;\n  }\n\n  filtrar(event: Event) {\n    const filtro = (event.target as HTMLInputElement).value;\n    this.UploadDataExcel.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n  // ====================\n  // LLAMADAS A SERVICIOS\n  // ====================\n\n  getEnabledCategories(){\n    // Actualiza registro NUEVO\n    this._projectCategoryservice.getProjectCateogryById(1).subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('CATEGORIAS', res);\n      },\n      error => console.log(\"error consulta categorias\",error)\n    )\n  }\n\n  getProyectos(){\n    // Obtiene proyectos\n    this._projectService.getProjectAll().subscribe(\n      res=> {\n        this.datasourcePorjects = res;\n        console.log('PROYECTOS', res);\n      },\n      error => console.log(\"error consulta proyectos\",error)\n    )\n  }\n\n  getrequisition(codigo_categoria : any){\n\n    let categoria_id : any = this.newProject.controls[\"categoria_id\"].value\n    let codigo_requisicion : any = 0;\n    let arrayRequisition : any;\n    let arrayCodigoCategoria : any;\n    \n    // Proyectos registrados\n    this._requisitionservice.getRequisitionAll().subscribe(\n      res=> {\n        this.datasourceRequisition = new MatTableDataSource(res);\n\n        if(this.datasourceRequisition.filteredData.length == 0){\n          codigo_requisicion = codigo_categoria + '-1'; \n        }else{\n          // Obtener requisicion en la que se mas alta y determinar cual sigue\n          arrayRequisition = this.datasourceRequisition.filteredData.filter(e => e.proyectocategoria_id == categoria_id);\n          if(arrayRequisition.length > 0){\n            let cantidadRequisition = arrayRequisition.length\n            codigo_requisicion = codigo_categoria + '-' + (cantidadRequisition + 1)\n          }else{\n            // obtener codigo_categoria\n            arrayCodigoCategoria = 1;\n            codigo_requisicion = codigo_categoria + '-1'; \n          }\n\n        }\n\n        // this.newProject.controls[\"requisicion_Numero\"].setValue = codigo_categoria + codigo_requisicion;\n        this.requisicion_Numero = codigo_requisicion;\n        this.newProject.controls[\"requisicion_Numero\"].setValue(codigo_requisicion);\n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n\n  getCategories(proyecto : any){\n    // Obtiene categorias \n    this._projectCategoryservice.getProjectCateogryById(proyecto).subscribe(\n      res=> {\n        this.datasourceCategories = res;\n        console.log('PROYECTOS - CATEGORIAS', res);\n      },\n      error => console.log(\"error consulta cateogorias\",error)\n    )\n  }\n\n  insertRequisition(arrayTodb : any){\n    this._requisitionservice.insertRequisition(arrayTodb).subscribe(\n      res=> {\n        console.log('Se inserto con éxito', res);\n\n        // INSERTA REQUISICIONES DET\n        this.insertRequisitionDet(res);\n      },\n      error => console.log(\"error alta de proyectos\",error)\n    )\n  }\n\n  getRequisitionDetail(arrayTodb){\n\n    let arrayRequsitionDetail : any;\n    let arrayRequsitionToTable : any[] = []; //MatTableDataSource<requisitionModelDetail>;\n\n    this._requisitionservice.getRequisitionDetail(arrayTodb).subscribe(\n      res=> {\n        arrayRequsitionDetail = res;\n\n        arrayRequsitionDetail.forEach(element => {\n          arrayRequsitionToTable.push({requisition_Id: 0, SKU : element.sku, cantidad : element.cantidad, um : element.unidad_medida, descripcion : element.descripcion, medida : element.medida})\n        });\n\n        this.UploadDataExcel = new MatTableDataSource(arrayRequsitionToTable);\n        console.log('Se obtiene detalle de requisición', res);\n      },\n      error => console.log(\"error alta de proyectos\",error)\n    )\n  }\n\n  updateRequisition(arrayTodb : any){\n    console.log('ACTUALIZA REQUISICION');\n        // this._projectService.updateProjects(arrayTodb).subscribe(\n        // res=> {\n        // console.log('Se edito con éxito', res);\n        // },\n        // error => console.log(\"error consulta regiones\",error)\n        // )\n        // this.dialogRef.close();\n  }\n\n  insertRequisitionDet(requisicionId : any){\n    // Obtiene Requisicion Registrada\n    let datasourceRequsition : MatTableDataSource<requisitionModel>\n    let requisitionIdMaximo : any = \"0\";\n    let arrayToDb : any;\n\n      this.UploadDataExcel.filteredData.forEach(element => {\n        arrayToDb = {requisicioninternadetalle_id : 0\n            , requisicioninterna_id : requisicionId\n            , cantidad : element.cantidad\n            , sku : element.SKU\n            , codigo_requisicioninterna : ''\n            , unidad_medida : element.um\n            , descripcion : element.descripcion\n            , existencia_almacen : 0\n            , cantidad_comprar : element.cantidad\n            , medida : (element.medida != undefined) ? element.medida : ''\n            , color : (element.color != undefined) ? element.color : ''\n            , otras_especificaciones : (element.otras_especificaciones != undefined) ? element.otras_especificaciones : ''\n            , estado : true\n            , cotizado : false\n        }\n\n        console.log('DETALLE DETALLE DETALLE', arrayToDb);\n\n        // Inserta Proyecto Categoria\n        this._requisitionservice.insertRequisitionDetail(arrayToDb).subscribe(\n          res=> {\n            console.log('REQUISICIONES DETALLE', res);\n            this.openSnackBar('Se genero el la requisición exitosamente', 'success');\n            // this.dialogRef.close();\n          },\n          error => console.log(\"error al insertar proyectos categorias\",error)\n        )\n        \n        arrayToDb = null;\n\n      });\n  }\n\n}\n","<div fxLayout=\"row\">\n    <h4>Nueva Requisición</h4>\n  </div>\n  <br>\n  <div mat-dialog-content-example [formGroup]=\"newProject\">\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div *ngIf=\"requisicionId == 0\"><br>Proyecto</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div *ngIf=\"requisicionId == 0\">\n          <mat-form-field>\n            <!-- [(ngModel)]=\"proyecto_id\" (selectionChange)=\"emitFilters($event, 'Enviado')\"  -->\n            <mat-select class=\"form-control control\" formControlName=\"proyecto_id\" (selectionChange)=\"proyectoSelected()\" ><!--[(ngModel)]=\"proyecto_id\" -->\n              <mat-option *ngFor=\"let op of datasourcePorjects\" [value]=\"op.proyecto_id\" >\n                {{op.codigo_proyecto}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n          <span *ngIf=\"!newProject.get('proyecto_id').valid && newProject.get('proyecto_id').touched\" class=\"help-block\" style=\"color: red;\"> seleccione un proyecto</span>\n        </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div *ngIf=\"requisicionId == 0\"><br>Proyecto-Categoría</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n            <div *ngIf=\"requisicionId == 0\">\n              <mat-form-field>\n                <mat-select class=\"form-control control\" formControlName=\"categoria_id\" (selectionChange)=\"categorySelected()\"><!-- (selectionChange)=\"emitFilters($event, 'Enviado')\" [(ngModel)]=\"categoria_id\" -->\n                  <mat-option *ngFor=\"let opx of datasourceCategories\" [value]=\"opx.proyectocategoria_id\">\n                    {{opx.codigo_proyectocategoria}}\n                  </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('categoria_id').valid && newProject.get('categoria_id').touched\" class=\"help-block\" style=\"color: red;\"> seleccione una categoría</span>\n          </div>\n      </div>\n    </div>\n  \n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div><br>Requisición</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"requisicion_Numero\" matInput class=\"form-control form-control-line control\" formControlName=\"requisicion_Numero\" ><!--[(ngModel)]=\"requisicion_Numero\"-->\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('requisicion_Numero').valid && newProject.get('requisicion_Numero').touched\" class=\"help-block\" style=\"color: red;\"> capture un número de Requisición</span>\n          </div>\n      </div>\n      <div fxFlex.gt-sm=\"10%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div><br>Fecha</div>\n      </div>\n      <div fxFlex.gt-sm=\"25%\" >\n        <div>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>{{fecha | date: 'dd-MM-yyyy'}}</mat-label>\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"fecha\" (dateChange)=\"fechaInicial($event)\" class=\"control\" > <!--[(ngModel)]=\"fecha\" -->\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker [startAt]=\"fecha\" #picker></mat-datepicker>\n          </mat-form-field></div>\n      </div>\n    </div>\n    <div fxLayout=\"row\" class=\"division\" *ngIf=\"requisicionId == 0\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div class=\"input-group mb-3\">\n                            <input type=\"file\" name=\"loadFile\" id=\"loadFile\" class=\"form-control form-control-line\" placeholder=\"SELECCIONA ARCHIVO\" style=\"display: none;\" (change)=\"onFileChange($event)\" onclick=\"this.value=null;\"> <!--[(ngModel)]=\"buscar\" -->\n                            <label for=\"loadFile\" style=\"margin: 0; text-align: left; width: 400px;\" class=\"btn btn-outline-dark\"><b>{{nombreArchivo}}</b></label><br><!--{{nombreArchivo}}  formControlName=\"loadFile\"--> \n                        </div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\">\n            <!-- <div><button mat-raised-button color=\"primary\" (click)=\"save(newProject, $event)\">Subir Archivo</button></div> -->\n        </div>\n        <div fxFlex.gt-sm=\"20%\">\n            <div></div>\n        </div>\n    </div>\n\n    <br>\n    <!--Tabla de captura-->\n    <div fxLayout=\"row\" class=\"division\">\n        \n    </div>\n\n  </div>\n    <div fxLayout=\"row\" class=\"division\">\n      <div fxFlex.gt-sm=\"20%\">\n          <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n          <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div>\n          <ng-container *ngIf='requisicionId == 0' >\n            <button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button>\n          </ng-container>\n          </div>\n      </div>\n      <div fxFlex.gt-sm=\"20%\" >\n        <div>\n          <ng-container><button *ngIf='requisicionId == 0' mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></ng-container>\n          <ng-container><button *ngIf='requisicionId != 0' mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Regresar</button></ng-container>\n        </div>\n      </div>\n    </div>\n     <!-- INICIA CUERPO DE LA PÁGINA-->\n     <div class=\"col-12 col-md-12 p-0\">\n      <div class=\"card\">\n        <div class=\"card-body card-body-table\">\n          <mat-table [dataSource]=\"UploadDataExcel\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n              \n            <!-- ID Column -->\n            <ng-container matColumnDef=\"SKU\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>SKU</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.SKU}} </td>\n            </ng-container>\n\n            <!-- ID Column -->\n            <ng-container matColumnDef=\"cantidad\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> <span>Cantidad</span> </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.cantidad}} </td>\n            </ng-container>\n            \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"unidad_de_medida\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Unidad de Medida </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.um}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"descripcion\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Descripción </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.descripcion}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"medida\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Medida </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.medida}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"color\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Color </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.color}} </td>\n            </ng-container>\n\n            <!-- Email Column -->\n            <ng-container matColumnDef=\"otras_Especificaciones\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Otras especificaciones </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.otras_especificaciones}} </td>\n            </ng-container>\n            \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </mat-table>\n    \n        </div>\n        <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator> -->\n      </div>\n    </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { supplierModel } from 'src/app/models/supplier.model';\nimport { supplyservice } from '../../services/supplier.service';\n\n@Component({\n  selector: 'app-supplier-detail',\n  templateUrl: './supplier-detail.component.html',\n  styleUrls: ['./supplier-detail.component.css']\n})\nexport class SupplierDetailComponent implements OnInit {\n\n// =========================\n// DECLARACIONES\n// =========================\nnombre : string;\ndireccion : string;\nrfc : string;\ncontacto : string;\nciudad : string;\nestado : string;\n\npublic newProject: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<supplierModel>\n    , private _supplyservice : supplyservice\n    , private formBuilder: FormBuilder\n\n  ) {\n\n    this.newProject = this.formBuilder.group({\n      nombre :  new FormControl('', [Validators.required]),\n      direccion: new FormControl('', [Validators.required]),\n      rfc: new FormControl('', [Validators.required]),\n      contacto: new FormControl('', [Validators.required]),\n      ciudad: new FormControl('', [Validators.required]),\n      estado: new FormControl('', [Validators.required]),\n    });\n   }\n\n// =========================\n// PROCEDIMIENTOS\n// =========================\n\n  ngOnInit(): void {\n  }\n\n  cancel(event){\n    this.dialogRef.close();\n  }\n\n  save(form, event){\n\n    let arrayToDb : any;\n\n    arrayToDb = ({ \n      proveedorid : 0\n        , nombre : form.controls[\"nombre\"].value\n        , direccion : form.controls[\"direccion\"].value\n        , rfc : form.controls[\"rfc\"].value \n        , ciudad : form.controls[\"ciudad\"].value\n        , estado : form.controls[\"estado\"].value\n        , contacto : form.controls[\"contacto\"].value\n        // , vigencia : '2050-01-01'\n      });\n\n    this.insertSupplier(arrayToDb);\n    \n  }\n\n// =========================\n// UTILERIAS\n// =========================\n\n\n// =========================\n// SERVICIOS\n// =========================\n\ninsertSupplier(arrayToDb : any){\n\n  // Inserta Proveedores\n  this._supplyservice.insertsupply(arrayToDb).subscribe(\n    res=> {\n      console.log('PROVEEDORES', res);\n    },\n    error => console.log(\"error al insertar proveedores\",error)\n  )\n\n}\n\nupdateSupplier(arrayToDb : any){\n\n  // Inserta Proveedores\n  this._supplyservice.updatesupply(arrayToDb).subscribe(\n    res=> {\n      console.log('PROVEEDORES', res);\n    },\n    error => console.log(\"error al actualizar proveedores\",error)\n  )\n\n}\n\n\n}\n","<div fxLayout=\"row\">\n    <h4>Catálogo de proveedores</h4>\n  </div>\n  <br>\n  <div mat-dialog-content-example [formGroup]=\"newProject\">\n    <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div><br>Nombre</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n              <input [type]=\"nombre\" matInput class=\"form-control form-control-line control\" formControlName=\"nombre\" [(ngModel)]=\"nombre\" disabled >\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('nombre').valid && newProject.get('nombre').touched\" class=\"help-block\" style=\"color: red;\"> El nombre es requerido</span>\n            </div>\n        </div>\n        <div fxFlex.gt-sm=\"10%\" >\n          <div></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n          <div><br>Dirección</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"direccion\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"direccion\" [(ngModel)]=\"direccion\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('direccion').valid && newProject.get('direccion').touched\" class=\"help-block\" style=\"color: red;\"> La dirección es requerida</span>\n          </div>\n        </div>\n      </div>\n\n      <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div><br>RFC</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n              <input [type]=\"rfc\" matInput class=\"form-control form-control-line control\" formControlName=\"rfc\" [(ngModel)]=\"rfc\" disabled >\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('rfc').valid && newProject.get('rfc').touched\" class=\"help-block\" style=\"color: red;\"> El RFC es requerido</span>\n            </div>\n        </div>\n        <div fxFlex.gt-sm=\"10%\" >\n          <div></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n          <div><br>Contacto</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"contacto\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"contacto\" [(ngModel)]=\"contacto\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('contacto').valid && newProject.get('contacto').touched\" class=\"help-block\" style=\"color: red;\"> El contacto es requerido</span>\n          </div>\n        </div>\n      </div>\n\n      <div fxLayout=\"row\" class=\"division\">\n        <div fxFlex.gt-sm=\"20%\">\n            <div><br>Ciudad</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n            <div>\n              <mat-form-field>\n              <input [type]=\"ciudad\" matInput class=\"form-control form-control-line control\" formControlName=\"ciudad\" [(ngModel)]=\"ciudad\" disabled >\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('ciudad').valid && newProject.get('ciudad').touched\" class=\"help-block\" style=\"color: red;\"> La ciudad es requerida</span>\n            </div>\n        </div>\n        <div fxFlex.gt-sm=\"10%\" >\n          <div></div>\n        </div>\n        <div fxFlex.gt-sm=\"20%\" >\n          <div><br>Estado</div>\n        </div>\n        <div fxFlex.gt-sm=\"25%\" >\n          <div>\n            <mat-form-field>\n              <input [type]=\"estado\" matInput class=\"form-control form-control-line control\" placeholder=\"\" formControlName=\"estado\" [(ngModel)]=\"estado\">\n            </mat-form-field>\n            <span *ngIf=\"!newProject.get('estado').valid && newProject.get('estado').touched\" class=\"help-block\" style=\"color: red;\"> El estado es requerido</span>\n          </div>\n        </div>\n      </div>\n  </div>\n\n  <div fxLayout=\"row\" class=\"division\">\n    <div fxFlex.gt-sm=\"20%\">\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n        <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"accent\" (click)=\"save(newProject, $event)\">Guardar</button></div>\n    </div>\n    <div fxFlex.gt-sm=\"20%\" >\n      <div><button mat-raised-button color=\"warn\" (click)=\"cancel($event)\">Cancelar</button></div>\n    </div>\n  </div>\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { PortalModule } from '@angular/cdk/portal';\n\n/**\n * NgModule that includes all Material modules that are required to serve the demo-app.\n */\n@NgModule({\n    exports: [\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatBottomSheetModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatTableModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatBadgeModule,\n        MatSidenavModule,\n        MatSlideToggleModule,\n        MatSliderModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatNativeDateModule,\n        CdkTableModule,\n        A11yModule,\n        BidiModule,\n        CdkAccordionModule,\n        ObserversModule,\n        OverlayModule,\n        PlatformModule,\n        PortalModule\n    ]\n})\nexport class DemoMaterialModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router\n  ) {\n\n  }\n\n  canActivate() {\n    if (localStorage.getItem('token_access') != null) {\n      return true;\n    } else {\n      this.router.navigate(['/auth/signin']);\n      return false;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { WorkBook, WorkSheet } from 'xlsx';\n\n\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheethml.sheet;charset=UTF-8';\nconst EXCEL_EXTENSION = '.xlsx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExcelServiceService {\n\n  constructor() { }\n\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\n\n    const worksheet: WorkSheet = XLSX.utils.json_to_sheet(json);\n\n    const workbook: WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n\n    this.saveAsExcelFile(excelBuffer, excelFileName);\n\n  }\n\n  saveAsExcelFile(buffer: any, fileName: string): void {\n    const data: Blob = new Blob([buffer], { type: EXCEL_TYPE });\n\n    FileSaver.saveAs(data, `${fileName}_export_${new Date().getTime()}${EXCEL_EXTENSION}`);\n  }\n\n}\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport {ChangeDetectorRef, Component,OnDestroy,AfterViewInit} from '@angular/core';\nimport { MenuItems } from '../../shared/menu-items/menu-items';\n\n\n/** @title Responsive sidenav */\n@Component({\n  selector: 'app-full-layout',\n  templateUrl: 'full.component.html',\n  styleUrls: []\n})\nexport class FullComponent implements OnDestroy, AfterViewInit {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public menuItems: MenuItems\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n  ngAfterViewInit() {}\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<div class=\"main-container\"> \n    <!-- ============================================================== -->\n    <!-- Topbar - style you can find in header.scss -->\n    <!-- ============================================================== -->\n    <mat-toolbar color=\"primary\" class=\"topbar telative\">\n        <!-- ============================================================== -->\n        <!-- Logo - style you can find in header.scss -->\n        <!-- ============================================================== -->\n        <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" href=\"index.html\">\n                <!-- Logo icon --><b>\n                    <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\n                    <!-- Dark Logo icon -->\n                    <img src=\"assets/images/logo-icon.png\" alt=\"homepage\" class=\"dark-logo\">\n                    <!-- Light Logo icon -->\n                    <img src=\"assets/images/logo-light-icon.png\" alt=\"homepage\" class=\"light-logo\">\n                    <!-- <img src=\"assets/images/logo-comercial20.jpeg\" alt=\"homepage\" class=\"light-logo\"> -->\n                </b>\n                <!--End Logo icon -->\n                <!-- Logo text -->\n                <span fxShow=\"false\" fxShow.gt-xs>\n                 <!-- dark Logo text -->\n                 <img src=\"assets/images/logo-text.png\" alt=\"homepage\" class=\"dark-logo\">\n                 <!-- Light Logo text -->    \n                 <img src=\"assets/images/logo-light-text.png\" class=\"light-logo\" alt=\"homepage\">\n                </span> </a>\n        </div>\n        <!-- ============================================================== -->\n        <!-- sidebar toggle -->\n        <!-- ============================================================== -->\n        \n        <button mat-icon-button (click)=\"snav.toggle()\" value=\"sidebarclosed\">\n            <mat-icon>menu</mat-icon>\n        </button>\n        <span fxFlex></span>\n        <!-- ============================================================== -->\n        <!-- app header component - style you can find in header.scss / header.component.ts-->\n        <!-- ============================================================== -->\n        <app-header></app-header>\n    </mat-toolbar>\n    <!-- ============================================================== -->\n    <!-- End Topbar - style you can find in pages.scss -->\n    <!-- ============================================================== -->\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\">\n        <!-- ============================================================== -->\n        <!-- Sidebar - style you can find in sidebar.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav #snav id=\"snav\" class=\"dark-sidebar pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\" fixedTopGap=\"0\" [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\"  >\n            \n                <app-sidebar></app-sidebar>\n               \n            \n        </mat-sidenav>\n        <!-- ============================================================== -->\n        <!-- Sidebar - style you can find in sidebar.scss -->\n        <!-- ============================================================== -->\n        \n        <!-- ============================================================== -->\n        <!-- Page container - style you can find in pages.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav-content class=\"page-wrapper\">\n                 \n                <div class=\"page-content\">\n                   \n                        <router-outlet><app-spinner></app-spinner></router-outlet>\n                    \n                </div>    \n               \n        </mat-sidenav-content>\n        <!-- ============================================================== -->\n        <!-- Page container - style you can find in pages.scss -->\n        <!-- ============================================================== -->\n    </mat-sidenav-container>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: []\n})\nexport class AppHeaderComponent {}\n","        \n<!-- ============================================================== -->\n<!-- Profile - style you can find in header.scss -->\n<!-- ============================================================== -->\n<!-- <a href=\"https://wrappixel.com/templates/materialpro-angular-dashboard/\" class=\" m-r-20 hidden-sm-up\" mat-raised-button color=\"warn\">Upgrade To Pro</a> -->\n<!-- <button [matMenuTriggerFor]=\"profile\" mat-icon-button class=\"m-r-5\"> <img src=\"assets/images/users/1.jpg\" alt=\"user\" class=\"profile-pic\"> </button> -->\n<mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\n    <button mat-menu-item>\n        <mat-icon>settings</mat-icon> Settings </button>\n    <button mat-menu-item>\n        <mat-icon>account_box</mat-icon> Profile </button>\n    <button mat-menu-item>\n        <mat-icon>notifications_off</mat-icon> Disable notifications </button>\n    <button mat-menu-item>\n        <mat-icon>exit_to_app</mat-icon> Sign Out </button>\n</mat-menu>\n\n","<!-- ============================================================== -->\n<!-- sidebar -->\n<!-- ============================================================== -->\n <div class=\"user-profile\" style=\"background: url(assets/images/background/user-info.jpg) no-repeat;\">\n    <!-- User profile image -->\n    <div class=\"profile-img\"> <img src=\"assets/images/users/profile.png\" alt=\"user\"> </div>\n    <!-- User profile text-->\n    <!-- ============================================================== -->\n    <!-- Profile - style you can find in header.scss -->\n    <!-- ============================================================== -->\n    <div class=\"profile-text\"><a [matMenuTriggerFor]=\"sdprofile\" class=\"\"> Markarn Doe <i class=\"ti-angle-down font-12 m-l-5\"></i></a></div>\n    <mat-menu #sdprofile=\"matMenu\" class=\"mymegamenu\">\n        <button mat-menu-item>\n            <mat-icon>settings</mat-icon> Settings </button>\n        <button mat-menu-item>\n            <mat-icon>account_box</mat-icon> Profile </button>\n        <button mat-menu-item>\n            <mat-icon>notifications_off</mat-icon> Disable notifications </button>\n        <button mat-menu-item>\n            <mat-icon>exit_to_app</mat-icon> Sign Out </button>\n    </mat-menu>\n    \n</div>\n<mat-nav-list appAccordion>\n    <mat-list-item appAccordionLink *ngFor=\"let menuitem of menuItems.getMenuitem()\" routerLinkActive=\"selected\" group=\"{{menuitem.state}}\">\n        <a class=\"\" appAccordionToggle [routerLink]=\"['/', menuitem.state]\" *ngIf=\"menuitem.type === 'link'\">\n            <mat-icon>{{ menuitem.icon }}</mat-icon> \n            <span>{{ menuitem.name }}</span> \n            <span fxFlex></span> \n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span> \n        </a>\n\n        \n    </mat-list-item>\n\n</mat-nav-list>","import { ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: []\n})\nexport class AppSidebarComponent implements OnDestroy {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public menuItems: MenuItems\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n}\n","export interface AuthI {\n    id: number;\n    nombreusuario: string;\n    correo: string;\n    contrasegna: string;\n    perfilid: number;\n    perfil: string;\n    token: string;\n  }\n  \n  export class AuthC implements AuthI {\n  \n    id: number = null;\n    nombreusuario = '';\n    correo = '';\n    contrasegna = '';\n    perfilid = null;\n    perfil = '';\n    token = '';\n  }","export interface UserI {\n    id: number;\n    perfil: number;\n    fraccionamiento_id: number;\n    nombre_perfil: string;\n    nombre_completo: string;\n    nombre: string;\n    apellido_paterno: string;\n    apellido_materno: string;\n    foto: string;\n    correo: string;\n    telefono: string;\n    contrasegna: string;\n    token: string;\n    estado: number;\n    nombre_estado: string;\n  }\n  \n  export class UserC implements UserI {\n    id: number = null;\n    perfil: number = null;\n    fraccionamiento_id: number = null;\n    nombre_perfil: string = '';\n    nombre_completo: string = '';\n    nombre: string = '';\n    apellido_paterno: string = '';\n    apellido_materno: string = '';\n    foto: string = '';\n    correo: string = '';\n    telefono: string = '';\n    contrasegna: string = '';\n    token: string = '';\n    estado: number = null;\n    nombre_estado: string = '';\n  }\n  \n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-categories-list',\n  templateUrl: './categories-list.component.html',\n  styleUrls: ['./categories-list.component.css']\n})\nexport class CategoriesListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>categories-list works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { RouterModule, Router } from '@angular/router';\nimport { loginservice } from '../../services/login/login.service';\nimport { UserI, UserC } from '../../models/users'; // './../../../../models/user';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AESEncryptService } from 'src/app/services/aesencrypt.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  providers: [loginservice]\n})\nexport class LoginComponent implements OnInit {\n  msg = '';\n  public userinterface: UserI;\n  public spinerShow: boolean; \n  loginform: FormGroup;\n\n  constructor(private service: loginservice,\n    private routes: Router,\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private route: Router,\n    private cryptService: AESEncryptService,\n    private toastr: ToastrService\n    ) { \n      this.spinerShow = false;\n      this.userinterface = new UserC();\n    }\n\n  ngOnInit() {\n    this.clearForm();\n  }\n\n  loginReq() {\n\n    this.spinerShow = true;\n\n    const pswdEncryp = this.cryptService.encrypt(this.loginform.value.contrasegna);\n\n    this.loginform.value.contrasegna = pswdEncryp;\n\n    this.authService.loginReq(this.loginform.value).subscribe(\n      response => {\n        \n        localStorage.setItem('token_access', response.token);\n        \n        this.spinerShow = false;\n\n        this.route.navigate(['/dashboard']);\n      },\n      err => {\n        if (err.status === 401) {\n          this.toastr.error('Credenciales de acceso inválidas', 'ERROR');\n        }\n\n        if (err.status === 0 || err.status === 500) {\n          this.toastr.error('No se puede comunicar con el servidor', 'ERROR');\n        }\n        console.error(err);\n        this.spinerShow = false;\n      }\n    );\n  }\n\n  clearForm() {\n    this.loginform = this.formBuilder.group({\n      nombreusuario : ['', Validators.required],\n      contrasegna : ['', Validators.required]\n    });\n  }\n}\n","<div class=\"login-register\" style=\"background-image:url(assets/images/background/login-register.jpg);\">\n    <div class=\"login-register-box\">\n        <!-- <div class=\"bg-info text-white m-b-10 text-center p-t-10 p-b-10 alert-box\">\n            <span class=\"m-r-10\">Username : admin</span> |\n            <span class=\"m-l-10\">Password : admin123</span>\n        </div> -->\n        <mat-card class=\"m-t-10\">\n        <mat-card-content>\n        <form id=\"loginform\" [formGroup]=\"loginform\" (ngSubmit)=\"loginReq()\">\n            <div class=\"text-center\">\n                <img alt=\"homepage\" src=\"assets/images/logo-comercial20.jpeg\">\n                <!-- <h4 class=\"m-t-0\">Login to App</h4> -->\n            </div>\n            <div *ngIf=\"msg\" class=\"bg-danger p-10 text-white\">{{ msg }}</div>\n            <div fxLayout=\"row wrap\">\n                <!-- col full-->\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n                    <mat-form-field>\n                    <input matInput placeholder=\"Usuario\" formControlName=\"nombreusuario\" required=\"\" #u1>\n                    </mat-form-field>\n                </div>\n                <!-- col full-->\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n                    <mat-form-field>\n                    <input matInput type=\"password\" placeholder=\"Clave\" formControlName=\"contrasegna\" required=\"\" #p2>\n                    </mat-form-field>\n                </div>\n                <!-- col half-->\n                <!-- <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\">\n                    <mat-checkbox color=\"warn\">Remember me</mat-checkbox>\n                </div> -->\n                <!-- col half-->\n                <!-- <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" class=\"text-right\">\n                    <a [routerLink]=\"['/authentication/forgot']\" class=\"link\">Forgot pwd?</a>\n                </div> -->\n                <!-- col full-->\n                <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n                    <!-- <button mat-raised-button color=\"primary\" class=\"btn-block btn-lg m-t-20 m-b-20\" (click)=\"check(u1.value, p2.value)\" type=\"button\">Acceder</button> -->\n                    <button mat-raised-button color=\"primary\" class=\"btn-block btn-lg m-t-20 m-b-20\" (click)=\"loginReq()\" type=\"button\">Acceder</button>\n                </div>\n                <!-- col full-->\n                <!-- <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" class=\"text-center\">\n                    <span>Don't have an account?\n                        <a [routerLink]=\"['/authentication/register']\" class=\"text-info link\">Register</a>\n                    </span>\n                </div> -->\n            </div>\n        </form>\n        </mat-card-content>\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\nimport * as moment from 'moment';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { projectservice } from '../../../services/projects/project.service';\nimport { projectModel } from '../../../models/project.model';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-project-capture',\n  templateUrl: './project-capture.component.html',\n  styleUrls: ['./project-capture.component.css'],\n})\nexport class ProjectCaptureComponent implements OnInit {\n\n// ====================\n// DECLARACIONES\n// ====================\n\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n\n  displayedColumns = ['codigo_proyecto', 'nombre_proyecto', 'fecha_inicial_proyecto', 'fecha_final_proyecto', 'nombre_cliente', 'responsable_proyecto', 'presupuesto_proyecto', 'proyect_id', 'editar', 'categorias'];\n\n  projectData : any[] = [];\n  dataSourceShow : MatTableDataSource<projectModel>; //<any> = new MatTableDataSource\n  buscar:any;\n\n  @Output() filterChange = new EventEmitter();\n\n  constructor(public dialog: MatDialog\n          , MatTableModule : MatTableModule\n          , private _projectService : projectservice\n          , private _excelService : ExcelServiceService) { \n    // this.displayedColumns = ['proyecto']\n  }\n\n// ====================\n// PROCEDIMIENTOS\n// ====================\n  ngOnInit(): void {\n    this.getProjects();\n  }\n\n  getProjects(){\n\n    // Proyectos registrados\n    this._projectService.getProjectAll().subscribe(\n      res=> {\n        console.log('Proyectos', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n\n  }\n\n  onOpenDialogAddProject() {\n    \n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      //title: 'NUEVO PROYECTO',\n     \n    }\n    dialogConfig.width = '450px';\n    dialogConfig.height = '350px';\n    dialogConfig.disableClose = true;\n\n  }\n\n  editProyecto(element : any, event){\n    console.log('Edita', element);\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'EDITAR PROYECTO',\n      arrayData : element,\n      projectId : element.proyecto_id\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(ProjectCaptureDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  addCategorias(proyectoId : any, event){\n    console.log('Alta de categoras', proyectoId);\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'CATEGORIAS',\n      arrayData : this.dataSourceShow,\n      projectId: proyectoId\n     \n    }\n    dialogConfig.width = '1400px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(CategoriesComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  nuevoProyecto(event){\n    console.log('Alta de categoras');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'NUEVO PROYECTO',\n      arrayData : null,\n      projectId: 0\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(ProjectCaptureDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n\n  descargarProyectos(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , nombre_proyecto : element.nombre_proyecto\n                              , fecha_inicial_proyecto : moment(element.fecha_inicial_proyecto, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , fecha_final_proyecto : moment(element.fecha_final_proyecto, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , nombre_cliente : element.nombre_cliente\n                              , responsable_proyecto : element.responsable_proyecto\n                              , presupuesto_proyecto : element.presupuesto_proyecto\n      })\n    });\n\n    \n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Proyectos');  \n  }\n\n// ====================\n// UTILERIAS\n// ====================\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n  filtrar(event: Event) {\n    const filtro = (event.target as HTMLInputElement).value;\n    this.dataSourceShow.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Proyectos</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarProyectos()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevoProyecto($event)\">Nuevo Proyecto</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n          <div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"codigo_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_proyecto}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"nombre_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Nombre </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.nombre_proyecto}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"fecha_inicial_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha Inicial </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha_inicial_proyecto | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"fecha_final_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha Final </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha_final_proyecto | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"nombre_cliente\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Cliente </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.nombre_cliente}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"responsable_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Responable </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.responsable_proyecto}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"presupuesto_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Presupuesto </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.presupuesto_proyecto}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"proyect_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\" hidden> proyecto_id  </th>\n                  <td mat-cell *matCellDef=\"let element\" hidden> {{element.proyecto_id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editProyecto(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n        </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\nimport { getMatFormFieldPlaceholderConflictError } from '@angular/material/form-field';\nimport { poModel } from 'src/app/models/po.model';\nimport { purchaseOrderservice } from 'src/app/services/PurchaseOrder.service';\nimport { PoDetailComponent } from 'src/app/components/po-detail/po-detail.component';\n\nimport jsPDF from 'jspdf';\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\npdfMake.vfs = pdfFonts.pdfMake.vfs;\nimport htmlToPdfmake from 'html-to-pdfmake';\n\n@Component({\n  selector: 'app-po-list',\n  templateUrl: './po-list.component.html',\n  styleUrls: ['./po-list.component.css']\n})\nexport class PoListComponent implements OnInit {\n  // =====================\n  // DECLARACIONES\n  // =====================\n\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<poModel>\n\n  @ViewChild('pdfTable') pdfTable: ElementRef;\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['ordendecompra_id', 'ordendecompra_codigo', 'cotizacion_codigo', 'proveedor_nombre', 'ordendecompra_fecha', 'Estatus', 'editar', 'cancelar', 'autorizar', 'pdf'];\n  \n  buscar:any;\n\n  constructor(public dialog: MatDialog\n          , private _excelService : ExcelServiceService\n          , private _purchaseOrderService : purchaseOrderservice) { }\n\n\n  // =====================\n  // PROCEDIMIENTOS\n  // =====================\n\n  ngOnInit(): void {\n\n    this.getPO_Hdr();\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , categoria : element.codigo_proyectocategoria\n                              , requisicion : element.requisicioninterna_id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaOrdenDeCompra(event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'ORDEN DE COMPRA',\n      arrayData : null,\n      requisicionId: 1,\n      estadoPantalla : 'new'\n     \n    }\n    dialogConfig.width = '1500px';\n    dialogConfig.height = '9000px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(PoDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  editRequisicion(element, event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    console.log('autoriza registro', element);\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : element,\n      requisicionId: 1,\n      estadoPantalla : 'edition'\n     \n    }\n    dialogConfig.width = '1500px';\n    dialogConfig.height = '900px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(PoDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  aproveODC(element, event){\n    console.log('Aprueba orden de compra');\n\n    const dialogConfig = new MatDialogConfig();\n\n    console.log('aprueba odc', element)\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'ORDEN DE COMPRA',\n      arrayData : element,\n      requisicionId: 1,\n      estadoPantalla : 'aprove',\n     \n    }\n    dialogConfig.width = '1500px';\n    dialogConfig.height = '9000px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(PoDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  cancelaODC(element, event : Event){\n    this.updateODCStatus(element, 4);\n  }\n\n  printPDF(){\n    this.downloadAsPDF();\n  }\n\n  // =====================\n  // UTILERIAS\n  // =====================\n\n  public downloadAsPDF() {\n    const doc = new jsPDF();\n   \n    const pdfTable = this.pdfTable.nativeElement;\n   \n    var html = htmlToPdfmake(pdfTable.innerHTML);\n    // var html = htmlToPdfmake(AllTable.innerHTML);\n     \n    const documentDefinition = { content: html };\n    pdfMake.createPdf(documentDefinition).open(); \n     \n  }\n\n  filtrar(event: Event) {\n    const filtro = (event.target as HTMLInputElement).value;\n    this.dataSourceShow.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n  // =====================\n  // CONSILTA DE SERVICIOS\n  // =====================\n\n  getPO_Hdr(){\n    // Proyectos registrados\n    this._purchaseOrderService.getPOAll().subscribe(\n      res=> {\n        console.log('PurchaseOrder', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n\n  cancelODCToDB(element){\n    this._purchaseOrderService.putPOCancel(element.ordendecompra_id).subscribe(\n      res=> {\n        console.log('Se inserto con éxito', res);\n        \n      },\n      error => console.log(\"error alta de proyectos\",error)\n    )\n  }\n\n  updateODCStatus(element, statusToDb){\n    let arrayToDb : any;\n\n    arrayToDb = ({ordendecompra_id : element.ordendecompra_id, estatus : statusToDb, usuario : 1})\n\nconsole.log('cancelado', element)\n\n    this._purchaseOrderService.updatePOStatus(arrayToDb).subscribe(\n      res=> {\n        console.log('Se inserto con éxito', res);\n        \n      },\n      error => console.log(\"error alta de proyectos\",error)\n    )\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Ordenes de compra</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaOrdenDeCompra($event)\">Nueva Orde de Compra</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n        <div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- Orden de compra Id -->\n                <ng-container matColumnDef=\"ordendecompra_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\" hidden> <span>Id</span> </th>\n                  <td mat-cell *matCellDef=\"let element\" hidden> {{element.ordendecompra_id}} </td>\n                </ng-container>\n\n                <!-- Codigo orden de compra -->\n                <ng-container matColumnDef=\"ordendecompra_codigo\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Orden de compra</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.ordendecompra_codigo}} </td>\n                </ng-container>\n                \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"cotizacion_codigo\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Cotización</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.cotizacion_codigo}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"proveedor_nombre\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Proveedor </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.proveedor_nombre}} </td>\n                </ng-container>\n                \n                \n                <!-- <ng-container matColumnDef=\"Requisicion_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Requisicion_Id}} </td>\n                </ng-container> -->\n\n                <ng-container matColumnDef=\"ordendecompra_fecha\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.ordendecompra_fecha | date: ' dd-MM-yyyy'}} </td>\n                </ng-container> \n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> \n                    <ng-container *ngIf=\"element.estado == 0\">EN PROCESO</ng-container>\n                    <ng-container *ngIf=\"element.estado == 1\">EN PROCESO</ng-container>\n                    <ng-container *ngIf=\"element.estado == 2\">ORDEN DE COMPRA</ng-container>\n                    <ng-container *ngIf=\"element.estado == 3\">AUTORIZADO</ng-container>\n                    <ng-container *ngIf=\"element.estado == 4\">CANCELADO</ng-container>\n                  </td>\n                </ng-container>\n\n                <!-- Editar -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Cancelar -->\n                <ng-container matColumnDef=\"cancelar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Cancelar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"cancelaODC(element, $event)\">Cancelar</button> </td>\n                </ng-container>\n\n                <!-- Autorizar -->\n                <ng-container matColumnDef=\"autorizar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Autorizar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"aproveODC(element, $event)\">Autorizar</button> </td>\n                </ng-container>\n\n                <!-- PDF -->\n                <ng-container matColumnDef=\"pdf\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> PDF </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"printPDF(element, $event)\">PDF</button> </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container\" hidden>\n  <div id=\"pdfTable\" #pdfTable>\n    \n  </div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { quotationListModel } from 'src/app/models/quotation-list.model';\nimport { quotationservice } from 'src/app/services/quotation/quotation.service';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { QuotationDetailComponent } from 'src/app/components/quotations/quotation-detail/quotation-detail.component';\nimport { QuotationDetailFilesComponent } from 'src/app/components/quotations/quotation-detail-files/quotation-detail-files.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\nimport { element } from 'protractor';\n\n@Component({\n  selector: 'app-quotation-list',\n  templateUrl: './quotation-list.component.html',\n  styleUrls: ['./quotation-list.component.css']\n})\nexport class QuotationListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<quotationListModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['codigo_requisicioninterna', 'codigo', 'fecha', 'estado', 'editar'];\n  \n  constructor(public dialog: MatDialog\n    , private _excelService : ExcelServiceService\n    , private _quotationService : quotationservice) { }\n\n  ngOnInit(): void {\n\n    this.getQuotationAll();\n\n    // let arrayData : any;\n\n    // arrayData = [{codigo_requisicioninterna : 1, codigo : 1, fecha : '2020-01-01', estado : 'ACTIVO', requisicioninterna_id : 1, cotizacion_id : 1}]\n    // this.dataSourceShow = new MatTableDataSource(arrayData);\n\n  }\n\n  getQuotationAll(){\n    // Proyectos registrados\n    this._quotationService.getQuotationAll().subscribe(\n      res=> {\n        console.log('Cotizaciones', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n  \n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({cotizacion_id : element.cotizacion_id\n                              , requisicioninterna_id : element.requisicioninterna_id\n                              , codigo_requisicioninterna : element.codigo_requisicioninterna\n                              , codigo : element.codigo\n                              , fecha : moment(element.fecha, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estado : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaCotizacion(evetn){\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'COTIZACIONES',\n      arrayData : null,\n      requisicionId: 0,\n      cotizacionId : 0\n     \n    }\n    dialogConfig.width = '1300px';\n    dialogConfig.height = '900px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(QuotationDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  editCotizacion(element : any, event){\n    console.log('Edita cotizaciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'COTIZACIONES',\n      arrayData : element,\n      requisicionId: 0,\n      cotizacionId : element.cotizacion_id\n     \n    }\n    dialogConfig.width = '1200px';\n    dialogConfig.height = '700px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(QuotationDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  filtrar(event : Event){\n    const filtro = (event.target as HTMLInputElement).value;\n    this.dataSourceShow.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Cotizaciones</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaCotizacion($event)\">Nueva Cotización</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"codigo_requisicioninterna\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Requisición</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_requisicioninterna}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"codigo\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Cotización </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo}} </td>\n                </ng-container>\n                \n                <!-- Fecha Column -->\n                <ng-container matColumnDef=\"fecha\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Estado Column -->\n                <ng-container matColumnDef=\"estado\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estado </th>\n                  <td mat-cell *matCellDef=\"let element\">\n                    <ng-container *ngIf=\"element.estado == 0\">EN PROCESO</ng-container>\n                    <ng-container *ngIf=\"element.estado == 1\">CANCELADO</ng-container>\n                    <ng-container *ngIf=\"element.estado == 2\">ORDEN DE COMPRA</ng-container>\n                  </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editCotizacion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport * as moment from 'moment';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n\n@Component({\n  selector: 'app-requisition-list',\n  templateUrl: './requisition-list.component.html',\n  styleUrls: ['./requisition-list.component.css']\n})\nexport class RequisitionListComponent implements OnInit {\n// =================\n// DECLARACIONES\n// =================\n\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  // displayedColumns = ['proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_Requisicion', 'Estatus', 'editar'];\n  displayedColumns = ['codigo_proyectocategoria', 'codigo', 'fecha', 'estado', 'editar'];\n  \n  constructor(public dialog: MatDialog\n          , private _excelService : ExcelServiceService\n          , private _requisitionService : requisitionservice) { }\n\n\n  // =================\n  // PROCEDIMIENTOS\n  // =================\n\n  ngOnInit(): void {\n\n    this.getrequisition();\n      \n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({\n                              // proyecto_id : element.proyecto_id\n                              categoria : element.codigo_proyectocategoria\n                              , requisicion : element.requisicioninterna_id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaRequisicion(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 0\n     \n    }\n    dialogConfig.width = '1300px';\n    dialogConfig.height = '900px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  editRequisicion(element){\n    console.log('Editar de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : element,\n      requisicionId: element.requisicioninterna_id\n     \n    }\n    dialogConfig.width = '1200px';\n    dialogConfig.height = '900px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  filtrar(event : Event){\n    const filtro = (event.target as HTMLInputElement).value;\n    this.dataSourceShow.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n  // =================\n  // UTILERIAS\n  // =================\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n  // =================\n  // SERVICIOS\n  // =================\n\n  getrequisition(){\n    // Proyectos registrados\n    this._requisitionService.getRequisitionAll().subscribe(\n      res=> {\n        console.log('Requisiciones', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Requisiciones</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <!-- <ng-container matColumnDef=\"codigo_proyecto\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_proyecto}} </td>\n                </ng-container> -->\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"codigo_proyectocategoria\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Proyecto-Categoría </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo_proyectocategoria}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"codigo\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.codigo}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"fecha\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha de Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fecha | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"estado\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\">\n                    <ng-container *ngIf=\"element.estado == true\">ACTIVO</ng-container>\n                    <ng-container *ngIf=\"element.estado == false\">INACTIVO</ng-container>\n                  </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Consultar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Consultar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <!-- <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container> -->\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-storage-invoice-list',\n  templateUrl: './storage-invoice-list.component.html',\n  styleUrls: ['./storage-invoice-list.component.css']\n})\nexport class StorageInvoiceListComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<requisitionModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['proyecto_id', 'Categoria_Id', 'Requisicion_Id', 'Fecha_Requisicion', 'Estatus', 'editar'];\n  \n  constructor(public dialog: MatDialog\n    , private _excelService : ExcelServiceService) { }\n\n  ngOnInit(): void {\n    let arrayData : any;\n\n    arrayData = [{proyecto_id : 1, Categoria_Id : 1, Requisicion_Id : 1, Fecha_Requisicion : '2020-01-01', Estatus : 'ACTIVO'}]\n    this.dataSourceShow = new MatTableDataSource(arrayData);\n\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({proyecto_id : element.proyecto_id\n                              , categoria : element.codigo_proyectocategoria\n                              , requisicion : element.requisicioninterna_id\n                              , Fecha_Requisicion : moment(element.Fecha_Requisicion, 'YYYY-MM-DD').format('DD-MM-YYYY')\n                              , estatus : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  nuevaRequisicion(evetn){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  editRequisicion(event){\n    console.log('Alta de requisiciones');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'REQUISICIONES',\n      arrayData : null,\n      requisicionId: 1\n     \n    }\n    dialogConfig.width = '900px';\n    dialogConfig.height = '400px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(RequisitionDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Almacén</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"><!-- [(ngModel)]=\"buscar\"--></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div>\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"proyecto_id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Proyecto</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.proyecto_id}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"Categoria_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Categoria </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Categoria_Id}} </td>\n                </ng-container>\n                \n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Requisicion_Id\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Requisicion_Id}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Fecha_Requisicion\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Fecha de Requisición </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Fecha_Requisicion | date: ' dd-MM-yyyy'}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.Estatus}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <!-- <ng-container matColumnDef=\"categorias\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Categorias </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"accent\" (click)=\"addCategorias(element.proyecto_id, $event)\">Agregar</button> </td>\n                </ng-container> -->\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator>\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { warehouseModel } from 'src/app/models/warehouse.model';\nimport { requisitionservice } from 'src/app/services/requisition/requisition.service';\nimport { RequisitionDetailComponent } from 'src/app/components/requisitions/requisition-detail/requisition-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\n\n@Component({\n  selector: 'app-warehouse-review',\n  templateUrl: './warehouse-review.component.html',\n  styleUrls: ['./warehouse-review.component.css']\n})\nexport class WarehouseReviewComponent implements OnInit {\n// Para paginación\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<warehouseModel>\n\n@ViewChild(MatSort,{static:true}) sort: MatSort;\n@ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n@Output() filterChange = new EventEmitter();\n\ndisplayedColumns = ['requisicion_Codigo', 'descripcion', 'Estatus', 'editar'];\n\n  constructor(public dialog: MatDialog\n    , private _excelService : ExcelServiceService) { }\n\n  ngOnInit(): void {\n    let arrayData : any;\n\n    arrayData = [{requisicion_Codigo : 1, descripcion : 'Descripción', estado : 'ACTIVO'}]\n    this.dataSourceShow = new MatTableDataSource(arrayData);\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({requisicion_Codigo : element.requisicion_Codigo\n                              , descripcion : element.descripcion\n                              , estatus : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Requisicones');  \n  }\n\n  filtrar(event){}\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n      <div class=\"header-body\">\n        <!-- Card stats -->\n      </div>\n    </div>\n  </div>\n  <!-- Page content -->\n  <div class=\"container-fluid mt--7\">\n  \n    <!-- Table -->\n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"card shadow\">\n          <div class=\"card-header border-0\">\n            <h3 class=\"mb-0\">Revisión en Almacén</h3>\n          </div>\n          \n          <!-- <form> -->\n            \n            <h6 class=\"heading-small text-muted mb-4\"></h6>\n            <hr class=\"my-4\" />\n          <!-- </form> -->\n          <!-- <div class=\"card\">\n            <table>\n              <tr>\n                <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\" placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\"></td>\n                <td class=\"col70\"></td>\n                <td class=\"col10\"><button mat-raised-button color=\"primary\" (click)=\"descargarExcel()\">Descargar</button></td>\n                <td class=\"col10\"><button mat-raised-button color=\"accent\" (click)=\"nuevaRequisicion($event)\">Nueva Requisición</button></td>\n                <td class=\"col10\"></td>\n              </tr>\n            </table>\n            <br>\n          </div> -->\n\n          <!-- INICIA CUERPO DE LA PÁGINA-->\n\n<div class=\"col-12 col-md-12 p-0\">\n          <div class=\"card\">\n            <div class=\"card-body card-body-table\">\n              <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\" style=\"width: 95%;\">\n      \n                <!-- ID Column -->\n                <ng-container matColumnDef=\"requisicion_Codigo\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> <span>Requisición</span> </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.requisicion_Codigo}} </td>\n                </ng-container>\n                \n                <!-- Name Column -->\n                <ng-container matColumnDef=\"descripcion\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\"> Descripción </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.descripcion}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"Estatus\">\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.estado}} </td>\n                </ng-container>\n\n                <!-- Email Column -->\n                <ng-container matColumnDef=\"editar\">\n                  <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Editar </th>\n                  <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\" (click)=\"editRequisicion(element, $event)\">Editar</button> </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </mat-table>\n        \n            </div>\n            <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [length]=\"totalSize\"  (page)=\"handlePage($event)\" style=\"width: 95%;\"></mat-paginator> -->\n          </div>\n</div>\n</div>\n</div>\n</div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { poModel } from 'src/app/models/po.model';\nimport { environment } from 'src/environments/environment';\n\nconst headers : HttpHeaders = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    \n@Injectable({\n    providedIn: 'root'\n})\n\nexport class purchaseOrderservice {\n\n  constructor(protected http: HttpClient) { }\n\n    getPOAll() {\n        return this.http.get<poModel[]>(environment.urlapi + environment.apiContextDrivers + 'PurchaseOrder/lista', {headers});\n    }\n\n    getPOById(id : any) {\n        return this.http.get<poModel[]>(environment.urlapi + environment.apiContextDrivers + 'PurchaseOrder/' + id, {headers});\n    }\n\n    getPODetail(id : any) {\n        return this.http.get<poModel[]>(environment.urlapi + environment.apiContextDrivers + 'PurchaseOrder/detalle/' + id, {headers});\n    }\n\n    insertPO_Hdr(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'PurchaseOrder/registrar',arrayToDb, {headers});\n    }\n\n    insertPODetail(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'PurchaseOrder/registrar/detalle',arrayToDb, {headers});\n    }\n\n    putPOCancel(id : any) {\n        return this.http.put(environment.urlapi + environment.apiContextDrivers + 'PurchaseOrder/cancelar/' + id, '', {headers});\n    }\n\n    updatePOStatus(arrayToDb : any) {\n        return this.http.post(environment.urlapi + environment.apiContextDrivers + 'PurchaseOrder/estado', arrayToDb, {headers});\n    }\n\n\n}","import { Injectable } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable({\n\n  providedIn: 'root'\n\n})\n\nexport class AESEncryptService {\n\n  secretKey = 'C64GF-QGX43-2PMM3-KFGKM-Q66PR';\n\n  constructor() { }\n\n  encrypt(value: string): string{\n\n    return CryptoJS.HmacSHA256(value, this.secretKey.trim()).toString();\n\n  }\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { GlobalUrl } from 'src/app/services/webapiurl';\nimport { AuthI } from '../models/auth.model';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  public auth: AuthI;\n  public url: string;\n\n  constructor(private http: HttpClient) {\n    // this.url = GlobalUrl.url_webapi;\n    this.url = environment.urlapi + environment.apiContextDrivers\n  }\n\n  loginReq(auth: any): Observable<any> {\n    return this.http.post(this.url + 'auth/login', auth);\n  }\n\n  resetPasswordReq(resetPasswordReq: any): Observable<any> {\n    return this.http.post(this.url + 'auth/resetpasswordrequest', resetPasswordReq);\n  }\n\n  changePasswordReq(changePasswordReq: any): Observable<any> {\n    return this.http.post(this.url + 'auth/changepassword', changePasswordReq);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { observable, Observable, of } from 'rxjs';\nimport { categoryModel } from 'src/app/models/category.model';\nimport { environment } from 'src/environments/environment';\nimport { from } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\nconst headers : HttpHeaders = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class categoryservice {\n\n  constructor(protected http: HttpClient) { }\n\n    getCategoryAll() {\n        return this.http.get<categoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'Category/lista', {headers});\n    }\n\n    getCategoryById(id : number) {\n        return this.http.get<categoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'Category/' + id, {headers});\n    }\n\n    updateProjects(arrayToDb : any) {\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'Category/actualizar',arrayToDb, {headers});\n    }\n\n    insertProjects(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Category/registrar',arrayToDb, {headers});\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { customerModel } from 'src/app/models/customer.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst headers : HttpHeaders = new HttpHeaders()\r\n    .set('Content-Type', 'application/json')\r\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\r\n    \r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class customerservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getcustomerAll() {\r\n        return this.http.get<customerModel[]>(environment.urlapi + environment.apiContextDrivers + 'Customer/lista', {headers});\r\n    }\r\n\r\n    getcustomerById(id : any) {\r\n        return this.http.get<customerModel[]>(environment.urlapi + environment.apiContextDrivers + 'Customer/' + id, {headers});\r\n    }\r\n\r\n    insertcustomer(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Customer/registrar',arrayToDb, {headers});\r\n    }\r\n\r\n    updatecustomer(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi + environment.apiContextDrivers + 'Customer/actualizar', arrayToDb, {headers});\r\n    }\r\n\r\n    putcustomerStatus(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi + environment.apiContextDrivers + 'Customer/activoinactivo', arrayToDb, {headers});\r\n    }\r\n\r\n}","import { Injectable, EventEmitter } from '@angular/core';\nimport jwt_decode from \"jwt-decode\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DataService {\n\n  public userid: string;\n  public username: string;\n  public fullname: string;\n  public email: string;\n  public branchofficeid: string;\n  public branchoffice: string;\n  public profileid: string;\n  public profile: string;\n  public employid: string;\n  public employcategory: string;\n  public companyid: string;\n  public country: string;\n\n  loginChanged = new EventEmitter<boolean>();\n\n    constructor(\n    ) {\n      this.DecodeToken();\n    }\n\n    public DecodeToken() {\n\n      if (localStorage.getItem('token_access') !== null) {\n        const decodeJWT = jwt_decode(localStorage.getItem('token_access'));\n\n        this.userid = decodeJWT['usuario_id'];\n        this.username = decodeJWT['usuario'];\n        this.fullname = decodeJWT['nombre_completo'];\n        this.email = decodeJWT['correo'];\n        this.branchofficeid = decodeJWT['oficina_principalid'];\n        this.branchoffice = decodeJWT['oficina_principal'];\n        this.profileid = decodeJWT['perfil_usuarioid'];\n        this.profile = decodeJWT['perfil_usuario'];\n        this.employid = decodeJWT['empleado_id'];\n        this.employcategory = decodeJWT['categoria_empleado'];\n        this.companyid = decodeJWT['empresa'];\n        this.country = decodeJWT['pais'];\n\n        localStorage.setItem('perfil_usuario', this.profile);\n      }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class loginservice {\n\n  constructor() { }\n\n  checkusernameandpassword(uname: string, pwd: string) {\n    if (uname === 'admin' && pwd === 'admin123') {\n      localStorage.setItem('username', 'admin');\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { observable, Observable, of } from 'rxjs';\nimport { projectCategoryModel } from 'src/app/models/projectCategory.model';\nimport { environment } from 'src/environments/environment';\nimport { from } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\nconst headers : HttpHeaders = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class projectCategoryservice {\n\n  constructor(protected http: HttpClient) { }\n\n    getProjectCateogryAll() {\n        return this.http.get<projectCategoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/lista', {headers});\n    }\n\n    // getProjectCateogryById(proyectoId : any) {\n    //     return this.http.get<projectCategoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/' + proyectoId);\n    // }\n\n    getProjectCateogryById(proyectoId : any) {\n        return this.http.get<projectCategoryModel[]>(environment.urlapi + environment.apiContextDrivers + 'ProjectCategory/' + proyectoId, {headers});\n    }\n\n    updateProjectCatgory(arrayToDb : any) {\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'ProjectCategory/actualizar',arrayToDb, {headers});\n    }\n\n    insertProjects(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'ProjectCategory/registrar',arrayToDb, {headers});\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { observable, Observable, of } from 'rxjs';\nimport { projectModel } from 'src/app/models/project.model';\nimport { environment } from 'src/environments/environment';\nimport { from } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\nconst headers : HttpHeaders = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class projectservice {\n\n  constructor(protected http: HttpClient) { \n      \n  }\n\n    getProjectAll() {\n        return this.http.get<projectModel[]>(environment.urlapi + environment.apiContextDrivers + 'Project/lista', {headers});\n    }\n\n    updateProjects(arrayToDb : any) {\n        return this.http.put(environment.urlapi+environment.apiContextDrivers+'Project/actualizar',arrayToDb, {headers});\n    }\n\n    insertProjects(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Project/registrar',arrayToDb, {headers});\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { observable, Observable, of } from 'rxjs';\nimport { quotationListModel } from 'src/app/models/quotation-list.model';\nimport { environment } from 'src/environments/environment';\nimport { from } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\nconst headers : HttpHeaders = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class quotationservice {\n\n  constructor(protected http: HttpClient) { }\n\n    getQuotationAll() {\n        return this.http.get<quotationListModel[]>(environment.urlapi + environment.apiContextDrivers + 'Quote/lista', {headers});\n    }\n\n    getQuotationById(id : any) {\n        return this.http.get<quotationListModel[]>(environment.urlapi + environment.apiContextDrivers + 'Quote/' + id, {headers});\n    }\n\n    getQuotationDetail(id : any) {\n        return this.http.get<quotationListModel[]>(environment.urlapi + environment.apiContextDrivers + 'Quote/detalle/' + id, {headers});\n    }\n\n    insertQuotation(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Quote/registrar',arrayToDb, {headers});\n    }\n\n    insertQuotationDetail(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Quote/registrar/detalle',arrayToDb, {headers});\n    }\n\n    insertQuotationCancel(id : any) {\n        // return this.http.put(environment.urlapi + environment.apiContextDrivers + 'Quotation/cancelar' + id);\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { observable, Observable, of } from 'rxjs';\nimport { requisitionModel } from 'src/app/models/requisition.model';\nimport { requisitionModelDetail } from 'src/app/models/requisition.model.detail';\nimport { environment } from 'src/environments/environment';\nimport { from } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\nconst headers : HttpHeaders = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class requisitionservice {\n\n  constructor(protected http: HttpClient) { }\n\n    getRequisitionAll() {\n        return this.http.get<requisitionModel[]>(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/lista', {headers});\n    }\n\n    getRequisitionById(id : any) {\n        return this.http.get<requisitionModel[]>(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/' + id, {headers});\n    }\n\n    getRequisitionDetail(id : any) {\n        return this.http.get<requisitionModelDetail[]>(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/detalle/' + id, {headers});\n    }\n\n    insertRequisition(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'InternalRequisition/registrar',arrayToDb, {headers});\n    }\n\n    insertRequisitionDetail(arrayToDb : any) {\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'InternalRequisition/registrar/detalle',arrayToDb, {headers});\n    }\n\n    insertRequisitionCancel(id : any) {\n        // return this.http.put(environment.urlapi + environment.apiContextDrivers + 'InternalRequisition/cancelar' + id);\n    }\n\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { supplierModel } from 'src/app/models/supplier.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nconst headers : HttpHeaders = new HttpHeaders()\r\n    .set('Content-Type', 'application/json')\r\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\r\n    \r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class supplyservice {\r\n\r\n  constructor(protected http: HttpClient) { }\r\n\r\n    getsupplyAll() {\r\n        return this.http.get<supplierModel[]>(environment.urlapi + environment.apiContextDrivers + 'Provider/lista', {headers});\r\n    }\r\n\r\n    getsupplyById(id : any) {\r\n        return this.http.get<supplierModel[]>(environment.urlapi + environment.apiContextDrivers + 'Provider/' + id, {headers});\r\n    }\r\n\r\n    insertsupply(arrayToDb : any) {\r\n        return this.http.post(environment.urlapi+environment.apiContextDrivers+'Provider/registrar',arrayToDb, {headers});\r\n    }\r\n\r\n    updatesupply(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi + environment.apiContextDrivers + 'Provider/actualizar', arrayToDb, {headers});\r\n    }\r\n\r\n    putsupplyStatus(arrayToDb : any) {\r\n        return this.http.put(environment.urlapi + environment.apiContextDrivers + 'Provider/activoinactivo', arrayToDb, {headers});\r\n    }\r\n\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GlobalUrl } from './webapiurl';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  public url: string;\n\n  constructor(private http: HttpClient) {\n    // this.url = GlobalUrl.url_webapi;\n    this.url = environment.urlapi + environment.apiContextDrivers\n  }\n\n  getAllUser(): Observable<any> {\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.get(this.url + 'empleado/listar/todos/', {headers});\n  }\n\n  getAllUserGP(): Observable<any> {\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.get(this.url + 'empleado/listar/todos/nombres', {headers});\n  }\n\n  getAllEmployee(): Observable<any> {\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.get(this.url + 'empleado/listar/brasil/', {headers});\n  }\n\n  postRegisterEmployee(employeeObj: any): Observable<any> {\n    const params = JSON.stringify(employeeObj);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/registrar/', params, {headers});\n  }\n\n  postUpdateEmployee(employeeObj: any): Observable<any> {\n    const params = JSON.stringify(employeeObj);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/actualizar/' + employeeObj.resourceid, params, {headers});\n  }\n\n  postDeleteEmployee(resourceid: any): Observable<any> {\n    const params = JSON.stringify(resourceid);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/eliminar/' + resourceid, params, {headers});\n  }\n\n  postRegisterUser(userObj: any): Observable<any> {\n    const params = JSON.stringify(userObj);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/registrar/usuario/', params, {headers});\n  }\n\n  postUpdateUser(userObj: any): Observable<any> {\n    const params = JSON.stringify(userObj);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/actualizar/usuario/' + userObj.resourceid, params, {headers});\n  }\n\n  postDeleteUser(userid: any): Observable<any> {\n    const params = JSON.stringify(userid);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/eliminar/usuario/' + userid, params, {headers});\n  }\n\n  getPermission(userid): Observable<any> {\n    const params = JSON.stringify(userid);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/permiso/listar/' + userid, params, {headers});\n  }\n\n  getCountry(userid): Observable<any> {\n    const params = JSON.stringify(userid);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/pais/listar/' + userid, params, {headers});\n  }\n\n  getSubProjectJoinUser(userid): Observable<any> {\n    const params = JSON.stringify(userid);\n    const headers = new HttpHeaders()\n    .set('Content-Type', 'application/json')\n    .append('Authorization', 'Bearer ' + localStorage.getItem('token_access'));\n    return this.http.post(this.url + 'empleado/buscar_subproyecto/' + userid, params, {headers});\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  AfterViewInit,\n  AfterContentChecked\n} from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\nimport { filter } from 'rxjs/operators';\n\n@Directive({\n  selector: '[appAccordion]'\n})\nexport class AccordionDirective implements AfterContentChecked {\n  protected navlinks: Array<AccordionLinkDirective> = [];\n\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link !== selectedLink) {\n        link.selected = false;\n      }\n    });\n  }\n\n  addLink(link: AccordionLinkDirective): void {\n    this.navlinks.push(link);\n  }\n\n  removeGroup(link: AccordionLinkDirective): void {\n    const index = this.navlinks.indexOf(link);\n    if (index !== -1) {\n      this.navlinks.splice(index, 1);\n    }\n  }\n\n  checkOpenLinks() {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link.group) {\n        const routeUrl = this.router.url;\n        const currentUrl = routeUrl.split('/');\n        if (currentUrl.indexOf(link.group) > 0) {\n          link.selected = true;\n          this.closeOtherLinks(link);\n        }\n      }\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe(e => this.checkOpenLinks());\n  }\n\n  constructor(private router: Router) {\n    setTimeout(() => this.checkOpenLinks());\n  }\n}\n","import { Directive, HostListener, Inject } from '@angular/core';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\n\n@Directive({\n  selector: '[appAccordionToggle]'\n})\nexport class AccordionAnchorDirective {\n  protected navlink: AccordionLinkDirective;\n\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\n    this.navlink = navlink;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(e: any) {\n    this.navlink.toggle();\n  }\n}\n","import {\n  Directive,\n  HostBinding,\n  Inject,\n  Input,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\n\nimport { AccordionDirective } from './accordion.directive';\n\n@Directive({\n  selector: '[appAccordionLink]'\n})\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\n  @Input()\n  public group: any;\n\n  @HostBinding('class.selected')\n  @Input()\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  set selected(value: boolean) {\n    this._selected = value;\n    if (value) {\n      this.nav.closeOtherLinks(this);\n    }\n  }\n\n  protected _selected: boolean=false;\n  protected nav: AccordionDirective;\n\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\n    this.nav = nav;\n  }\n\n  ngOnInit(): any {\n    this.nav.addLink(this);\n  }\n\n  ngOnDestroy(): any {\n    this.nav.removeGroup(this);\n  }\n\n  toggle(): any {\n    this.selected = !this.selected;\n  }\n}\n","export * from './accordionanchor.directive';\nexport * from './accordionlink.directive';\nexport * from './accordion.directive';\n","import { Injectable } from '@angular/core';\n\nexport interface Menu {\n  state: string;\n  name: string;\n  type: string;\n  icon: string;\n}\n\nconst MENUITEMS = [\n  { state: 'dashboard', name: 'Dashboard', type: 'link', icon: 'av_timer' },\n  { state: 'project', name: 'Proyecto', type: 'link', icon: 'view_comfy' },\n  { state: 'requisition', name: 'Requisiciones', type: 'link', icon: 'view_list' },\n  { state: 'quotation', name: 'Cotizaciones', type: 'link', icon: 'web' },\n  { state: 'po', name: 'Orden de compra', type: 'link', icon: 'tab' },\n  { state: 'storage', name: 'Almacén', type: 'link', icon: 'assignment_turned_in' },\n  { state: 'warehouse-review', name: 'Revisión en Almacén', type: 'link', icon: 'assignment_turned_in' },\n  { state: 'customer', name: 'Clientes', type: 'link', icon: 'assignment_turned_in' },\n  { state: 'supplier', name: 'Proveedores', type: 'link', icon: 'assignment_turned_in' },\n  // { state: 'button', type: 'link', name: 'Buttons', icon: 'crop_7_5' },\n  // { state: 'grid', type: 'link', name: 'Grid List', icon: 'view_comfy' },\n  // { state: 'lists', type: 'link', name: 'Lists', icon: 'view_list' },\n  // { state: 'menu', type: 'link', name: 'Menu', icon: 'view_headline' },\n  // { state: 'tabs', type: 'link', name: 'Tabs', icon: 'tab' },\n  // { state: 'stepper', type: 'link', name: 'Stepper', icon: 'web' },\n  // {\n  //   state: 'expansion',\n  //   type: 'link',\n  //   name: 'Expansion Panel',\n  //   icon: 'vertical_align_center'\n  // },\n  // { state: 'chips', type: 'link', name: 'Chips', icon: 'vignette' },\n  // { state: 'toolbar', type: 'link', name: 'Toolbar', icon: 'voicemail' },\n  // {\n  //   state: 'progress-snipper',\n  //   type: 'link',\n  //   name: 'Progress snipper',\n  //   icon: 'border_horizontal'\n  // },\n  // {\n  //   state: 'progress',\n  //   type: 'link',\n  //   name: 'Progress Bar',\n  //   icon: 'blur_circular'\n  // },\n  // {\n  //   state: 'dialog',\n  //   type: 'link',\n  //   name: 'Dialog',\n  //   icon: 'assignment_turned_in'\n  // },\n  // { state: 'tooltip', type: 'link', name: 'Tooltip', icon: 'assistant' },\n  // { state: 'snackbar', type: 'link', name: 'Snackbar', icon: 'adb' },\n  // { state: 'slider', type: 'link', name: 'Slider', icon: 'developer_mode' },\n  // {\n  //   state: 'slide-toggle',\n  //   type: 'link',\n  //   name: 'Slide Toggle',\n  //   icon: 'all_inclusive'\n  // }\n];\n\n@Injectable()\nexport class MenuItems {\n  getMenuitem(): Menu[] {\n    return MENUITEMS;\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MenuItems } from './menu-items/menu-items';\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\n\n\n@NgModule({\n  declarations: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective\n  ],\n  exports: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective\n   ],\n  providers: [ MenuItems ]\n})\nexport class SharedModule { }\n","import { Component, Input, OnDestroy, Inject, ViewEncapsulation } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-spinner',\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\n        <div class=\"spinner\">\n          <div class=\"double-bounce1\"></div>\n          <div class=\"double-bounce2\"></div>\n        </div>\n    </div>`,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SpinnerComponent implements OnDestroy {\n  public isSpinnerVisible = true;\n\n  @Input()\n  public backgroundColor = 'rgba(0, 115, 170, 0.69)';\n\n  constructor(\n    private router: Router,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.router.events.subscribe(\n      event => {\n        if (event instanceof NavigationStart) {\n          this.isSpinnerVisible = true;\n        } else if (\n          event instanceof NavigationEnd ||\n          event instanceof NavigationCancel ||\n          event instanceof NavigationError\n        ) {\n          this.isSpinnerVisible = false;\n        }\n      },\n      () => {\n        this.isSpinnerVisible = false;\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.isSpinnerVisible = false;\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  urlapi : 'https://sap-comercial.azurewebsites.net/',\n  apiContextDrivers : 'api/'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","var map = {\n\t\"./af\": 26431,\n\t\"./af.js\": 26431,\n\t\"./ar\": 81286,\n\t\"./ar-dz\": 1616,\n\t\"./ar-dz.js\": 1616,\n\t\"./ar-kw\": 9759,\n\t\"./ar-kw.js\": 9759,\n\t\"./ar-ly\": 43160,\n\t\"./ar-ly.js\": 43160,\n\t\"./ar-ma\": 62551,\n\t\"./ar-ma.js\": 62551,\n\t\"./ar-sa\": 79989,\n\t\"./ar-sa.js\": 79989,\n\t\"./ar-tn\": 6962,\n\t\"./ar-tn.js\": 6962,\n\t\"./ar.js\": 81286,\n\t\"./az\": 15887,\n\t\"./az.js\": 15887,\n\t\"./be\": 14572,\n\t\"./be.js\": 14572,\n\t\"./bg\": 3276,\n\t\"./bg.js\": 3276,\n\t\"./bm\": 93344,\n\t\"./bm.js\": 93344,\n\t\"./bn\": 58985,\n\t\"./bn-bd\": 83990,\n\t\"./bn-bd.js\": 83990,\n\t\"./bn.js\": 58985,\n\t\"./bo\": 94391,\n\t\"./bo.js\": 94391,\n\t\"./br\": 46728,\n\t\"./br.js\": 46728,\n\t\"./bs\": 5536,\n\t\"./bs.js\": 5536,\n\t\"./ca\": 41043,\n\t\"./ca.js\": 41043,\n\t\"./cs\": 70420,\n\t\"./cs.js\": 70420,\n\t\"./cv\": 33513,\n\t\"./cv.js\": 33513,\n\t\"./cy\": 6771,\n\t\"./cy.js\": 6771,\n\t\"./da\": 47978,\n\t\"./da.js\": 47978,\n\t\"./de\": 46061,\n\t\"./de-at\": 25204,\n\t\"./de-at.js\": 25204,\n\t\"./de-ch\": 2653,\n\t\"./de-ch.js\": 2653,\n\t\"./de.js\": 46061,\n\t\"./dv\": 85,\n\t\"./dv.js\": 85,\n\t\"./el\": 8579,\n\t\"./el.js\": 8579,\n\t\"./en-au\": 25724,\n\t\"./en-au.js\": 25724,\n\t\"./en-ca\": 10525,\n\t\"./en-ca.js\": 10525,\n\t\"./en-gb\": 52847,\n\t\"./en-gb.js\": 52847,\n\t\"./en-ie\": 67216,\n\t\"./en-ie.js\": 67216,\n\t\"./en-il\": 39305,\n\t\"./en-il.js\": 39305,\n\t\"./en-in\": 73364,\n\t\"./en-in.js\": 73364,\n\t\"./en-nz\": 79130,\n\t\"./en-nz.js\": 79130,\n\t\"./en-sg\": 11161,\n\t\"./en-sg.js\": 11161,\n\t\"./eo\": 50802,\n\t\"./eo.js\": 50802,\n\t\"./es\": 40328,\n\t\"./es-do\": 45551,\n\t\"./es-do.js\": 45551,\n\t\"./es-mx\": 75615,\n\t\"./es-mx.js\": 75615,\n\t\"./es-us\": 64790,\n\t\"./es-us.js\": 64790,\n\t\"./es.js\": 40328,\n\t\"./et\": 96389,\n\t\"./et.js\": 96389,\n\t\"./eu\": 52961,\n\t\"./eu.js\": 52961,\n\t\"./fa\": 26151,\n\t\"./fa.js\": 26151,\n\t\"./fi\": 7997,\n\t\"./fi.js\": 7997,\n\t\"./fil\": 58898,\n\t\"./fil.js\": 58898,\n\t\"./fo\": 37779,\n\t\"./fo.js\": 37779,\n\t\"./fr\": 28174,\n\t\"./fr-ca\": 3287,\n\t\"./fr-ca.js\": 3287,\n\t\"./fr-ch\": 38867,\n\t\"./fr-ch.js\": 38867,\n\t\"./fr.js\": 28174,\n\t\"./fy\": 50452,\n\t\"./fy.js\": 50452,\n\t\"./ga\": 45014,\n\t\"./ga.js\": 45014,\n\t\"./gd\": 74127,\n\t\"./gd.js\": 74127,\n\t\"./gl\": 72124,\n\t\"./gl.js\": 72124,\n\t\"./gom-deva\": 6444,\n\t\"./gom-deva.js\": 6444,\n\t\"./gom-latn\": 37953,\n\t\"./gom-latn.js\": 37953,\n\t\"./gu\": 76604,\n\t\"./gu.js\": 76604,\n\t\"./he\": 1222,\n\t\"./he.js\": 1222,\n\t\"./hi\": 74235,\n\t\"./hi.js\": 74235,\n\t\"./hr\": 622,\n\t\"./hr.js\": 622,\n\t\"./hu\": 37735,\n\t\"./hu.js\": 37735,\n\t\"./hy-am\": 90402,\n\t\"./hy-am.js\": 90402,\n\t\"./id\": 59187,\n\t\"./id.js\": 59187,\n\t\"./is\": 30536,\n\t\"./is.js\": 30536,\n\t\"./it\": 35007,\n\t\"./it-ch\": 94667,\n\t\"./it-ch.js\": 94667,\n\t\"./it.js\": 35007,\n\t\"./ja\": 62093,\n\t\"./ja.js\": 62093,\n\t\"./jv\": 80059,\n\t\"./jv.js\": 80059,\n\t\"./ka\": 66870,\n\t\"./ka.js\": 66870,\n\t\"./kk\": 80880,\n\t\"./kk.js\": 80880,\n\t\"./km\": 1083,\n\t\"./km.js\": 1083,\n\t\"./kn\": 68785,\n\t\"./kn.js\": 68785,\n\t\"./ko\": 21721,\n\t\"./ko.js\": 21721,\n\t\"./ku\": 37851,\n\t\"./ku.js\": 37851,\n\t\"./ky\": 1727,\n\t\"./ky.js\": 1727,\n\t\"./lb\": 40346,\n\t\"./lb.js\": 40346,\n\t\"./lo\": 93002,\n\t\"./lo.js\": 93002,\n\t\"./lt\": 64035,\n\t\"./lt.js\": 64035,\n\t\"./lv\": 56927,\n\t\"./lv.js\": 56927,\n\t\"./me\": 5634,\n\t\"./me.js\": 5634,\n\t\"./mi\": 94173,\n\t\"./mi.js\": 94173,\n\t\"./mk\": 86320,\n\t\"./mk.js\": 86320,\n\t\"./ml\": 11705,\n\t\"./ml.js\": 11705,\n\t\"./mn\": 31062,\n\t\"./mn.js\": 31062,\n\t\"./mr\": 92805,\n\t\"./mr.js\": 92805,\n\t\"./ms\": 11341,\n\t\"./ms-my\": 59900,\n\t\"./ms-my.js\": 59900,\n\t\"./ms.js\": 11341,\n\t\"./mt\": 37734,\n\t\"./mt.js\": 37734,\n\t\"./my\": 19034,\n\t\"./my.js\": 19034,\n\t\"./nb\": 9324,\n\t\"./nb.js\": 9324,\n\t\"./ne\": 46495,\n\t\"./ne.js\": 46495,\n\t\"./nl\": 70673,\n\t\"./nl-be\": 76272,\n\t\"./nl-be.js\": 76272,\n\t\"./nl.js\": 70673,\n\t\"./nn\": 72486,\n\t\"./nn.js\": 72486,\n\t\"./oc-lnc\": 46219,\n\t\"./oc-lnc.js\": 46219,\n\t\"./pa-in\": 2829,\n\t\"./pa-in.js\": 2829,\n\t\"./pl\": 78444,\n\t\"./pl.js\": 78444,\n\t\"./pt\": 53170,\n\t\"./pt-br\": 66117,\n\t\"./pt-br.js\": 66117,\n\t\"./pt.js\": 53170,\n\t\"./ro\": 96587,\n\t\"./ro.js\": 96587,\n\t\"./ru\": 39264,\n\t\"./ru.js\": 39264,\n\t\"./sd\": 42135,\n\t\"./sd.js\": 42135,\n\t\"./se\": 95366,\n\t\"./se.js\": 95366,\n\t\"./si\": 93379,\n\t\"./si.js\": 93379,\n\t\"./sk\": 46143,\n\t\"./sk.js\": 46143,\n\t\"./sl\": 196,\n\t\"./sl.js\": 196,\n\t\"./sq\": 21082,\n\t\"./sq.js\": 21082,\n\t\"./sr\": 91621,\n\t\"./sr-cyrl\": 98963,\n\t\"./sr-cyrl.js\": 98963,\n\t\"./sr.js\": 91621,\n\t\"./ss\": 41404,\n\t\"./ss.js\": 41404,\n\t\"./sv\": 55685,\n\t\"./sv.js\": 55685,\n\t\"./sw\": 3872,\n\t\"./sw.js\": 3872,\n\t\"./ta\": 54106,\n\t\"./ta.js\": 54106,\n\t\"./te\": 39204,\n\t\"./te.js\": 39204,\n\t\"./tet\": 83692,\n\t\"./tet.js\": 83692,\n\t\"./tg\": 86361,\n\t\"./tg.js\": 86361,\n\t\"./th\": 31735,\n\t\"./th.js\": 31735,\n\t\"./tk\": 1568,\n\t\"./tk.js\": 1568,\n\t\"./tl-ph\": 96129,\n\t\"./tl-ph.js\": 96129,\n\t\"./tlh\": 13759,\n\t\"./tlh.js\": 13759,\n\t\"./tr\": 81644,\n\t\"./tr.js\": 81644,\n\t\"./tzl\": 90875,\n\t\"./tzl.js\": 90875,\n\t\"./tzm\": 16878,\n\t\"./tzm-latn\": 11041,\n\t\"./tzm-latn.js\": 11041,\n\t\"./tzm.js\": 16878,\n\t\"./ug-cn\": 74357,\n\t\"./ug-cn.js\": 74357,\n\t\"./uk\": 74810,\n\t\"./uk.js\": 74810,\n\t\"./ur\": 86794,\n\t\"./ur.js\": 86794,\n\t\"./uz\": 28966,\n\t\"./uz-latn\": 77959,\n\t\"./uz-latn.js\": 77959,\n\t\"./uz.js\": 28966,\n\t\"./vi\": 35386,\n\t\"./vi.js\": 35386,\n\t\"./x-pseudo\": 23156,\n\t\"./x-pseudo.js\": 23156,\n\t\"./yo\": 68028,\n\t\"./yo.js\": 68028,\n\t\"./zh-cn\": 9330,\n\t\"./zh-cn.js\": 9330,\n\t\"./zh-hk\": 89380,\n\t\"./zh-hk.js\": 89380,\n\t\"./zh-mo\": 60874,\n\t\"./zh-mo.js\": 60874,\n\t\"./zh-tw\": 96508,\n\t\"./zh-tw.js\": 96508\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}