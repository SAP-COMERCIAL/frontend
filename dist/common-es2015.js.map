{"version":3,"sources":["./src/app/pages/catcustomer/customer/customer.component.ts","./src/app/pages/catcustomer/customer/customer.component.html","./src/app/pages/supplier/supplier.component.ts","./src/app/pages/supplier/supplier.component.html"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { customerModel } from 'src/app/models/customer.model';\nimport { customerservice } from 'src/app/services/customer.service';\nimport { CustomerDetailComponent } from 'src/app/components/customer-detail/customer-detail.component';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport * as moment from 'moment';\nimport { AbstractControl, FormBuilder } from '@angular/forms';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport { MatSortModule } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/table';\nimport { ProjectCaptureDetailComponent } from 'src/app/components/project-capture-detail/project-capture-detail/project-capture-detail.component';\nimport { CategoriesComponent } from 'src/app/components/categories/categories/categories.component';\nimport { ExcelServiceService } from 'src/app/helpers/excel-service.service';\nimport { getMatFormFieldPlaceholderConflictError } from '@angular/material/form-field';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\n\nexport class CustomerComponent implements OnInit {\n\n// =================\n// DECLARACIONES\n// =================\n\n// Para paginaci√≥n\npublic pageIndex:number = 0;\npublic pageSize:number = 20;\npublic currentPage = 0;\npublic totalSize:number = 0;\npublic array: any;\ndataSourceShow : MatTableDataSource<customerModel>\n\n  @ViewChild(MatSort,{static:true}) sort: MatSort;\n  @ViewChild(MatPaginator,{static:true}) paginator: MatPaginator;\n  @Output() filterChange = new EventEmitter();\n\n  displayedColumns = ['id', 'nombre', 'direccion', 'rfc', 'estado', 'edit'];\n\n  constructor(public dialog: MatDialog\n    , private _excelService : ExcelServiceService\n    , private _customerservice : customerservice) { }\n\n  // =================\n  // PROCEDIMIENTOS\n  // =================\n\n  ngOnInit(): void {\n\n    this.getcustomer();\n  }\n\n  descargarExcel(){\n    console.log('Descargar a excel');\n    let dataSourceShowToExcel : any[] = [];\n\n  this.dataSourceShow.filteredData.forEach(element => {\n    dataSourceShowToExcel.push({\n                              nombre : element.nombre\n                              , direccion : element.direccion\n                              , RFC : element.rfc\n                              , estatus : element.estado\n      })\n    });\n\n    this._excelService.exportAsExcelFile(dataSourceShowToExcel, 'Clientes');  \n  }\n\n  newcustomer(evetn){\n    console.log('Alta de cliente');\n\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.data = {\n      id: 1,\n      title: 'CLIENTE',\n      arrayData : null,\n      requisicionId: 0\n     \n    }\n    dialogConfig.width = '1300px';\n    dialogConfig.height = '900px';\n    dialogConfig.disableClose = true;\n\n    const dialogRef = this.dialog.open(CustomerDetailComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(result => {\n      // window.location.reload();\n    });\n  }\n\n  filtrar(event : Event){\n    const filtro = (event.target as HTMLInputElement).value;\n    this.dataSourceShow.filter = filtro.trim().toLowerCase();\n    console.log('filtro', filtro);\n  }\n\n  // =================\n  // UTILERIAS\n  // =================\n\n  public handlePage(e: any) {\n    this.currentPage = e.pageIndex;\n    this.pageSize = e.pageSize;\n    this.iterator();\n  }\n\n  private iterator() {\n    const end = (this.currentPage + 1) * this.pageSize;\n    const start = this.currentPage * this.pageSize;\n    const part = this.array.slice(0, this.totalSize);\n    this.dataSourceShow = new MatTableDataSource(part);\n    this.dataSourceShow.sort = this.sort;\n    this.dataSourceShow.paginator = this.paginator;\n  }\n\n  // =================\n  // SERVICIOS\n  // =================\n\n  getcustomer(){\n    // Proyectos registrados\n    this._customerservice.getcustomerAll().subscribe(\n      res=> {\n        console.log('Clientes', res);\n        this.dataSourceShow = new MatTableDataSource(res);\n        this.array = res;\n        this.totalSize = this.array.length;\n        \n        this.iterator();\n        this.dataSourceShow.sort = this.sort;\n        \n      },\n      error => console.log(\"error consulta regiones\",error)\n    )\n  }\n\n}\n","<div class=\"header bg-gradient-danger pb-8 pt-5 pt-md-8\">\n    <div class=\"container-fluid\">\n        <div class=\"header-body\">\n            <!-- Card stats -->\n        </div>\n    </div>\n</div>\n<!-- Page content -->\n<div class=\"container-fluid mt--7\">\n\n    <!-- Table -->\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"card shadow\">\n                <div class=\"card-header border-0\">\n                    <h3 class=\"mb-0\">Clientes</h3>\n                </div>\n\n                <!-- <form> -->\n\n                <h6 class=\"heading-small text-muted mb-4\"></h6>\n                <hr class=\"my-4\" />\n                <!-- </form> -->\n                <div class=\"card\">\n                    <table>\n                        <tr>\n                            <td class=\"col20\"><input type=\"text\" class=\"form-control form-control-line\"\n                                    placeholder=\"BUSCAR\" (keyup)=\"filtrar($event)\">\n                            </td>\n                            <td class=\"col70\"></td>\n                            <td class=\"col10\"><button mat-raised-button color=\"primary\"\n                                    (click)=\"descargarExcel()\">Descargar</button></td>\n                            <td class=\"col10\"><button mat-raised-button color=\"accent\"\n                                    (click)=\"newcustomer($event)\">Nuevo Cliente</button></td>\n                            <td class=\"col10\"></td>\n                        </tr>\n                    </table>\n                    <br>\n                </div>\n\n                <!-- INICIA CUERPO DE LA P√ÅGINA-->\n                <div class=\"col-12 col-md-12 p-0\">\n                    <div class=\"card\">\n                        <div class=\"card-body card-body-table\">\n                            <!-- <mat-table [dataSource]=\"dataSourceShow\" matSort class=\"mat-elevation-z8\"\n                                style=\"width: 95%;\">\n\n                                \n                                <ng-container matColumnDef=\"id\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\">\n                                        id </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n                                </ng-container>\n\n                                \n                                <ng-container matColumnDef=\"nombre\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col30\">\n                                        Nombre </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.nombre}} </td>\n                                </ng-container>\n\n                                \n                                <ng-container matColumnDef=\"direccion\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> Direcci√≥n\n                                    </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.direccion}} </td>\n                                </ng-container>\n\n                                \n                                <ng-container matColumnDef=\"rfc\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col10\"> rfc </th>\n                                    <td mat-cell *matCellDef=\"let element\"> {{element.rfc}}\n                                    </td>\n                                </ng-container>\n\n                                \n                                <ng-container matColumnDef=\"estado\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"col20\"> Estatus </th>\n                                    <td mat-cell *matCellDef=\"let element\">\n                                        <ng-container *ngIf=\"element.estado == true\">ACTIVO</ng-container>\n                                        <ng-container *ngIf=\"element.estado == false\">INACTIVO</ng-container>\n                                    </td>\n                                </ng-container>\n\n                                \n                                <ng-container matColumnDef=\"edit\">\n                                    <th mat-header-cell *matHeaderCellDef class=\".colbuttons\"> Consultar </th>\n                                    <td mat-cell *matCellDef=\"let element\"> <button mat-button color=\"primary\"\n                                            (click)=\"edit(element, $event)\">Consultar</button> </td>\n                                </ng-container>\n\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                            </mat-table> -->\n\n                        </div>\n                        <!-- <mat-paginator [pageSizeOptions]=\"[20, 100, 150]\" [showFirstLastButtons]=\"true\"\n                            [pageSize]=\"pageSize\" [length]=\"totalSize\" (page)=\"handlePage($event)\" style=\"width: 95%;\">\n                        </mat-paginator> -->\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-supplier',\n  templateUrl: './supplier.component.html',\n  styleUrls: ['./supplier.component.css']\n})\nexport class SupplierComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>supplier works!</p>\n"],"sourceRoot":"webpack:///"}